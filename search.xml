<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>云班课作业互评(python3+selenium)</title>
      <link href="17196.html"/>
      <url>17196.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>本文章最初发布在 <a href="https://plushine.cn">XJHui’s Blog</a>，未经允许，任何人禁止转载！</p><p><font color="red" style="font-weight:700">注意：</font>最新修改版本已发布在 <a href="https://plushine.cn/17196.html">这里</a>，点击前往查看！</p><h1 id="Yunbanke-auto"><a href="#Yunbanke-auto" class="headerlink" title="Yunbanke-auto"></a>Yunbanke-auto</h1><p>云班课作业互评（python3+selenium）</p><p>github项目地址：<a href="https://github.com/319np666/Yunbanke-Auto">https://github.com/319np666/Yunbanke-Auto</a></p><h1 id="项目介绍"><a href="#项目介绍" class="headerlink" title="项目介绍"></a>项目介绍</h1><h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><ol><li>自动登录、进入课程</li><li>统计互评作业总数、需要互评数目</li><li>根据自定义的评分值对作业进行互评</li></ol><h2 id="使用须知"><a href="#使用须知" class="headerlink" title="使用须知"></a>使用须知</h2><ul><li>需要python3环境</li><li>仅供学习参考使用，任何商业用途后果自负</li></ul><h2 id="语言库"><a href="#语言库" class="headerlink" title="语言库"></a>语言库</h2><ul><li>python 3.8</li><li>selenium 3.141.0</li><li>pyyaml 5.3.1</li></ul><h1 id="使用该项目"><a href="#使用该项目" class="headerlink" title="使用该项目"></a>使用该项目</h1><h2 id="安装库"><a href="#安装库" class="headerlink" title="安装库"></a>安装库</h2><ul><li>pip install selenium</li><li>pip install pyyaml</li></ul><h2 id="安装浏览器驱动"><a href="#安装浏览器驱动" class="headerlink" title="安装浏览器驱动"></a>安装浏览器驱动</h2><ol><li>教程：<a href="https://plushine.cn/22094.html#%E6%B5%8F%E8%A7%88%E5%99%A8%E5%8F%8A%E9%A9%B1%E5%8A%A8">Chrome驱动</a></li><li>浏览器推荐：Chrome，新版Edge（未做测试）</li></ol><h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><ol><li><p>下载项目后，解压缩</p></li><li><p>打开项目，找到 <code>userData.yml</code> 文件：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/22/1370c4972332f9e384ad9caeb6a36305.png" width="70%"/><p>注意：老师姓名和课程名称要与云班课中一致</p></li></ol><h2 id="运行项目"><a href="#运行项目" class="headerlink" title="运行项目"></a>运行项目</h2><ul><li><p>运行 <code>index.py</code> 文件即可开始互评项目：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/22/fa03e7028e0a87e8e121c5b1bb2794ce.png" width="70%"/><p>注意：程序未进行异常处理，运行本项目前请确保配置文件填写正确</p></li><li><p>配置文件正确填写依然报错，请联系作者</p></li></ul><hr><p>不足之处，欢迎留言，会及时回复，及时更正！</p><p>创作不易，感谢支持！</p>]]></content>
      
      
      <categories>
          
          <category> python项目 </category>
          
          <category> python脚本 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Selenium Web自动化（Python3）</title>
      <link href="22094.html"/>
      <url>22094.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>本文章最初发布在 <a href="https://plushine.cn">XJHui’s Blog</a>，未经允许，任何人禁止转载！</p><p><font color="red" style="font-weight:700">注意：</font>最新修改版本已发布在 <a href="https://plushine.cn/22094.html">这里</a>，点击前往查看！</p><h1 id="关于笔记"><a href="#关于笔记" class="headerlink" title="关于笔记"></a>关于笔记</h1><ol><li>视频地址：<a href="https://www.bilibili.com/video/BV1Z4411o7TA?p=1">bilibili-白月黑羽教编程(34p)</a></li><li>课件、笔记：<a href="http://www.python3.vip/tut/auto/selenium/01/">http://www.python3.vip/tut/auto/selenium/01/</a></li><li>学前技能：<ul><li>python基础</li><li>python3环境、python解释器</li><li>前端基础（html、css）</li></ul></li><li>学后技能：<ul><li>web自动化</li><li>python小脚本</li><li>爬虫（不推荐）</li></ul></li></ol><h1 id="selenium库"><a href="#selenium库" class="headerlink" title="selenium库"></a>selenium库</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><ol><li><p>定义：是一个web的自动化测试工具</p></li><li><p>官方文档：<a href="https://selenium-python.readthedocs.io/index.html">Selenium with Python</a></p></li><li><p>功能：python中导入selenium库后通过调用函数实现在浏览器中模拟鼠标点击、移动等操作</p></li><li><p>使用范围：</p><ul><li>模拟登陆</li><li>刷网课</li></ul></li></ol><h2 id="原理图"><a href="#原理图" class="headerlink" title="原理图"></a>原理图</h2><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/15/2208c15e496d23bbb280527af4fef9d6.png" width="80%"/><p>注意：</p><ol><li>安装：selenium库、浏览器（chrome为例）以及浏览器对应版本的驱动</li><li>使用：想实现 <code>点击</code> 操作，只需要调用selenium库中函数</li><li>兼容性：支持Java，Python等多种语言</li></ol><h2 id="安装库"><a href="#安装库" class="headerlink" title="安装库"></a>安装库</h2><ol><li><p>执行命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install selenium -i https://mirror.baidu.com/pypi/simple  # 为了保证安装速度，使用了百度镜像</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/15/a3827c3fa5b795521b044799e67cbcb0.png" width="70%"/></li><li><p>验证安装：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> selenium  <span class="comment"># 导入selenium库</span></span><br><span class="line">print(selenium.__version__)  <span class="comment"># 查看版本号</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/15/71616218e3708f44d9f38feb300cc81b.png" width="70%"/></li></ol><h2 id="浏览器及驱动"><a href="#浏览器及驱动" class="headerlink" title="浏览器及驱动"></a>浏览器及驱动</h2><ol><li><p>安装浏览器：<a href="https://www.google.cn/chrome/">点这里下载</a></p></li><li><p>安装驱动：</p><ul><li><p>查看chrome版本：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/15/a82a624279dcf50c9d08aa51a7112781.png" width="70%"/></li><li><p>点击 <a href="https://chromedriver.storage.googleapis.com/index.html">这里</a> 查找对应驱动下载并解压：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/15/aafdd98aeb553c5caaab9703510536fe.png" width="70%"/><p>注意：</p><ul><li>驱动和浏览器的版本号越接近越好，略有差别（比如72和73）也行</li><li>解压路径不要出现中文符号、空格等</li><li>解压后为一个.exe文件，不需要安装</li></ul></li></ul></li></ol><h1 id="简单示例"><a href="#简单示例" class="headerlink" title="简单示例"></a>简单示例</h1><h2 id="开启浏览器"><a href="#开启浏览器" class="headerlink" title="开启浏览器"></a>开启浏览器</h2><ol><li><p>代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver  <span class="comment"># 从selenium库中导入web自动化常用的函数</span></span><br><span class="line"></span><br><span class="line">wd = webdriver.Chrome(<span class="string">r&#x27;d:\tool\chromedriver.exe&#x27;</span>)  <span class="comment"># 实例化一个WebDriver类型的对象，参数浏览器驱动路径</span></span><br></pre></td></tr></table></figure><p>注意：</p><ul><li>python默认会将 <code>浏览器驱动路径</code> 中的\转义，在其前面添加 <code>r</code> 表示不转义</li><li>通过创建的wd（webdriver对象）来操控浏览器</li></ul></li><li><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/15/b70250def5627077ef7718167c5db7d2.png" width="70%"/></li></ol><h2 id="跳转网址"><a href="#跳转网址" class="headerlink" title="跳转网址"></a>跳转网址</h2><ol><li><p>代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wd.get(<span class="string">&#x27;https://plushine.cn&#x27;</span>)  <span class="comment"># 使用get方法，打开一个新网址</span></span><br></pre></td></tr></table></figure></li><li><p>运行结果：</p></li></ol><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/16/f98742935362de6ac5f99662bbbe8b46.png" width="70%"/><h1 id="选择元素"><a href="#选择元素" class="headerlink" title="选择元素"></a>选择元素</h1><h2 id="根据id"><a href="#根据id" class="headerlink" title="根据id"></a>根据id</h2><ol><li><p>语法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kw = wd.find_element_by_id(<span class="string">&#x27;kw&#x27;</span>)  <span class="comment"># 根据id选择元素，返回该元素对应的WebElement对象，下文以wb代指</span></span><br></pre></td></tr></table></figure></li><li><p>案例：在百度搜索页面输入plushine并回车</p><ul><li><p>查看文本框的id值（kw）：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/16/05402fc69f45cf2c53f8617cf9a10869.png" width="70%"/><p>注意：控制台查看网页源码的教程 <a href="https://jingyan.baidu.com/article/a501d80c474073ec630f5ed1.html">在这里</a>，感谢：百度经验。</p></li><li><p>查看提交按钮的id值（su）：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/16/dc43469c1eafea3bfe15334ed071d3d5.png" width="70%"/></li><li><p>编写代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">kw = wd.find_element_by_id(<span class="string">&#x27;kw&#x27;</span>)  <span class="comment"># 根据id选择元素</span></span><br><span class="line">kw.send_keys(<span class="string">&#x27;plushine&#x27;</span>)  <span class="comment"># .send_keys()：文本框中输入文字</span></span><br><span class="line"></span><br><span class="line">su = wd.find_element_by_id(<span class="string">&#x27;su&#x27;</span>)</span><br><span class="line">su.click()  <span class="comment"># .click()：点击</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/16/5590477f2fb51c7139e35109216bdcac.png" width="70%"/></li></ul></li></ol><h2 id="根据class"><a href="#根据class" class="headerlink" title="根据class"></a>根据class</h2><ol><li><p>语法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">element = wd.find_elements_by_class_name(<span class="string">&#x27;plant&#x27;</span>)  <span class="comment"># 返回wb类型的对象</span></span><br></pre></td></tr></table></figure><p>注意区分：</p><ul><li>element：返回第一个符合条件的元素的wb对象，找不到抛出异常【NoSuchElementException】</li><li>elements：返回所有符合条件元素的wb对象列表【适合元素的统一处理】，找不到返回空列表</li></ul></li><li><p>案例：选择所有class属性为plant的元素</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/20/81814a3fe0284a2091c9dd037b1bed95.png" width="70%"/><ul><li><p>访问网址，选择元素：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wd.get(<span class="string">&#x27;http://cdn1.python3.vip/files/selenium/sample1.html&#x27;</span>)  <span class="comment"># 打开网址</span></span><br><span class="line"></span><br><span class="line">elements = wd.find_elements_by_class_name(<span class="string">&#x27;plant&#x27;</span>)  <span class="comment"># 查找class等于plant的元素，elements返回列表</span></span><br></pre></td></tr></table></figure></li><li><p>查看对象内容（debug）：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 最后一行添加pass，并断点调试，详见下图</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/16/cc88d744a4342f4e430d1104d3bd6e38.png" width="70%"/><p>注意：如果使用print是无法查看对象内容的：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(elements)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/16/c55992d209327a2b41e7c1cdd46046d8.png" width="70%"/></li><li><p>输出元素text属性值：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> element <span class="keyword">in</span> elements:</span><br><span class="line">    print(element.text)  <span class="comment"># .text：查看内部文字（下文会详解）</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/16/4738238ca06575e01d692497ebace01c.png" width="70%"/></li></ul></li></ol><h2 id="根据tag"><a href="#根据tag" class="headerlink" title="根据tag"></a>根据tag</h2><ol><li><p>代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">spanList = wd.find_elements_by_tag_name(<span class="string">&#x27;span&#x27;</span>)  <span class="comment"># 返回所有标签为span元素的WebElement对象</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> span <span class="keyword">in</span> spanList:</span><br><span class="line">    print(span.text)  <span class="comment"># 输出标签内部文字</span></span><br></pre></td></tr></table></figure></li><li><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/16/a909754c11722cb7ff70ce66cba9b8d4.png" width="70%"/></li></ol><h2 id="根据wb"><a href="#根据wb" class="headerlink" title="根据wb"></a>根据wb</h2><ol><li><p>wb（WebElement）：通过find函数选择元素返回值类型为wb</p></li><li><p>案例：分别从全局和局部选择span标签，判断返回值是否相同</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">wd.get(<span class="string">&#x27;http://cdn1.python3.vip/files/selenium/sample1.html&#x27;</span>)</span><br><span class="line">wb = wd.find_element_by_id(<span class="string">&#x27;container&#x27;</span>)  <span class="comment"># find返回值类型为wb</span></span><br><span class="line"></span><br><span class="line">wdElement = wd.find_elements_by_tag_name(<span class="string">&#x27;span&#x27;</span>)  <span class="comment"># webdriver中查找元素</span></span><br><span class="line">weElement = wb.find_elements_by_tag_name(<span class="string">&#x27;span&#x27;</span>)  <span class="comment"># webelement中查找元素</span></span><br><span class="line"></span><br><span class="line">print(<span class="string">&quot;-------全局范围wd-----&quot;</span>)</span><br><span class="line">print(<span class="built_in">len</span>(wdElement))</span><br><span class="line"></span><br><span class="line">print(<span class="string">&quot;-------局部范围wb-----&quot;</span>)</span><br><span class="line">print(<span class="built_in">len</span>(weElement))</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">   </span><br><span class="line">运行结果：</span><br><span class="line">   </span><br><span class="line">   &lt;img src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;xingjiahui&#x2F;CDN@latest&#x2F;2020&#x2F;10&#x2F;20&#x2F;5d9843f5f36fc578427ab8ae660cbf95.png&quot; width&#x3D;&quot;70%&quot;&#x2F;&gt;</span><br><span class="line"></span><br><span class="line">## 隐式等待</span><br><span class="line"></span><br><span class="line">1. 案例：百度搜索 &#96;plushine&#96; ，获取第一条搜索结果：</span><br><span class="line"></span><br><span class="line">   &lt;img src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;xingjiahui&#x2F;CDN@latest&#x2F;2020&#x2F;10&#x2F;20&#x2F;d7ca6f337c1cc11a0b79b56dfae17dfc.png&quot; width&#x3D;&quot;70%&quot;&#x2F;&gt;</span><br><span class="line">   </span><br><span class="line">   - 程序代码：</span><br><span class="line">   </span><br><span class="line">     &#96;&#96;&#96;python</span><br><span class="line">     wd.get(&#39;https:&#x2F;&#x2F;baidu.com&#39;)  # 访问百度搜素首页</span><br><span class="line">     wd.find_element_by_id(&#39;kw&#39;).send_keys(&#39;plushine\n&#39;)  # 通过id选择元素，通过send_keys()填充文本，\n：回车</span><br><span class="line">     </span><br><span class="line">     element &#x3D; wd.find_element_by_id(&#39;1&#39;)  # 通过id选择元素</span><br><span class="line">     print(element.text)  # 输出返回元素</span><br></pre></td></tr></table></figure><ul><li><p>报错截图：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/17/46006270f13ecc24adf1772e6db98e37.png" width="70%"/></li></ul></li><li><p>原因分析：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">element.send_keys(<span class="string">&#x27;plushine\n&#x27;</span>)  <span class="comment"># 回车后，开始从百度服务器接收数据</span></span><br><span class="line"></span><br><span class="line">element = wd.find_element_by_id(<span class="string">&#x27;1&#x27;</span>)  <span class="comment"># 查找id为1的元素，但此时数据还未完全获取导致查找失败</span></span><br></pre></td></tr></table></figure></li><li><p>解决方法（使用隐式等待）：</p><ul><li><p>语法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wd = webdriver.Chrome(<span class="string">r&#x27;d:\tool\chromedriver.exe&#x27;</span>)  <span class="comment"># 创建Chrome浏览器的WebDriver对象</span></span><br><span class="line">wd.implicitly_wait(<span class="built_in">max</span>)  <span class="comment"># 其中max表示最大等待时间（s）</span></span><br></pre></td></tr></table></figure></li><li><p>原理：当元素查找失败时，会每隔0.5s检查一下能否找到元素，直至最大等待时间报错</p></li></ul></li><li><p>案例：百度搜索 <code>plushine</code> ，获取第一条搜索结果：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"></span><br><span class="line">wd = webdriver.Chrome(<span class="string">r&#x27;d:\tool\chromedriver.exe&#x27;</span>)</span><br><span class="line">wd.implicitly_wait(<span class="number">10</span>)  <span class="comment"># 设置最大等待时间为10s</span></span><br><span class="line"></span><br><span class="line">wd.get(<span class="string">&#x27;https://baidu.com&#x27;</span>)</span><br><span class="line"></span><br><span class="line">wd.find_element_by_id(<span class="string">&#x27;kw&#x27;</span>).send_keys(<span class="string">&#x27;plushine\n&#x27;</span>)</span><br><span class="line"></span><br><span class="line">element = wd.find_element_by_id(<span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">print(element)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/18/cb763473a8120123c6b4f1aeafbbcf7b.png" width="70%"/></li></ol><h1 id="操控元素"><a href="#操控元素" class="headerlink" title="操控元素"></a>操控元素</h1><h2 id="常用方式"><a href="#常用方式" class="headerlink" title="常用方式"></a>常用方式</h2><blockquote><p>前面案例中已经多次使用了，这里不再赘述</p></blockquote><ol><li>点击：.click()【a标签、按钮等均可点击】</li><li>输入字符串：.send_keys()</li><li>获取元素内容：.text</li></ol><h2 id="获取标签属性"><a href="#获取标签属性" class="headerlink" title="获取标签属性"></a>获取标签属性</h2><ol><li><p>语法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">element.get_attribute(<span class="string">&#x27;name&#x27;</span>)  <span class="comment"># 注意：element是一个wb对象,get_attribute：获取name属性值</span></span><br></pre></td></tr></table></figure></li><li><p>案例：通过id选择元素并获取该元素的srcid属性值</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/20/43e1284d7c7015a5392ae4b08962f7a1.png" width="70%"/><ul><li><p>程序代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">element = wd.find_element_by_id(<span class="string">&#x27;1&#x27;</span>)</span><br><span class="line"></span><br><span class="line">print(element.get_attribute(<span class="string">&#x27;srcid&#x27;</span>))</span><br></pre></td></tr></table></figure></li><li><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/18/ff33837c4065be50729e61d884d8a1ec.png" width="70%"/></li></ul></li></ol><h2 id="获取html"><a href="#获取html" class="headerlink" title="获取html"></a>获取html</h2><ol><li><p>使用.get_attribute()可以获取某元素的html代码，当参数分别为text、outerHTML、innerHTML时的结果如右图：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/18/83527251b3005c6374b010895cdec501.png" width="70%"/></li><li><p>案例：分别输出text、get_attribute(‘outerHTML’))，get_attribute(‘innerHTML’))的结果：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">element = wd.find_element_by_id(<span class="string">&#x27;h1&#x27;</span>)  <span class="comment"># 查找id为h1的元素</span></span><br><span class="line">print(<span class="string">&quot;-------text-------&quot;</span>)</span><br><span class="line">print(element.text)  <span class="comment"># 元素内部文字</span></span><br><span class="line">print(<span class="string">&quot;-------outerHTML-------&quot;</span>)</span><br><span class="line">print(element.get_attribute(<span class="string">&#x27;outerHTML&#x27;</span>))  <span class="comment"># 整个元素对应的html</span></span><br><span class="line">print(<span class="string">&quot;-------innerHTML-------&quot;</span>)</span><br><span class="line">print(element.get_attribute(<span class="string">&#x27;innerHTML&#x27;</span>))  <span class="comment"># 元素内部html</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/18/64fcb7db5dd9a98b53201239eaf0ee72.png" width="70%"/><p>注意：有些内容使用text可能无法获取，可以尝试使用：</p><ul><li><code>element.get_attribute(&#39;innerText&#39;)</code></li><li><code>element.get_attribute(&#39;textContent&#39;)</code></li></ul></li></ol><h2 id="获取输入框内容"><a href="#获取输入框内容" class="headerlink" title="获取输入框内容"></a>获取输入框内容</h2><blockquote><p>注意：对于输入（搜索）框，不可以使用id或class来获取里面的内容</p></blockquote><ol><li><p>案例：百度搜索框中输入 <code>plushine</code> ，返回刚刚输入的内容</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">wd.find_element_by_id(<span class="string">&#x27;kw&#x27;</span>).send_keys(<span class="string">&#x27;plushine&#x27;</span>)  <span class="comment"># 文本框中输入plushine</span></span><br><span class="line"></span><br><span class="line">element = wd.find_element_by_id(<span class="string">&#x27;kw&#x27;</span>) <span class="comment"># 通过id选择文本框</span></span><br><span class="line"></span><br><span class="line">print(element.get_attribute(<span class="string">&#x27;value&#x27;</span>))  <span class="comment"># 通过get_attribute(&#x27;value&#x27;)获取文本框中的内容</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/18/babea68b0edc6abe8887aa61302e7005.png" width="70%"/></li><li><p>输入 <code>wd.find_element_by_id(&#39;kw&#39;).send_keys(&#39;plushine&#39;)</code> 的类型：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="built_in">type</span>(wd.find_element_by_id(<span class="string">&#x27;kw&#x27;</span>).send_keys(<span class="string">&#x27;plushine&#x27;</span>)))</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/18/023459d8e6ac1d80fb7cd0e212774a75.png" width="70%"/><p>因为 <code>element.get_attribute(&#39;value&#39;)</code> 中要求element的类型是wb对象，所以下面的代码是错误的：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">element = wd.find_element_by_id(<span class="string">&#x27;kw&#x27;</span>).send_keys(<span class="string">&#x27;plushine&#x27;</span>)  <span class="comment"># 此时element的类型为NoneType</span></span><br><span class="line"></span><br><span class="line">print(element.get_attribute(<span class="string">&#x27;value&#x27;</span>))</span><br></pre></td></tr></table></figure></li></ol><h1 id="CSS选择器"><a href="#CSS选择器" class="headerlink" title="CSS选择器"></a>CSS选择器</h1><h2 id="根据标签选择"><a href="#根据标签选择" class="headerlink" title="根据标签选择"></a>根据标签选择</h2><ol><li><p>案例：选择所有标签为div的元素并输出其内部文字</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">wd.get(<span class="string">&#x27;http://cdn1.python3.vip/files/selenium/sample1.html&#x27;</span>)</span><br><span class="line"></span><br><span class="line">elements = wd.find_elements_by_css_selector(<span class="string">&#x27;div&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> element <span class="keyword">in</span> elements:</span><br><span class="line">    print(element.text)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/18/238a0bbdc66a24159522040bac21219f.png" width="70%"/></li><li><p>注意：</p><ul><li>其它标签也具有相同的用法，不再列举</li><li>也都可以使用 <code>wd.find_element_by_css_selector()</code> 来选择元素</li></ul></li></ol><h2 id="根据属性选择"><a href="#根据属性选择" class="headerlink" title="根据属性选择"></a>根据属性选择</h2><ol><li><p>案例：选择所有class属性为animal的元素，并输出整个元素内容（class、id）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">elements = wd.find_elements_by_css_selector(<span class="string">&#x27;.animal&#x27;</span>)  <span class="comment"># class用.表示，id用#表示</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> element <span class="keyword">in</span> elements:</span><br><span class="line">    print(element.get_attribute(<span class="string">&#x27;outerHTML&#x27;</span>))</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/18/16e333b16f43fbddd094c52bce337cf9.png" width="70%"/></li><li><p>案例：选择下面代码中的外部元素（其它属性）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://www.miitbeian.gov.cn&quot;</span>&gt;</span>苏ICP备88885574号<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>注意：href不像class、id可以使用特定的符号表示，但依然可以通过css选择器选择元素</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">  <span class="comment"># 当没有class、id时可以使用[属性=&quot;&quot;]来选择元素</span></span><br><span class="line">element = wd.find_element_by_css_selector(<span class="string">&#x27;[href=&quot;http://www.miitbeian.gov.cn&quot;]&#x27;</span>)</span><br><span class="line">print(element.get_attribute(<span class="string">&#x27;outerHTML&#x27;</span>))</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/18/f82456dee3f267f64333914016aa6fef.png" width="70%"/></li><li><p>技巧：每次都需要运行代码才能判断css选择器是否正确？有没有简便方法？有，Chrome控制台的搜索功能</p><ul><li><p>打开chrome控制台，点击下图位置的 <code>元素</code>：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/20/0ea779a08b1022927f6fce3a539ab152.png" width="70%"/></li><li><p>按下快捷键：ctrl+f，出现搜索框：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/18/dbefd1c66e10390b3b2b223814999097.png" width="70%"/></li><li><p>输入css选择器可筛选出符合条件的元素，大大节省了调试时间：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/18/eded9de6d4cd46724d21644915ed46ca.png" width="70%"/></li></ul></li></ol><h2 id="子元素和后代元素"><a href="#子元素和后代元素" class="headerlink" title="子元素和后代元素"></a>子元素和后代元素</h2><ol><li><p>代码块：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;div <span class="built_in">id</span>=<span class="string">&#x27;container&#x27;</span>&gt;</span><br><span class="line">    &lt;div <span class="built_in">id</span>=<span class="string">&#x27;layer1&#x27;</span>&gt;</span><br><span class="line">        &lt;div <span class="built_in">id</span>=<span class="string">&#x27;inner11&#x27;</span>&gt;</span><br><span class="line">            &lt;span&gt;内层11&lt;/span&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div <span class="built_in">id</span>=<span class="string">&#x27;inner12&#x27;</span>&gt;</span><br><span class="line">            &lt;span&gt;内层12&lt;/span&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div <span class="built_in">id</span>=<span class="string">&#x27;layer2&#x27;</span>&gt;</span><br><span class="line">        &lt;div <span class="built_in">id</span>=<span class="string">&#x27;inner21&#x27;</span>&gt;</span><br><span class="line">            &lt;span&gt;内层21&lt;/span&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><ul><li>子元素：layer1、layer2都是container的子元素，同理 inner11是layer1的子元素</li><li>后代元素：inner11、inner12、inner21都是container的后代元素，但不是其子代元素</li></ul></li><li><p>语法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wd.find_element_by_css_selector(<span class="string">&#x27;#container &gt; #layer1 &gt; #inner11&#x27;</span>)  <span class="comment"># 子代元素之间用 &gt;</span></span><br><span class="line">wd.find_element_by_css_selector(<span class="string">&#x27;#container #inner11&#x27;</span>)  <span class="comment"># 后代元素之间用空格</span></span><br><span class="line">print(element.get_attribute(<span class="string">&#x27;outerHTML&#x27;</span>))  <span class="comment"># 打印外部元素</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/18/1a1538649811c9d1484b4263deffc375.png" width="70%"/></li></ol><h2 id="联合使用"><a href="#联合使用" class="headerlink" title="联合使用"></a>联合使用</h2><blockquote><p>为了便于表示，下面代码中省去了 <code>wd.find_element_by_css_selector()</code></p></blockquote><ol><li><p>标签和属性联用：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;#container &gt; div&#x27;</span>  <span class="comment"># id为container的子元素中标签为div的元素（之间有空格或&gt;代表描述的是不同元素）</span></span><br><span class="line"><span class="string">&#x27;span.copyright&#x27;</span>  <span class="comment"># class为copyright且标签为span的元素（之间无空格或&gt;代表描述的是同一个元素）</span></span><br></pre></td></tr></table></figure></li><li><p>两个选择器联用（逗号分隔，or关系）：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">elements = wd.find_elements_by_css_selector(<span class="string">&#x27;.plant ,.animal&#x27;</span>)  <span class="comment"># 选取class属性为plant或animal的元素</span></span><br><span class="line"><span class="keyword">for</span> element <span class="keyword">in</span> elements:</span><br><span class="line">    print(element.get_attribute(<span class="string">&#x27;outerHTML&#x27;</span>))</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/18/56664a944a8ec8284e0c18873b7316e5.png" width="70%"/></li><li><p>案例：获取.vsc-initialized 下 #t1 和 #t2 元素的css选择器</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;.vsc-initialized (#t1 , #t2)&#x27;</span>  <span class="comment"># 错误，因为括号不能用在css选择器中</span></span><br><span class="line"><span class="string">&#x27;.vsc-initialized #t1 , .vsc-initialized #t2&#x27;</span>  <span class="comment"># 正确方法（略显笨重，不过后面会将其它简单方法）</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/18/e6fea07ed8747ec434287e0d1c990f8a.png" width="70%"/></li></ol><h2 id="按次序选择子节点"><a href="#按次序选择子节点" class="headerlink" title="按次序选择子节点"></a>按次序选择子节点</h2><ul><li><p>父元素的第n个子节点：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">element = wd.find_element_by_css_selector(<span class="string">&#x27;span:nth-child(2)&#x27;</span>)  <span class="comment"># 查询第二个span标签</span></span><br><span class="line">print(element.get_attribute(<span class="string">&#x27;outerHTML&#x27;</span>))</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/18/dbfeb7f31146fe7da86628420c294ad6.png" width="70%"/><p>注意：</p><ul><li>使用 <code>:nth-last-child(2)</code> 表示选择倒数第二个子元素</li><li>使用 <code>span:nth-child(2)</code> （标签属性联用），表示选择第二个且标签为span的子元素</li></ul></li><li><p>父元素的第几个某类型的子节点：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">element = wd.find_element_by_css_selector(<span class="string">&#x27;span:nth-of-type(2)&#x27;</span>)</span><br><span class="line">print(element.get_attribute(<span class="string">&#x27;outerHTML&#x27;</span>))</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/18/ec7a019fae147335a30f7f5df0de74e2.png" width="70%"/></li><li><p>奇数、偶数节点：</p><ol><li><p>案例：选择#t1的偶数子元素：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">element = wd.find_element_by_css_selector(<span class="string">&#x27;span:nth-child(even)&#x27;</span>)</span><br><span class="line">print(element.get_attribute(<span class="string">&#x27;outerHTML&#x27;</span>))</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/18/fac322fc1e9584e13acdd207e8a46e95.png" width="70%"/></li><li><p>注意：选取偶数子元素只需将 <code>even</code> 更换为 <code>odd</code> 即可</p></li></ol></li></ul><h2 id="选择弟弟节点"><a href="#选择弟弟节点" class="headerlink" title="选择弟弟节点"></a>选择弟弟节点</h2><ol><li><p>为什么是“弟弟”节点？</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/22/41209d7b358bb786fef19983613a3837.png" width="70%"/></li><li><p>案例：使用css选择器中弟弟节点选择方法，选择下图中的span标签</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/22/845ace5707b8729df08cb500ecf71300.png" width="70%"/><ul><li><p>代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wd.get(<span class="string">&quot;http://cdn1.python3.vip/files/selenium/sample1a.html&quot;</span>)</span><br><span class="line"></span><br><span class="line">element = wd.find_element_by_css_selector(<span class="string">&#x27;#t2&gt;h3+span&#x27;</span>)  <span class="comment"># css选择器中使用&#x27;+&#x27;表示兄弟节点的选择</span></span><br><span class="line">print(element.text)</span><br></pre></td></tr></table></figure></li><li><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/22/1b422069cae9b1a1b9ff1376e1c104ea.png" width="70%"/></li></ul></li></ol><h1 id="切换frame-窗口"><a href="#切换frame-窗口" class="headerlink" title="切换frame/窗口"></a>切换frame/窗口</h1><h2 id="切换frame"><a href="#切换frame" class="headerlink" title="切换frame"></a>切换frame</h2><ol><li><p>frame、iframe的作用：在frame或iframe标签之间存放完整的html代码，实现网页嵌套</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/19/30c89561acae9ba4bbaec451c9dea6fb.png" width="70%"/><p>注意：selenium默认不会获取iframe内部元素</p></li><li><p>案例：输出iframe内部满足class=”.plant”的元素</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">wd.get(<span class="string">&#x27;http://cdn1.python3.vip/files/selenium/sample2.html&#x27;</span>)</span><br><span class="line"></span><br><span class="line">wd.switch_to.frame(<span class="string">&#x27;innerFrame&#x27;</span>)  <span class="comment"># 使用switch_to将操作范围切换到iframe内部，参数为iframe的name属性或一个wb对象</span></span><br><span class="line"></span><br><span class="line">elements = wd.find_elements_by_class_name(<span class="string">&#x27;plant&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> element <span class="keyword">in</span> elements:</span><br><span class="line">    print(element.get_attribute(<span class="string">&#x27;outerHTML&#x27;</span>))</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/19/9166de82058cdcd5ed22087e8b6eb026.png" width="70%"/></li><li><p>案例：执行完案例2后点击iframe外部按钮</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wd.switch_to.default_content()  <span class="comment"># 先将操作范围切换到iframe外部</span></span><br><span class="line"></span><br><span class="line">wd.find_element_by_css_selector(<span class="string">&#x27;#outerbutton&#x27;</span>).click()</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/19/873979beffd158b8aa9f7bd81eff65c0.png" width="70%"/></li></ol><h2 id="切换窗口"><a href="#切换窗口" class="headerlink" title="切换窗口"></a>切换窗口</h2><blockquote><p>使用js或点击超链接打开新标签页后，窗口并不会自动切换，需要手动操作</p></blockquote><ol><li><p>区分标签页和窗口：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/22/01480c63a328411bb159a4f16a6a517b.png" width="70%"/></li><li><p>语法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wd.switch_to.window(handle)  <span class="comment"># 使用switch_to.window()将窗口切换为目标窗口，参数为目标窗口的handle值</span></span><br></pre></td></tr></table></figure><p>注意：目标窗口的handle值是未知的，但window_handles中存放了该网页的所有handle值，可依次尝试</p></li><li><p>案例：点击超链接访问必应首页，文本框中输入 “plushine”</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">wd.get(<span class="string">&#x27;http://cdn1.python3.vip/files/selenium/sample3.html&#x27;</span>)</span><br><span class="line"></span><br><span class="line">wd.find_element_by_css_selector(<span class="string">&#x27;a[href=&quot;http://www.bing.com&quot;]&#x27;</span>).click()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> handle <span class="keyword">in</span> wd.window_handles:  <span class="comment"># 遍历所有handle，依次切换，直至满足条件（handle对应的title与目标窗口一致）</span></span><br><span class="line">    wd.switch_to.window(handle)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;必应&#x27;</span> <span class="keyword">in</span> wd.title:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">wd.find_element_by_css_selector(<span class="string">&#x27;input.b_searchbox&#x27;</span>).send_keys(<span class="string">&#x27;plushine&#x27;</span>)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/19/acb8e9e63e2de0d156e57c96d9e94aff.png" width="70%"/></li><li><p>案例：将操作范围切换回原来的标签，并点击按钮</p><ul><li><p>方式一：for循环寻找正确的handle</p></li><li><p>方式二：记录最开始打开的标签handle值，然后直接跳转</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">wd.find_element_by_css_selector(<span class="string">&#x27;a[href=&quot;http://www.bing.com&quot;]&#x27;</span>).click()</span><br><span class="line"></span><br><span class="line">mainHandle = wd.current_window_handle  <span class="comment"># 记录当前窗口handle值</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> handle <span class="keyword">in</span> wd.window_handles:</span><br><span class="line">    wd.switch_to.window(handle)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;必应&#x27;</span> <span class="keyword">in</span> wd.title:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">wd.find_element_by_css_selector(<span class="string">&#x27;input.b_searchbox&#x27;</span>).send_keys(<span class="string">&#x27;plushine&#x27;</span>)</span><br><span class="line"></span><br><span class="line">wd.switch_to.window(mainHandle)  <span class="comment"># 跳转到最开始打开的标签</span></span><br><span class="line"></span><br><span class="line">wd.find_element_by_css_selector(<span class="string">&#x27;#outerbutton&#x27;</span>).click()</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/19/1e484b620937adb3623ab270e2c24cb7.png" width="70%"/></li></ul></li></ol><h1 id="选择框"><a href="#选择框" class="headerlink" title="选择框"></a>选择框</h1><h2 id="radio"><a href="#radio" class="headerlink" title="radio"></a>radio</h2><ol><li><p>介绍：radio是单选框，最多只能选择一项</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/19/a4ab6d2130c6223a98d33bb96ecd7da6.png" width="70%"/></li><li><p>案例：先打印当前选中的老师，再选中小雷老师</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">wd.get(<span class="string">&#x27;http://cdn1.python3.vip/files/selenium/test2.html&#x27;</span>)</span><br><span class="line"></span><br><span class="line">element = wd.find_element_by_css_selector(<span class="string">&#x27;input[type=&quot;radio&quot;][checked=&quot;checked&quot;]&#x27;</span>)</span><br><span class="line"></span><br><span class="line">print(element.get_attribute(<span class="string">&#x27;value&#x27;</span>))</span><br><span class="line"></span><br><span class="line">wd.find_element_by_css_selector(<span class="string">&#x27;input[type=&quot;radio&quot;][value=&quot;小雷老师&quot;]&#x27;</span>).click()</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/19/418e72f42a741b9a3b8f652a44ad5dc4.png" width="70%"/><p>注意：使用 <code>element.text</code> 是获取不到其内部文字的，因为input是单标签</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/19/968792fe462aef4bc1b758a56de38973.png" width="70%"/></li></ol><h2 id="checkbox"><a href="#checkbox" class="headerlink" title="checkbox"></a>checkbox</h2><ol><li><p>介绍：checkbox是复选框，可选择多项</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/19/c215444f28ea2acaaa2bd5a15d553b85.png" width="70%"/></li><li><p>案例：只选中小雷老师</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">wd.get(<span class="string">&#x27;http://cdn1.python3.vip/files/selenium/test2.html&#x27;</span>)</span><br><span class="line"></span><br><span class="line">elements = wd.find_elements_by_css_selector(<span class="string">&#x27;input[type=&quot;checkbox&quot;][checked=&quot;checked&quot;]&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> element <span class="keyword">in</span> elements:</span><br><span class="line">    element.click()</span><br><span class="line"></span><br><span class="line">wd.find_element_by_css_selector(<span class="string">&#x27;input[type=&quot;checkbox&quot;][value=&quot;小雷老师&quot;]&#x27;</span>).click()</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/19/587060bbd8d621c1aa400bf48ae9992d.png" width="70%"/></li></ol><h2 id="select"><a href="#select" class="headerlink" title="select"></a>select</h2><ol><li><p>定义：select是下拉框，每个option标签是一个选项，有单选下拉框也有多选下拉框</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/20/1dccf0378b14a6429616e3fe9e1d279d.png" width="70%"/></li><li><p>select类：selenium中一个专门操作select下拉框的类</p></li><li><p>案例：单选下拉框中使用select类选择小雷老师</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium.webdriver.support.ui <span class="keyword">import</span> Select  <span class="comment"># 导入Select类</span></span><br><span class="line"></span><br><span class="line">wd.get(<span class="string">&#x27;http://cdn1.python3.vip/files/selenium/test2.html&#x27;</span>)</span><br><span class="line">select = Select(wd.find_element_by_css_selector(<span class="string">&#x27;#ss_single&#x27;</span>))  <span class="comment"># 创建select类时的参数为wb对象</span></span><br><span class="line"></span><br><span class="line">select.select_by_index(<span class="number">1</span>)  <span class="comment"># 根据序号选择（从0开始），还有下面两种选择方法（结果相同）</span></span><br><span class="line"><span class="comment"># select.select_by_value(&#x27;小雷老师&#x27;)  # 根据option对应的属性选择</span></span><br><span class="line"><span class="comment"># select.select_by_visible_text(&#x27;小雷老师&#x27;)  # 根据网页可见文字选择</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/20/deda84aa745633b8476c57c5e825f3a9.png" width="70%"/></li><li><p>案例：多选下拉框中使用selenium的select类选择小江老师和小凯老师</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium.webdriver.support.ui <span class="keyword">import</span> Select  <span class="comment"># 导入Select类</span></span><br><span class="line"></span><br><span class="line">wd.get(<span class="string">&#x27;http://cdn1.python3.vip/files/selenium/test2.html&#x27;</span>)</span><br><span class="line">select = Select(wd.find_element_by_css_selector(<span class="string">&#x27;#ss_multi&#x27;</span>))  <span class="comment"># 创建select类时的参数为WebElement对象</span></span><br><span class="line"></span><br><span class="line">select.deselect_all()  <span class="comment"># 取消全部选择</span></span><br><span class="line"></span><br><span class="line">select.select_by_index(<span class="number">0</span>)  <span class="comment"># 使用下标选取（从0开始）</span></span><br><span class="line">select.select_by_index(<span class="number">2</span>)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/20/ee301c5af17e6bfb2a79e85e8fcb8467.png" width="70%"/><p>注意：<code>select_by_value()</code> 和 <code>select_by_visible_text()</code> 的方法依旧适用于多选框</p></li></ol><h1 id="弹出框"><a href="#弹出框" class="headerlink" title="弹出框"></a>弹出框</h1><h2 id="alert"><a href="#alert" class="headerlink" title="alert"></a>alert</h2><ol><li><p>定义：alert弹框，可以显示一段text文本和一个accept（确定）按钮</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/20/5d6bcf9d5d7c0107cb3996edd5385bc2.png" width="50%"/></li><li><p>案例：获取alert弹出框显示的text内容后点击accept（确定）按钮</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">wd.get(<span class="string">&#x27;http://cdn1.python3.vip/files/selenium/test4.html&#x27;</span>)</span><br><span class="line"></span><br><span class="line">wd.find_element_by_css_selector(<span class="string">&#x27;#b1&#x27;</span>).click()  <span class="comment"># 点击页面的按钮后显示alert弹窗</span></span><br><span class="line"></span><br><span class="line">print(wd.switch_to.alert.text)  <span class="comment"># 获取alert弹出框显示的text内容</span></span><br><span class="line">wd.switch_to.alert.accept()  <span class="comment"># 点击accept按钮</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/20/3f94028ce0c1b3354782d4319b4287f3.png" width="70%"/></li></ol><h2 id="confirm"><a href="#confirm" class="headerlink" title="confirm"></a>confirm</h2><ol><li><p>定义：confirm弹框，可以显示一段text文本、一个accept（确定）按钮和一个dismiss（取消）按钮</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/20/7929951416d3ea2cbb1002cefce7b082.png" width="50%"/></li><li><p>案例：获取confirm弹出框显示的text内容后点击dismiss（取消）按钮</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">wd.get(<span class="string">&#x27;http://cdn1.python3.vip/files/selenium/test4.html&#x27;</span>)</span><br><span class="line"></span><br><span class="line">wd.find_element_by_css_selector(<span class="string">&#x27;#b2&#x27;</span>).click()  <span class="comment"># 点击页面的按钮后显示confirm弹窗</span></span><br><span class="line"></span><br><span class="line">print(wd.switch_to.alert.text)  <span class="comment"># 获取confirm弹出框显示的text内容</span></span><br><span class="line">wd.switch_to.alert.dismiss()  <span class="comment"># 点击dismiss按钮</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/20/1ec98f4134ce71b7429f536b5e27bfe8.png" width="70%"/><p>注意：<code>switch_to.alert.accept()</code> 函数依然适用于confirm 弹出框</p></li></ol><h2 id="prompt"><a href="#prompt" class="headerlink" title="prompt"></a>prompt</h2><ol><li><p>定义：prompt弹框，可以显示一个input文本框、一段text文本、一个accept（确定）按钮和一个dismiss（取消）按钮</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/20/90d3963c9f0860784272be96bc12017d.png" width="50%"/></li><li><p>案例：文本框中输入 <code>plushine.cn</code> 后点击确定</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">wd.get(<span class="string">&#x27;http://cdn1.python3.vip/files/selenium/test4.html&#x27;</span>)</span><br><span class="line"></span><br><span class="line">wd.find_element_by_css_selector(<span class="string">&#x27;#b3&#x27;</span>).click()  <span class="comment"># 点击页面的按钮后显示prompt弹窗</span></span><br><span class="line"></span><br><span class="line">print(wd.switch_to.alert.text)  <span class="comment"># 获取prompt弹出框显示的text内容</span></span><br><span class="line">wd.switch_to.alert.send_keys(<span class="string">&#x27;plushine.cn&#x27;</span>)  <span class="comment"># 向文本框中输入文本</span></span><br><span class="line">wd.switch_to.alert.accept()  <span class="comment"># 点击accept按钮</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/20/9c5ce0f5669340d74417a87c6be27966.png" width="70%"/></li></ol><h1 id="更多操控方法"><a href="#更多操控方法" class="headerlink" title="更多操控方法"></a>更多操控方法</h1><h2 id="鼠标悬停"><a href="#鼠标悬停" class="headerlink" title="鼠标悬停"></a>鼠标悬停</h2><ol><li><p>引入：在 <a href="https://www.meizu.com/">魅族官网</a> 选择产品时需要将鼠标悬停在导航栏上，才能看到内部元素</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/20/e98ca6c4c9a8892f7ee9397bd5ac88e6.png" width="70%"/></li><li><p>ActionChains类：实现右键点击、双击、移动到某个元素、拖拽等鼠标操作</p></li><li><p>案例：将鼠标【移动并悬停】在导航栏中 <code>配件</code> 位置上</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium.webdriver.common.action_chains <span class="keyword">import</span> ActionChains  <span class="comment"># 导入ActionChains类</span></span><br><span class="line"></span><br><span class="line">wd.get(<span class="string">&#x27;https://www.meizu.com/&#x27;</span>)</span><br><span class="line">ac = ActionChains(wd)  <span class="comment"># 创建ActionChains对象，参数为wd对象</span></span><br><span class="line"></span><br><span class="line">ac.move_to_element(</span><br><span class="line">    wd.find_element_by_css_selector(<span class="string">&#x27;#meizu-header-link &gt; :nth-child(3)&#x27;</span>)</span><br><span class="line">).perform()</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/20/4e36a092c467c0849abd1ac5f2c3aa36.png" width="70%"/><p>注意：更多ActionChains类的使用方法请自行查找</p></li></ol><h2 id="冻结界面"><a href="#冻结界面" class="headerlink" title="冻结界面"></a>冻结界面</h2><ol><li><p>问题：通过控制台无法展开商品</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/20/21744c041645fc1eadf7106b244a89df.png" width="70%"/></li><li><p>解决：先冻结界面，再通过控制台选择</p><ul><li><p>控制台输入如下JavaScript代码：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setTimeout(function()&#123;debugger&#125;, 5000)  # 设置定时器，5秒后冻结界面</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/20/55d246446458073660523909457c107b.png" width="70%"/></li><li><p>快速将鼠标悬停在网站导航栏中使商品展示：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/20/6dd32f70eab647cdb430292fb255cc3e.png" width="70%"/></li><li><p>等待窗口冻结：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/20/e69deecbc382d55b7da94a2cee65a0e4.png" width="70%"/></li><li><p>选择商品元素：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/20/931a939c84a565222ea604bcf3723fcd.png" width="70%"/></li></ul></li></ol><h2 id="执行js"><a href="#执行js" class="headerlink" title="执行js"></a>执行js</h2><ol><li><p>语法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">js = <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    console.log(&quot;&#123;&#125;&quot;);</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span>.<span class="built_in">format</span>(<span class="string">&#x27;hello world!&#x27;</span>)</span><br><span class="line">wd.execute_script(js)  <span class="comment"># 执行上面的js代码</span></span><br></pre></td></tr></table></figure><p>注意：</p><ul><li>js代码可以使用放在三个双引号之间（如上面格式） </li><li>js中注释符号为//，注意和python注释的符号区分</li></ul></li><li><p>案例：使用js打开一个新的标签页，并将窗口切换到该标签，关闭新标签页并将窗口切换回最开始的标签页</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"></span><br><span class="line">wd = webdriver.Chrome(<span class="string">&#x27;D:\environment\chromedriver.exe&#x27;</span>)</span><br><span class="line"></span><br><span class="line">wd.get(<span class="string">&quot;https://plushine.cn&quot;</span>)</span><br><span class="line">print(wd.title)  <span class="comment"># 通过打印窗口title，判断所在的标签页</span></span><br><span class="line"></span><br><span class="line">js = <span class="string">&quot;&quot;&quot; //js代码</span></span><br><span class="line"><span class="string">    window.open(&#x27;https://www.baidu.com&#x27;)</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">wd.execute_script(js)  <span class="comment"># 运行js代码</span></span><br><span class="line"></span><br><span class="line">hanldeList = wd.window_handles</span><br><span class="line">wd.switch_to.window(hanldeList[<span class="number">-1</span>])  <span class="comment"># 打开最新的标签页</span></span><br><span class="line">print(wd.title)  <span class="comment"># 打印title，判断窗口是否切换成功</span></span><br><span class="line"></span><br><span class="line">wd.close()  <span class="comment"># 关闭当前标签页</span></span><br><span class="line">wd.switch_to.window(hanldeList[<span class="number">0</span>])  <span class="comment"># 将窗口切换切换到最开始的标签页</span></span><br><span class="line"></span><br><span class="line">print(wd.title)</span><br></pre></td></tr></table></figure><p>运行过程：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/22/547b7f736e8eaa653f723a972f41b6f3.png" width="70%"/><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/22/f3478d7e506c9216d7d87812f0fedbab.png" width="70%"/><p>注意：常用的窗口切换</p><ul><li><p>handles = wd.window_handles          #获取当前浏览器的所有窗口句柄</p></li><li><p>wd.switch_to.window(handles[-1])     #切换到最新打开的窗口</p></li><li><p>wd.switch_to.window(handles[-2])     #切换到倒数第二个打开的窗口</p><p>…</p></li><li><p>wd.switch_to.window(handles[0])      #切换到最开始打开的窗口</p></li></ul></li></ol><h1 id="Xpath"><a href="#Xpath" class="headerlink" title="Xpath"></a>Xpath</h1><blockquote><p>我一般都是用css选择器，当css不能选择时再使用xpath，所以总结的不全面</p></blockquote><ol><li><p>定义：堂兄节点，下图橙色框中两个节点互为堂兄节点</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/22/a34fa436c1a8dc00b80f7110c48eac19.png" width="70%"/></li><li><p>语法：</p><ul><li>选择子节点：/</li><li>选择父节点：/..</li><li>选择div标签：div</li><li>选择第二个子元素且标签为div的节点：div[2]</li></ul></li><li><p>案例：使用css选择器选择上图中的span标签，再使用xpath选择div标签</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">element = wd.find_element_by_css_selector(<span class="string">&#x27;interaction-status evaluation&#x27;</span>)  <span class="comment"># 先使用css选择器，选择span标签</span></span><br><span class="line"><span class="built_in">str</span> = element.find_element_by_xpath(<span class="string">&#x27;./../div[2]&#x27;</span>)  <span class="comment"># 再使用xpath语句选择div</span></span><br><span class="line"></span><br><span class="line">print(<span class="built_in">str</span>.text)</span><br></pre></td></tr></table></figure></li><li><p>注意：</p><ul><li>wb的基础上选择要在xpath语句最前面加上’.’（类似css的局部选择时）</li><li>wd的基础上选择不需要添加</li></ul></li></ol><h1 id="写在后面"><a href="#写在后面" class="headerlink" title="写在后面"></a>写在后面</h1><ol><li>课程知识很全，老师讲解很细</li><li>b站还有老师的app自动化和Python Qt的课程，有时间就看</li><li>明天开始写云班课互评作业的脚本，有可能就写刷课的脚本，代码到时候会开源</li></ol><hr><p>不足之处，欢迎留言，会及时回复，及时更正！</p><p>创作不易，感谢支持！</p>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Selenium </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>QQ推送今日天气(python+云函数)</title>
      <link href="27214.html"/>
      <url>27214.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>本文章最初发布在 <a href="https://plushine.cn">XJHui’s Blog</a>，未经允许，任何人禁止转载！</p><p><font color="red" style="font-weight:700">注意：</font>最新修改版本已发布在 <a href="https://plushine.cn/27214.html">这里</a>，点击前往查看！</p><h1 id="Weather-Push"><a href="#Weather-Push" class="headerlink" title="Weather-Push"></a>Weather-Push</h1><p>QQ、群推送今日天气（python+云函数）</p><p>github项目地址：<a href="https://github.com/xingjiahui/Weather-Push">https://github.com/xingjiahui/Weather-Push</a></p><h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><h2 id="功能介绍"><a href="#功能介绍" class="headerlink" title="功能介绍"></a>功能介绍</h2><ul><li>支持推送到QQ、群，数目无限制</li><li>不同QQ、群可推送不同地区天气</li><li>推送内容丰富（日期，地区，天气，最高气温，最低气温，当前气温，风向，风力，空气指数，pm2.5指数，运动指数，天气小提示，能见度等内容）</li></ul><h2 id="运行界面"><a href="#运行界面" class="headerlink" title="运行界面"></a>运行界面</h2><ol><li><p>执行日志：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/11/10/bbc3f72840f5c7ba845edb9beae38af2.png" width="70%"/></li><li><p>QQ推送：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/11/10/55ed82d679b0bfa6fa588763a87e0c14.png" width="70%"/></li><li><p>群推送：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/11/10/3225d04005669f4812ffc8c0d0b961c9.png" width="70%"/><p>注意：为了降低接口压力和避免不必要问题，两次推送强制间隔20s+。</p></li></ol><h2 id="使用须知"><a href="#使用须知" class="headerlink" title="使用须知"></a>使用须知</h2><ol><li><p>免费，腾讯云函数每月100万次免费调用额度，本项目每天只调用一次：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/17/e7d342f9854e007545d4f373e5debe79.png" width="70%"/></li><li><p>所有接收推送的QQ、群均需要添加机器人为好友（不然怎么给你推送）</p></li></ol><h2 id="语言库"><a href="#语言库" class="headerlink" title="语言库"></a>语言库</h2><ul><li>python 3.8</li><li>requests 2.24.0（接口get请求）</li><li>pyyaml 5.3.1（配置文件）</li><li>json 2.0.9（数据格式化）</li></ul><h1 id="使用该项目"><a href="#使用该项目" class="headerlink" title="使用该项目"></a>使用该项目</h1><h2 id="下载项目"><a href="#下载项目" class="headerlink" title="下载项目"></a>下载项目</h2><ol><li><p>进入 <a href="https://github.com/xingjiahui/Weather-Push">Weather-Push</a> 项目主页，按下图依次点击 <code>code</code> 、<code>Download ZIP</code>：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/17/d88653d8849d9841b92b51b98f4ecca4.png" width="70%"/></li><li><p>解压缩到桌面：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/17/8dbab4406941f24cfca997c2ff99d339.png" width="70%"/><p>注意：尽管云函数有直接上传zip的选项，但我尝试了几次均上传失败，所以请务必解压后上传。</p></li></ol><h2 id="添加好友"><a href="#添加好友" class="headerlink" title="添加好友"></a>添加好友</h2><ol><li><p>qq扫描二维码，添加该机器人为好友：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/11/10/de589671f1a0cda2eff145a15324bad2.png" width="30%"/></li><li><p>群推送：添加好友后，将其拉入群聊（注意保护群聊隐私）。</p></li></ol><h2 id="创建云函数"><a href="#创建云函数" class="headerlink" title="创建云函数"></a>创建云函数</h2><ol><li><p>进入 <a href="https://console.cloud.tencent.com/scf/index?rid=4">腾讯云函数</a> 首页：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/17/f3178eb44e1264a27c02e41e9a51b51e.png" width="70%"/><p>注意：若账号注册有问题，请自行百度</p></li><li><p>点击左侧 <code>函数服务</code> ，<code>新建</code> 云函数：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/17/48d34dd37daf27b823f50107b556f37c.png" width="70%"/></li><li><p>填写 <code>基本信息</code>：</p><ul><li>函数名称：自定义</li><li>运行环境：python 3.6</li><li>其余均为默认，点击 <code>下一步</code></li></ul></li><li><p>填写 <code>函数配置</code>：</p><ul><li><p>描述：QQ推送今日天气（python+云函数）</p></li><li><p>高级配置：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/11/10/bf3ee3ec6efb2f04c0da3cb689dc221c.png" width="70%"/></li><li><p>其余配置项默认即可，点击完成</p></li></ul></li><li><p>按下图 <code>上传</code> 前面解压的文件夹，点击 <code>保存</code>：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/17/6329d7786535df00256c291008ef3965.png" width="70%"/></li><li><p>项目上传成功：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/17/c8ae64c9a9bfbc323b508d76fcd749cf.png" width="70%"/></li></ol><h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><ol><li><p>打开配置文件：左侧文件树中找到 <code>userData.yml</code> 文件，双击打开：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/11/10/acd985156af55ce53ede998a70e2550d.png" width="70%"/><p>注意：填写完成后，按下快捷键：<code>ctrl+s</code> 保存修改</p></li><li><p>推送到QQ：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/11/10/ec1c9d12e466ebe0f34bc8fab285fbc0.png" width="70%"/></li><li><p>推送到QQ群：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/11/09/46bf7e087ec046614b37e8a82ca30e0a.png" width="70%"/><p>注意：要添加多个QQ、群时，按序号依次添加即可，注意缩进。</p></li></ol><h2 id="测试运行"><a href="#测试运行" class="headerlink" title="测试运行"></a>测试运行</h2><ol><li><p>完成以上步骤，点击下图中的 <code>保存并测试</code>：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/17/8ca0413e26e52921687ed50881e8646e.png" width="70%"/></li><li><p>运行成功：</p><ul><li><p>执行日志：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/11/10/bbc3f72840f5c7ba845edb9beae38af2.png" width="70%"/></li><li><p>QQ、群推送：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/11/10/cad8c973acc2df9ede4bf5e36f9310e7.png" width="40%"/></li><li><p>今日天气：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/11/10/ada05801aa1fd3e53852ddb9d5abe482.png" width="70%"/></li></ul></li></ol><h1 id="脚本维护"><a href="#脚本维护" class="headerlink" title="脚本维护"></a>脚本维护</h1><h2 id="定时触发"><a href="#定时触发" class="headerlink" title="定时触发"></a>定时触发</h2><ol><li><p>创建触发器：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/17/440eab62174e21c346c9f2097261ec0f.png" width="70%"/></li><li><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/11/10/8ed89283594131b858a4c4fd205afa48.png" width="70%"/><p>注意：不要尝试与推送机器人对话，他不会回复你的</p></li></ol><h2 id="问题反馈"><a href="#问题反馈" class="headerlink" title="问题反馈"></a>问题反馈</h2><ol><li>项目 issues 地址：<a href="https://github.com/xingjiahui/Weather-Push/issues">https://github.com/xingjiahui/Weather-Push/issues</a></li><li>作者博客留言板：<a href="https://plushine.cn/messageboard/">https://plushine.cn/messageboard/</a></li></ol><h2 id="更新日志"><a href="#更新日志" class="headerlink" title="更新日志"></a>更新日志</h2><ul><li><p><code>v2.0</code> 2020.11.10</p><ul><li><p>修复因云函数重复执行导致的重复推送问题</p></li><li><p>修复因qmsg缓存异常导致的推送昨日天气的bugs</p></li><li><p>弃用 <code>高德地图</code> api、<code>一言</code> api、<code>Qmsg酱</code> api</p></li><li><p>简化配置，支持同时推送到QQ和群</p></li><li><p>不同QQ、群可推送不同地区天气</p></li><li><p>丰富推送内容（显示今日天气对应表情）</p></li><li><p>项目快照：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/11/10/55ed82d679b0bfa6fa588763a87e0c14.png" width="70%"/></li></ul></li><li><p><code>v1.0</code> 2020.10.17</p><ul><li><p>通过高德地图api获取天气信息</p></li><li><p>支持多用户（多地区）天气推送</p></li><li><p>推送内容添加 <code>一言</code> 短句</p></li><li><p>脚本支持部署到云函数</p></li><li><p>项目快照：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/11/10/37933c73b83219eae0e887e61f88d2b0.png" width="70%"/></li></ul></li></ul><h2 id="声明"><a href="#声明" class="headerlink" title="声明"></a>声明</h2><ul><li>此脚本是作者利用业余时间所写，禁止用于商业、非法用途 </li><li>此脚本无任何恶意代码，但可能存在些许bug，因此所造成的损失与本人无关 </li><li>使用、运行本脚本即代表同意上述声明</li></ul><h1 id="感谢"><a href="#感谢" class="headerlink" title="感谢"></a>感谢</h1><ol><li><p>服务支持：</p><ul><li><p><del><a href="https://lbs.amap.com/api/webservice/guide/api/weatherinfo/#t1">高德地图</a>：提供免费天气API</del></p></li><li><p><a href="https://cloud.tencent.com/product/scf">腾讯云函数</a>：触发、执行python项目</p></li><li><p><del><a href="https://qmsg.zendee.cn/">Qmsg酱</a>：QQ消息推送API</del></p></li><li><p><del><a href="https://api.uixsj.cn/hitokoto/index.html">一言</a>：一言API</del></p></li><li><p><a href="http://qqpusher.yanxianjun.com/doc/">QQPusher</a>：QQ、QQ群消息推送API</p></li><li><p><a href="https://tianqiapi.com/index/doc?version=v61">实况天气</a>：天气APi</p></li></ul></li><li><p>技术支持：</p><ul><li><a href="https://www.cnblogs.com/wbw-test/p/11580887.html">博客园-阿宅gogo</a>：python发送get请求</li><li><a href="https://blog.csdn.net/abby1559/article/details/79971957">CSDN-站在风口</a>：python字典初始化</li><li><a href="https://blog.csdn.net/chenzhanhai/article/details/106782325">CSDN-占海</a>：腾讯云函数添加依赖函数库</li><li><a href="https://blog.csdn.net/marselha/article/details/91872832">CSDN-marselha</a>：关于UnicodeDecodeError: ‘gbk’ codec can’t decode byte 的解决方法</li><li><a href="https://blog.csdn.net/qq_40986486/article/details/103934408">CSDN-GhostRiderQin</a>：python加载YAML文件警告：YAMLLoadWarning: calling yaml.load() without… 的解决方法</li><li><a href="http://cn.piliapp.com/emoji/list/weather/">工具邦</a>：天气表情</li></ul></li></ol><hr><p>不足之处，欢迎留言，会及时回复，及时更正！</p><p>创作不易，感谢支持！</p>]]></content>
      
      
      <categories>
          
          <category> python项目 </category>
          
          <category> python脚本 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>linux实用命令（下）</title>
      <link href="4989.html"/>
      <url>4989.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>本文章最初发布在 <a href="https://plushine.cn">XJHui’s Blog</a>，未经允许，任何人禁止转载！</p><p><font color="red" style="font-weight:700">注意：</font>最新修改版本已发布在 <a href="https://plushine.cn/4989.html">这里</a>，点击前往查看！</p><h1 id="定时任务调度"><a href="#定时任务调度" class="headerlink" title="定时任务调度"></a>定时任务调度</h1><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/27/356dbddea87480c3fe75a2e647acf6f5.png" width="50%"/><h2 id="crond任务调度"><a href="#crond任务调度" class="headerlink" title="crond任务调度"></a>crond任务调度</h2><ol><li><p>概述：</p><ul><li>定义：是指系统在某个特定的时间执行特定的命令或程序</li><li>用处：<ul><li>系统工作：有些重要的工作必须周而复始的执行，如病毒查杀</li><li>用户工作：个别用户需要执行某些程序，比如对mysql数据库备份</li></ul></li></ul></li><li><p>语法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">crontab -e  # 编辑crond任务调度</span><br><span class="line">crontab -r  # 终止任务调度</span><br><span class="line">crontab -l  # 列出当前的任务调度</span><br><span class="line">service crond restart  # 重启任务调度</span><br></pre></td></tr></table></figure></li><li><p>案例：新建一条crond任务，每隔一分钟就将/etc/的文件列表覆盖写入/tmp/to.txt文件下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">crontab -e  # 设置个人任务调度</span><br><span class="line">*/1 * * * * ls -l /etc/ &gt;&gt; /tmp/to.txt  # 任务调度内容，*/1 * * * * 为cron时间表达式</span><br></pre></td></tr></table></figure><p>任务调度组成：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/28/e77aecc3ddb89fe7354d24ff156e25ae.png" width="70%"/><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/27/df1b3a25961b706756c25bee76a4dcb4.png" width="70%"/><p>注意：简单命令可以直接在crontab中直接写入，复杂任务需要写脚本运行</p></li><li><p>cron表达式：</p><ul><li><p>组成：_ _ _ _ _ （5个位置）</p></li><li><p>每个位置的含义：</p><ul><li>分（0-59）</li><li>时（0-23）</li><li>日（1-31）</li><li>月（1-12）</li><li>周（0-7）0、7均表示周日</li></ul></li><li><p>特殊符号：</p><ul><li>*：代表任何时间</li><li>，：代表不连续时间</li><li>-：代表连续时间</li><li>*/n：代表每隔多久执行一次</li></ul></li><li><p>案例：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/27/7a419de116bf5dec365ca9c869de3394.png" width="70%"/></li></ul></li></ol><h2 id="cron应用实例"><a href="#cron应用实例" class="headerlink" title="cron应用实例"></a>cron应用实例</h2><blockquote><p>每隔一分钟将当前的日期信息，追加到/root/mydate文件中（脚本实现）</p></blockquote><ol><li><p>先编写一个shell文件 mytask1.sh：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim mytask.sh</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/27/2ace1166cf7b9264a19b8492be60835c.png" width="70%"/><p>注意：命令行输入shell脚本 <code>路径/名称</code> 即可直接运行</p></li><li><p>给shell文件一个可执行权限：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 744 mytask1.sh</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/27/450ba7eac0cc52bbe6ab583e501315b1.png" width="70%"/></li><li><p>在crontab中添加新行即表示添加定时任务：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/28/3028fcce59c96d8060bdf0aed57fda66.png" width="70%"/></li><li><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/27/83f84435a1ed4a3e579a90f9c34c0152.png" width="70%"/></li></ol><h1 id="磁盘分区和挂载"><a href="#磁盘分区和挂载" class="headerlink" title="磁盘分区和挂载"></a>磁盘分区和挂载</h1><h2 id="分区类型"><a href="#分区类型" class="headerlink" title="分区类型"></a>分区类型</h2><ol><li>mbr分区：<ul><li>最多支持四个主分区</li><li>系统只能安装在主分区</li><li>拓展分区要占一个主分区</li><li>MBR最大只支持2TB，但拥有最好的兼容性</li></ul></li><li>gpt分区：<ul><li>支持无限多个主分区（但操作系统可能限制，例如windows下最多128个分区）</li><li>最大支持18EB的容量（1EB=1024PB，1PB=1024TB）</li><li>windows7后64位支持gpt</li></ul></li></ol><h2 id="windows分区"><a href="#windows分区" class="headerlink" title="windows分区"></a>windows分区</h2><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/28/0c0ee2f55224b671dae6c26aeeb7f65c.png" width="50%"/><h2 id="linux分区"><a href="#linux分区" class="headerlink" title="linux分区"></a>linux分区</h2><ol><li><p>原理介绍：</p><ul><li>linux无论几个分区，分给哪一个目录使用，归根结底就只有一个根目录，linux每个分区都是整个文件系统的一部分</li><li>linux采用了一种 ”载入“ 的处理方法，它的文件系统中包含了一整套的文件和目录，且将一个分区和一个目录联系起来</li></ul></li><li><p>原理示意图：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/28/93aac9bfb1672eafcc74c5fc4075805b.png" width="50%"/></li><li><p>查看磁盘分区情况：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsblk -f  # 查看磁盘分区情况</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/28/3a1c86f35de58a622091530f93df63d9.png" width="70%"/></li><li><p>磁盘详细信息：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsblk  # 显示磁盘详细信息(包含大小)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/28/982a890f196d1f8344943fe47ffa7d70.png" width="70%"/></li></ol><h2 id="新增磁盘"><a href="#新增磁盘" class="headerlink" title="新增磁盘"></a>新增磁盘</h2><ol><li><p>需求：增加一块硬盘（sdb1，2G），并将其挂载到/home/newdisk</p></li><li><p>示意图：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/28/4d04007a8ee40b01cc67eac05083abf8.png" width="70%"/></li><li><p>如何增加一块硬盘：</p><ul><li><p>虚拟机添加硬盘</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/28/7ee4943cabbf41bf684ced89228ec030.png" width="70%"/><p>使用 <code>lsblk</code> 命令查看磁盘分区情况，新添加的磁盘并未显示：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/28/e4d0f9e1b2920677841f4ddf8685ec1d.png" width="70%"/><p>重启后，重新执行该命令：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/29/716c0832aac26688db08137b433f0fc9.png" width="70%"/></li><li><p>分区</p><blockquote><p>sdb是一整块磁盘，要把它像sda一样分成sdb1…</p></blockquote><ul><li><p>使用 <code>fdisk /dev/sdb</code> 命令将磁盘分区：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/29/0f37a2569884e5a4bfe61dcce9bbd9ac.png" width="70%"/></li><li><p>输入m获取帮助：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/29/7b5dd2927cc501e695ef1f44f6af7b4e.png" width="70%"/></li><li><p>创建新分区：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/29/5d8c281d8447ebdfb2aafbed5b45c7e2.png" width="70%"/></li><li><p>再次使用 <code>lsblk -f</code> 查看磁盘分区情况：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/29/ef05d2e5db8f39171330f1f89d651a62.png" width="70%"/></li></ul></li><li><p>格式化</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkfs -l ext4 /dev/sdb1</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/29/62741e9137fc0533d806fd22098064a5.png" width="70%"/><p>格式化后，使用命令 <code>lsblk -f</code> 可查看其uuid：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/29/fb91f41e30d9da6e4b3147120cba7373.png" width="70%"/></li><li><p>挂载：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount /dev/sdb1 /home/newdisk/</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/29/221550a11b53b2b51521d3a0f992fb79.png" width="70%"/></li><li><p>设置自动挂载：</p><blockquote><p>如果不设置自动挂载，系统重启后挂载会被取消</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/fstab</span><br></pre></td></tr></table></figure><p>添加一行内容：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/29/15e29409adfc75d8208856a33109455b.png" width="70%"/></li></ul></li></ol><h1 id="磁盘情况查询"><a href="#磁盘情况查询" class="headerlink" title="磁盘情况查询"></a>磁盘情况查询</h1><h2 id="df"><a href="#df" class="headerlink" title="df"></a>df</h2><ol><li><p>语法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df -l  # 查看系统整体磁盘使用情况</span><br></pre></td></tr></table></figure></li><li><p>案例：查看系统整体磁盘使用情况</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df -lh  # 可选参数h，可将磁盘大小单位替换为K、G、T等</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/29/3335b7f2082b6b4f5bb32e14eb44e3d1.png" width="70%"/></li></ol><h2 id="du"><a href="#du" class="headerlink" title="du"></a>du</h2><ol><li><p>语法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">du /目录  # 查看指定目录磁盘占用情况，默认为当前目录</span><br></pre></td></tr></table></figure></li><li><p>可选参数：</p><ul><li>h   # 带计量单位</li><li>a  # 含文件</li><li>s  # 指定目录占用大小汇总</li><li>c  # 列出明细的同时，增加【总用量】</li><li>–max-depth=1  # 子目录深度</li></ul></li><li><p>案例：查看/opt目录的磁盘占用情况，深度为1</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">du -ach --max-depth=1 /opt</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/29/69697b98f4af8d92720243a0a0938825.png" width="70%"/><p>注意：增加depth深度不会影响总用量，但会增加文件搜索深度</p></li></ol><h2 id="wc"><a href="#wc" class="headerlink" title="wc"></a>wc</h2><ol><li><p>统计/home文件夹下文件个数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -l /home/ | grep &quot;^-&quot; | wc -l  # grep后跟的是正则表达式</span><br></pre></td></tr></table></figure></li><li><p>统计/home文件夹下目录个数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -l /home/ | grep &quot;^d&quot; | wc -l</span><br></pre></td></tr></table></figure></li><li><p>统计/home文件夹下文件个数，包含子文件夹中的文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -lR /home/ | grep &quot;^-&quot; | wc -l</span><br></pre></td></tr></table></figure></li><li><p>统计/home文件见下的目录个数，包含子文件夹中的目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -lR /home/ | grep &quot;^d&quot; | wc -l</span><br></pre></td></tr></table></figure></li><li><p>以树状显示/home目录结构</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tree /home</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/29/973e134bf2b322182b033b4f41e5fc22.png" width="70%"/><p>注意：如果出现下图提示，使用 <code>yum install tree</code> 命令安装tree（输入两次y）后，重新执行即可</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/29/69e06a84b713e5700b4ea69c235aa3d5.png" width="70%"/></li></ol><h1 id="网络配置"><a href="#网络配置" class="headerlink" title="网络配置"></a>网络配置</h1><h2 id="NAT原理图"><a href="#NAT原理图" class="headerlink" title="NAT原理图"></a>NAT原理图</h2><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/29/5a6414c9f2ed9712c8e7243fc77ea8b2.png" width="70%"/><h2 id="动态ip"><a href="#动态ip" class="headerlink" title="动态ip"></a>动态ip</h2><blockquote><p>自动获取，系统开机后不需要手动连接网络</p></blockquote><ol><li><p>进入系统-》首选项-》网络连接，编辑网络，勾选自动连接并应用：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/29/874d748cb3b54876b48b4758aa0c5600.png" width="70%"/></li><li><p>重启系统，观察网络是否自动连接：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/29/60ff1e1880ebf895d09cef135bb73faf.png" width="70%"/><p>缺点：linux每次自动获取的ip可能不一样，因此该方法不适用于服务器（服务器ip是不变的）</p></li></ol><h2 id="静态ip"><a href="#静态ip" class="headerlink" title="静态ip"></a>静态ip</h2><ol><li><p>原理：通过修改配置文件（/etc/sysconfig/network-scripts/ifcfg-eth0）来指定静态ip，并连接到因特网</p></li><li><p>案例：配置ip地址为静态ip</p><ul><li><p>确定要分配的ip地址段：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/29/46a581a874545b4a504e428f8bfbc399.png" width="70%"/></li><li><p>修改配置文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/sysconfig/network-scripts/ifcfg-eth0  # ip地址以192.168.72.130为例</span><br></pre></td></tr></table></figure><p>修改内容：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/06/9acede5678a26ad44b142e33878ee67c.png" width="70%"/></li><li><p>重启服务/系统：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service network restart  # 重启网络服务或重启系统（reboot）</span><br></pre></td></tr></table></figure></li></ul></li></ol><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/29/ec6d0fa3bcc40d7a9f8329a834920d55.png" width="70%"/><ul><li><p><code>ifconfig</code> 命令查看系统ip：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/29/ef1ff7a9c0d1c28beb60786ff5d2336f.png" width="70%"/></li><li><p>测试是否能够连接外网：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/29/12f06ef9bba48928f392219334dd3b4b.png" width="70%"/></li></ul><h1 id="进程管理"><a href="#进程管理" class="headerlink" title="进程管理"></a>进程管理</h1><h2 id="基本认识"><a href="#基本认识" class="headerlink" title="基本认识"></a>基本认识</h2><ol><li><p>在linux中，每个执行的程序（代码）都称为一个进程，每一个进程都分配一个进程id</p></li><li><p>每一个进程都会对应一个父进程，而这个父进程可以复制多个子进程</p></li><li><p>每个进程都能以两种方式存在（前台和后台）：</p><ul><li>前台就是用户目前屏幕上可以进行操作的</li><li>后台进程则是实际在操作的（屏幕上无法看到的进程，通常使用后台方式执行）</li></ul></li><li><p>一般系统的服务都是以后台进程的方式存在，而且都会常驻在系统中，直到关机才结束</p></li></ol><h2 id="系统进程"><a href="#系统进程" class="headerlink" title="系统进程"></a>系统进程</h2><ol><li><p>语法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ps -aux[可选项，显示所有进程，用户格式显示，显示进程参数]  # 查看系统进程</span><br><span class="line">ps -ef  # 显示指令的父进程</span><br></pre></td></tr></table></figure></li><li><p>案例：</p><ul><li><p>查找系统全部进程</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -aux | more  # 使用more指令分页，方便查看</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/29/300afffdfc6509c57233def020437f92.png" width="70%"/><p>注意：可以使用grep命令从所有命令中筛选出来某个进程（sshd为例）</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/29/2adbf85081ae75a0c9ceee40854af8d1.png" width="70%"/></li><li><p>显示进程的父进程：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -ef | more  # 显示父进程</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/29/f6667bf0ff5f7f087c0ffbf468fe4b6b.png" width="70%"/></li></ul></li></ol><h2 id="进程树"><a href="#进程树" class="headerlink" title="进程树"></a>进程树</h2><ol><li><p>语法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pstree -p[可选，显示进程id]  # 树状显示所有进程</span><br></pre></td></tr></table></figure></li><li><p>案例：树状形式显示所有进程及其id号</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/30/c07777eda07bb52bf28eb2825e7518fb.png" width="70%"/></li></ol><h2 id="终止进程"><a href="#终止进程" class="headerlink" title="终止进程"></a>终止进程</h2><ol><li><p>语法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kill -9[可选项，强制停止] 进程号  # 停止进程，当要kill的进程是系统进程时如果不加-9该指令会被忽略</span><br><span class="line">killall 进程名称  # 批量终止进程，进程名称支持通配符</span><br></pre></td></tr></table></figure></li><li><p>案例：</p><ul><li><p>踢掉非法登录的用户jerry：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ps -aux | grep sshd  # 获取jerry远程连接（sshd）的进程号*</span><br><span class="line">kill -9 *  # 使用kill命令，将该进程停止</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/29/64b1ad5ca3ef79a2f0f2671c313c6acf.png" width="70%"/></li><li><p>终止所有远程连接：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">killall sshd  # 停止所有sshd服务</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/30/aa63ab9d20f30ad0221a964be066ae07.png" width="70%"/></li><li><p>终止终端进程：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ps -aux | grep bash  # 查询终端（bash）的进程号*</span><br><span class="line">kill -9 *  # 终端为系统进程，单独执行kill *无效果</span><br></pre></td></tr></table></figure><p>查询进程号：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/30/5c080f1fa71554e497776e3735c60f61.png" width="70%"/><p>终止该进程：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/30/a7be70bd9f938af71715d6fcdbd890df.png" width="70%"/></li></ul></li></ol><h2 id="服务管理"><a href="#服务管理" class="headerlink" title="服务管理"></a>服务管理</h2><ol><li><p>介绍：</p><p>服务（service）本质就是进程，但是在后台运行的，通常都会监听某个端口，等待其他程序的请求，例如（mysqld，sshd，防火墙等），因此我们又称为守护进程。</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/30/fb82eaf1a6bd7abb8502004e06ca7ddb.png" width="70%"/></li><li><p>语法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service 服务名 [start|stop|restart|reload|status]  # 开启、停止、重启、重新加载（服务不会中断）、状态查询</span><br></pre></td></tr></table></figure></li><li><p>案例：</p><ul><li><p>查看当前防火墙（iptables）的状态，关闭和启动防火墙</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service iptables status  # 查询防火墙状态</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/30/b6d058d320d05816e1e1a284009a37c1.png" width="70%"/></li><li><p>关闭防火墙</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service iptables stop  # 关闭、启动防火墙</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/30/ca48de7a4983f87fd5b765876f9545a2.png" width="70%"/></li></ul></li><li><p>补充：</p><ul><li><p>查看某个端口状态：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">telnet ip地址 端口号</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/30/57096774e02f6c0e99da98b0b574131c.png" width="70%"/></li><li><p>查看所有服务名称：</p><ul><li><p>setup：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/30/d2b39d2efe0c6ba8f1950e0407baaae2.png" width="70%"/></li><li><p>/etc/init.d子目录：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /etc/init.d  # 进入该目录</span><br><span class="line">ls -l  # 查看子目录</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/30/25febe3382b717c97cfe12a90030ba4b.png" width="70%"/><p>注意：每个目录都代表一种服务</p></li></ul></li><li><p>管理每个系统（服务）运行级别下某个服务自启动：</p><ul><li><p>查看自启动状态：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chkconfig --list  # 查看每个运行级别下不同服务的自启动状态</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/30/f5cbbf70c8bb85b482635bacda5977ea.png" width="70%"/></li><li><p>案例：关闭sshd服务运行级别为5时的自启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chkconfig --level 5 sshd off  # 控制自启动状态</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/30/58fd4be6951ed72ffac0d4a6edd34f36.png" width="70%"/></li><li><p>注意：使用chkconfig命令修改自启动后需要重启系统才能生效</p></li></ul></li></ul></li><li><p>实例：</p><ul><li><p>案例1：请显示当前系统所有服务的各个运行级别的运行状态</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chkconfig --list</span><br></pre></td></tr></table></figure></li><li><p>案例2：请查看sshd服务的运行状态</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service ssdh status</span><br></pre></td></tr></table></figure></li><li><p>案例3：将sshd服务在运行级别5下设置为不自动启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chkconfig --level 5 sshd off</span><br></pre></td></tr></table></figure></li><li><p>案例4：当运行级别为5时，关闭防火墙</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chkconfig --level 5 iptables off</span><br></pre></td></tr></table></figure></li><li><p>案例5：在所有运行级别下，关闭防火墙</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chkconfig iptables off  # 如果不指定运行级别，则代表全部运行级别</span><br></pre></td></tr></table></figure></li><li><p>案例6：在所有运行级别下，开启防火墙</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chkconfig iptables on</span><br></pre></td></tr></table></figure></li></ul></li></ol><h2 id="动态监控进程"><a href="#动态监控进程" class="headerlink" title="动态监控进程"></a>动态监控进程</h2><ol><li><p>语法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">top  # 查看正在运行的进程，与ps的区别是可以动态显示系统进程（每3秒自动刷新一次）</span><br></pre></td></tr></table></figure></li><li><p>案例：</p><ul><li><p>动态显示系统进程，每隔10秒刷新一次：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">top -d 10</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/30/cba804cd0a1aa0522303a8a2a262f47f.png" width="70%"/></li><li><p>查询指定用户进程：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">u  # top状态下按下u键并输入用户名，即可显示指定用户的进程</span><br></pre></td></tr></table></figure></li><li><p>杀死指定进程：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">k  # top状态下按下k键并输入进程id，即可杀死该id对应的进程</span><br></pre></td></tr></table></figure></li><li><p>退出top指令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">q</span><br></pre></td></tr></table></figure></li></ul></li></ol><h2 id="监控网络状态"><a href="#监控网络状态" class="headerlink" title="监控网络状态"></a>监控网络状态</h2><ol><li><p>语法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -anp  # 查看系统网络情况</span><br></pre></td></tr></table></figure></li><li><p>案例：监控sshd网络服务状态</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -anp | grep sshd</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/30/b19dda6cbff690e9da8db2873efda932.png" width="70%"/></li></ol><h1 id="rpm包管理"><a href="#rpm包管理" class="headerlink" title="rpm包管理"></a>rpm包管理</h1><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><pre><code>一种用于互联网下载包的打包及安装工具，生成具有.rpm拓展名的文件。rpm是Redhat Package Manager的缩写，类似windows的setup.exe。</code></pre><h2 id="查询指令"><a href="#查询指令" class="headerlink" title="查询指令"></a>查询指令</h2><ol><li><p>语法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">rpm -qa  # 查询系统所安装的全部rpm包</span><br><span class="line">rpm -qi  软件名 # 查询安装包详细信息（版本、安装包）</span><br><span class="line">rpm -ql  软件名 # 查询软件安装路径</span><br><span class="line">rpm -qf  包名  # 查询所属软件包</span><br></pre></td></tr></table></figure></li><li><p>案例：</p><ul><li><p>查询火狐（firefox）的rpm包信息</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -qa | grep firefox</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/30/9296abdbc25859c8dfc3bbb2c059cbb1.png" width="70%"/></li><li><p>查询/etc/passwd目录所属软件包：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -qf /etc/passed</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/30/d380893c8d3b609422c276bebeadcb1d.png" width="70%"/></li></ul></li></ol><h2 id="卸载指令"><a href="#卸载指令" class="headerlink" title="卸载指令"></a>卸载指令</h2><ol><li><p>语法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -e 软件名  # 卸载软件</span><br></pre></td></tr></table></figure></li><li><p>案例：卸载火狐</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -e firefox</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/30/ca86de1c2a04b2fcc7cc4bf788a24970.png" width="70%"/><p>注意：在卸载时，可能提示 <code>removing these packages would break dependencies:foo is needed by bar-1.0-1</code></p><ul><li>放弃删除</li><li>强制删除：rpm -e –nodeps firefox（不推荐）</li></ul></li></ol><h2 id="安装指令"><a href="#安装指令" class="headerlink" title="安装指令"></a>安装指令</h2><ol><li><p>语法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -ivh[install(安装)，verbose(提示)，hash(进度条)] 包名  # 安装软件包</span><br></pre></td></tr></table></figure></li><li><p>案例：安装镜像文件中的firefox软件包</p><ul><li><p>挂载iso镜像：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/30/637e3afd940e4065fb84083c8320e0e5.png" width="70%"/><p>注意：挂载镜像后，就可以在系统中使用指令对镜像中内容进行操作</p></li><li><p>将/media/CentOS_6.8_Final/Packages/firefox-45.0.1-1.el6.centos.x86_64.rpm文件复制到/opt目录下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp firefox-45.0.1-1.el6.centos.x86_64.rpm /opt/</span><br></pre></td></tr></table></figure><p>注意：系统所需的rpm包都在/Packages下</p></li><li><p>进入/opt目录，使用rpm命令安装该软件包：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -ivh firefox-45.0.1-1.el6.centos.x86_64.rpm</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/30/b6a4dc29a039708799d93cf8ce3b96ba.png" width="70%"/></li></ul></li></ol><h1 id="yum包管理"><a href="#yum包管理" class="headerlink" title="yum包管理"></a>yum包管理</h1><h2 id="介绍-1"><a href="#介绍-1" class="headerlink" title="介绍"></a>介绍</h2><pre><code>Yum是一个Shell前端软件包管理器。基于RPM包管理，能够从指定的服务器下载RPM包并且安装，可以自动处理依赖关系，并且一次安装所有依赖的软件包（使用yum进行包管理需要联网）。</code></pre><h2 id="基本指令"><a href="#基本指令" class="headerlink" title="基本指令"></a>基本指令</h2><ol><li><p>查询yum服务器是否有需要安装的软件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum list | grep xx  # 筛选软件包</span><br></pre></td></tr></table></figure></li><li><p>安装指定的软件包：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install xxx # 下载安装</span><br></pre></td></tr></table></figure></li></ol><h2 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h2><blockquote><p>使用yum方式安装firefox</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum list | grep firefox  # 查询yum服务器上是否有该软件</span><br><span class="line">yum install firefox  # 安装firefox</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/06/94e4434ce355f493b01c0cb2c05f1df3.png" width="70%"/><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>​    linux笔记差不多就这么多啦！</p><p>​    其实后面还有shell编程，但没太多时间再学下去啦，有时间补上。</p><p>​    后面会更新人工智能的笔记，一定要坚持下去呀！</p><hr><p>不足之处，欢迎留言，会及时回复，及时更正！</p><p>创作不易，感谢支持！</p>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 实用指令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux实用指令（中）</title>
      <link href="62842.html"/>
      <url>62842.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>本文章最初发布在 <a href="https://plushine.cn">XJHui’s Blog</a>，未经允许，任何人禁止转载！</p><p><font color="red" style="font-weight:700">注意：</font>最新修改版本已发布在 <a href="https://plushine.cn/62842.html">这里</a>，点击前往查看！</p><h1 id="时间日期类"><a href="#时间日期类" class="headerlink" title="时间日期类"></a>时间日期类</h1><h2 id="date日期"><a href="#date日期" class="headerlink" title="date日期"></a>date日期</h2><ol><li><p>语法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">date  # 显示当前时间</span><br><span class="line">date &quot;+%Y&quot;  # 显示当前年份</span><br><span class="line">date &quot;+%Y-%m-%d %H:%M:%S&quot;  # 格式化显示当前年月日时分秒，其中-、:可以任意修改</span><br></pre></td></tr></table></figure></li><li><p>案例：</p><ul><li><p>显示当前时间：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">date</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/25/ed14ac00a477b5ffcd3116078e6d21de.png" width="70%"/></li><li><p>显示年月日时分秒：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">date &quot;+%Y-%m-%d %M:%D:%S&quot;</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/25/030a000746aa0fd999493f27a548cd4c.png" width="70%"/></li></ul></li></ol><h2 id="date设置"><a href="#date设置" class="headerlink" title="date设置"></a>date设置</h2><ol><li><p>语法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">date -s &#x27;年-月-日 时:分:秒&#x27;  # 设置日期，必须按照此格式设置时间</span><br></pre></td></tr></table></figure></li><li><p>案例：将日期设置为2020-10-01 0:0:0</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">date -s &#x27;2020-10-01 00:00:00&#x27;</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/25/8f57f93104e4657443680caf909d539e.png" width="70%"/></li></ol><h2 id="cal日历"><a href="#cal日历" class="headerlink" title="cal日历"></a>cal日历</h2><ol><li><p>语法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cal year[可选，显示该年份日历]  # 显示本月/指定年份的日历</span><br></pre></td></tr></table></figure></li><li><p>案例：显示2024年日历</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cal 2024</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/25/c0e056c9491ec76c4ec678a19f5c41ce.png" width="70%"/></li></ol><h1 id="搜索查找类"><a href="#搜索查找类" class="headerlink" title="搜索查找类"></a>搜索查找类</h1><h2 id="find"><a href="#find" class="headerlink" title="find"></a>find</h2><ol><li><p>语法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find 搜索范围 -name,-user,-size[可选一项] 文件名  # 查找文件</span><br></pre></td></tr></table></figure></li><li><p>案例：</p><ul><li><p>在/root目录下查找名称为c.txt的文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find /root/ -name c.txt  # 通配符也适用</span><br></pre></td></tr></table></figure></li><li><p>查找所有者为root用户的文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find /root/ -user root</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/25/c3cd35ba24b43b8fe7a002f63b105c75.png" width="70%"/></li><li><p>查找整个linux系统下大于20m的文件（+n大于，-n小于，n等于）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -size +20M  # 注意：单位为M、k等</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/25/58526532e4615145cb9bd9d4cf434720.png" width="70%"/></li></ul></li></ol><h2 id="locate"><a href="#locate" class="headerlink" title="locate"></a>locate</h2><ol><li><p>语法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">locate 搜索文件  # 快速定位文件路径</span><br></pre></td></tr></table></figure><p>注意：locate基于数据库进行查询，所以在第一次运行前要执行updatedb命令以更新数据库</p></li><li><p>案例：使用locate指令快速定位hello.txt文件所在目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">updatedb  # 更新（创建）数据库</span><br><span class="line">locate hello.txt</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/25/c73a815695685783e44bd478916ed569.png" width="70%"/></li></ol><h2 id="grep和"><a href="#grep和" class="headerlink" title="grep和|"></a>grep和|</h2><ol><li><p>语法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">grep 字符串  # 查找指定内容</span><br><span class="line">grep -n 字符串  # 查找指定内容并显示行号</span><br><span class="line">grep -i 字符串  # 不区分大小写</span><br></pre></td></tr></table></figure></li><li><p>案例：在hello.txt中查找所有yes并显示行号</p><ul><li><p>hello.txt内容：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/25/2bc536562763004bf08fc95883692e30.png" width="70%"/></li><li><p>代码：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat hello.txt | grep -ni yes</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/25/ea106177b26e2a85a2d868c3a00967ec.png" width="70%"/></li></ul></li></ol><h1 id="压缩和解压类"><a href="#压缩和解压类" class="headerlink" title="压缩和解压类"></a>压缩和解压类</h1><h2 id="gzip和gunzip"><a href="#gzip和gunzip" class="headerlink" title="gzip和gunzip"></a>gzip和gunzip</h2><ol><li><p>语法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gzip 文件  # 将文件压缩为.gz文件，后跟多个文件名即可压缩多个文件</span><br><span class="line">gunzip 文件.gz  # 将.gz后缀的文件解压</span><br></pre></td></tr></table></figure></li><li><p>案例：</p><ul><li><p>将/root下的hello.txt文件压缩：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gzip hello.txt</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/25/3c432a62ffb8f07efda685cc709fa62a.png" width="70%"/></li><li><p>将hello.txt.gz文件解压缩：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gunzip hello.txt.gz</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/25/fe440bc4a45f4fa44c5fd5a6abf72037.png" width="70%"/><p>注意：gzip只能用来压缩文件不能用来压缩目录，即使使用-r选项指定目录，也只能递归将目录下文件分别压缩</p></li></ul></li></ol><h2 id="zip和unzip"><a href="#zip和unzip" class="headerlink" title="zip和unzip"></a>zip和unzip</h2><ol><li><p>语法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">zip -r[可选，递归压缩] 压缩包名 文件  # 压缩文件目录</span><br><span class="line">unzip -d[可选，指定压缩后的位置] 文件.zip  # 解压.zip后缀的文件</span><br></pre></td></tr></table></figure></li><li><p>案例：</p><ul><li><p>将/home目录下的所有文件压缩为mypackage.zip：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zip -r mypackage.zip /home/  # 注意：压缩包名在原目录前面</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/25/d4396a796e87dd4e407af6747dcdd5f3.png" width="70%"/></li><li><p>将mypackage.zip解压到/opt/tmp：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unzip -d /opt/tmp mypackage.zip  # 注意：解压位置在压缩包前面</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/25/b8fcbf0d3c56d81aa93a32eba64a0b10.png" width="70%"/></li></ul></li></ol><h2 id="tar"><a href="#tar" class="headerlink" title="tar"></a>tar</h2><ol><li><p>语法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar [可选项，见下图] ***.tar.gz 要打包的内容（可为多个文件、目录）  # 压缩文件或目录</span><br></pre></td></tr></table></figure><p>可选项：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/25/ea2da0be90ba839acae9d9e8733a5f56.png" width="70%"/></li><li><p>案例：</p><ul><li><p>压缩多个文件，将/root/a.txt，/root/b.txt文件压缩成a_b.tar.gz：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zcvf a_b.tar.gz a.txt b.txt</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/25/6ea9afdaad2619ddda14ce745d020483.png" width="70%"/></li><li><p>压缩/home下的所有文件（非压缩/home目录）：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zcvf test.tar.gz /root/*  # 要区分/root/和/root/*</span><br></pre></td></tr></table></figure></li><li><p>解压a_b.tar.gz到当前目录：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf a_b.tar.gz </span><br></pre></td></tr></table></figure></li><li><p>解压a_b.tar.gz到/opt/tmp下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf a_b.tar.gz -C /opt/tmp/  # 注意：指定路径需要在路径前添加参数-C（大写），并且路径必须存在</span><br></pre></td></tr></table></figure></li></ul></li></ol><h1 id="组的管理"><a href="#组的管理" class="headerlink" title="组的管理"></a>组的管理</h1><h2 id="组的介绍"><a href="#组的介绍" class="headerlink" title="组的介绍"></a>组的介绍</h2><ol><li>概述：在linux中的每个用户必须属于一个组，不能独立于组外。</li><li>文件/目录：<ul><li>所有者：文件归属的用户</li><li>所在组：所有者所在的用户组的用户</li><li>其他组：非所在组的其它用户</li></ul></li></ol><h2 id="所有者"><a href="#所有者" class="headerlink" title="所有者"></a>所有者</h2><ol><li><p>查看文件所有者</p><ul><li><p>定义：一般为文件的创建者，谁创建了该文件，就自然成为该文件的创建者。</p></li><li><p>语法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -ahl  # 查看文件所有者，a（显示全部文件），h（human，使用M,k作为文件大小单位显示），l（列表显示）</span><br></pre></td></tr></table></figure></li><li><p>案例：创建一个组police，再创建一个用户tom属于组police，然后使用tom来创建一个文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">groupadd police  # 创建police用户组</span><br><span class="line">useradd -g police tom  # police用户组下创建用户tom</span><br><span class="line">passwd tom  # 设置用户tom的密码</span><br><span class="line"><span class="meta">#</span><span class="bash"> 使用tom用户登录服务器</span></span><br><span class="line">touch 1.txt  # 创建文件1.txt</span><br><span class="line">ls -ahl  # 使用ls命令查看1.txt文件的所有者</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/26/8623b6f8c415774b642dbb813b20f7c5.png" width="70%"/></li></ul></li><li><p>修改文件所有者：</p><ul><li><p>语法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chown 用户 文件  # 将文件所有者修改为用户</span><br></pre></td></tr></table></figure></li><li><p>案例：使用root创建一个apple.txt的文件，将其所有者修改为tom</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">touch apple.txt  # root账户下创建apple.txt文件</span><br><span class="line">ls -ahl  # 查看该文件所有者信息</span><br><span class="line">chown tom apple.txt  # 将apple.txt文件的所有者修改为tom</span><br><span class="line">ls -ahl  # 再次查看该文件所有者信息</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/26/6bfb550923d9ceacd1cad5b44dcb5d7f.png" width="70%"/><p>注意：虽然所有者改变了，但修改前后用户所在组均为root，所以仅修改所有者不会改变其所在组。</p></li></ul></li></ol><h2 id="所在组"><a href="#所在组" class="headerlink" title="所在组"></a>所在组</h2><ol><li><p>定义：当某个用户创建了一个文件后，默认这个文件的所在组就是该用户所在的组</p></li><li><p>语法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ls -ahl  # 查看文件所在组</span><br><span class="line">chgrp 用户组 文件  # 修改文件所在组为用户组</span><br></pre></td></tr></table></figure></li><li><p>案例：/root下创建文件aorange.txt文件，使用chgrp指令修改文件所在组为police</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">touch aorange.txt  # 创建文件</span><br><span class="line">ls -ahl  # 查看文件所在组</span><br><span class="line">chgrp police aorange.txt  # 修改文件所在组</span><br><span class="line">ls -ahl  # 再次查看文件所在组</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/26/9386789ef28331729b0549a707c698af.png" width="70%"/></li><li><p>同时修改文件所有者和所在组：</p><ul><li><p>语法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">chown -R 用户 文件  # 单独使用chown</span><br><span class="line">chgrp -R 用户组 文件  # 单独使用chgrp</span><br><span class="line">chown -R[可选，递归修改所有文件所有者和所在组] 用户:所在组 文件  # 同时修改文件所有者和所在组</span><br></pre></td></tr></table></figure></li><li><p>案例：修改/home/tom下文件的所有者和所在组为tom</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chown -R tom:tom tom/</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/26/2442bf9b47f45cb77b3f83335aa3d233.png" width="70%"/></li></ul></li></ol><h2 id="其他组"><a href="#其他组" class="headerlink" title="其他组"></a>其他组</h2><p>​    定义：除文件的所有者和所在组的用户外，系统的其它用户都是文件的其它组</p><h1 id="权限的管理"><a href="#权限的管理" class="headerlink" title="权限的管理"></a>权限的管理</h1><h2 id="权限介绍"><a href="#权限介绍" class="headerlink" title="权限介绍"></a>权限介绍</h2><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/26/cd4bddd312731ad7d1a5b2ad3102f8bc.png" width="70%"/><h2 id="rwx权限"><a href="#rwx权限" class="headerlink" title="rwx权限"></a>rwx权限</h2><ol><li><p>作用到文件：</p><ul><li>r（read）：可查看</li><li>w（write）：可修改，但不代表具有删除的权限（对文件所在目录具有w权限时，才可删除）</li><li>x（execute）：可被执行</li></ul></li><li><p>作用到目录：</p><ul><li>r：可读，ls查看目录内容</li><li>w：可写，目录内创建、删除、重命名</li><li>x：可执行，cd进入该目录</li></ul></li><li><p>注意：关于子目录数量</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/26/1aaf9676f82ab6fe02dec47f04154971.png" width="70%"/></li></ol><h2 id="修改权限"><a href="#修改权限" class="headerlink" title="修改权限"></a>修改权限</h2><ol><li><p>说明：使用chmod指令，可以修改文件或者目录的权限</p></li><li><p>使用+、-、=变更权限：</p><ul><li><p>语法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> u：所有者，g：所在组，o：其他组，a：所有用户（u+g+o）</span></span><br><span class="line">chmod u=rwx,g=x,o=x 文件/目录名  # 给文件/目录赋权限</span><br><span class="line">chmod o+w 文件/目录名  # 给文件/目录的其他组（o）添加一个写（w）权限</span><br><span class="line">chmod a-x  文件/目录名  # 给文件/目录的所有用户都减一个执行权限</span><br></pre></td></tr></table></figure></li><li><p>案例：</p><ul><li><p>给abc文件的所有者读写执行的权限，给所在组读执行的权限，给其他组用户执行权限</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod u=rwx,g=rx,u=x abc</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/26/0c7fb644d42886f4fdc133831f6999f0.png" width="70%"/></li><li><p>给abc文件的所有者除去执行权限，给所在组增加一个写的权限</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod u-x,g+w abc</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/26/018bd385c29bc5cb74cf2814244846ee.png" width="70%"/></li><li><p>给abc所有用户增加读的权限</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod a+w abc</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/26/b078a9364d6f348af32bb8db8b6a4447.png" width="70%"/></li></ul></li></ul></li><li><p>使用数字变更权限：</p><ul><li><p>语法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 规则：r=4，w=2，x=1</span></span><br><span class="line">chmod 751 abc  <span class="comment"># 等价于chmod u=rwx,g=rx,o=x abc</span></span><br></pre></td></tr></table></figure></li><li><p>案例：给abc文件的所有者读写执行的权限，给所在组读执行的权限，给其他组用户执行权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># u=rwx(7),g=wx(3),o=x(1)</span></span><br><span class="line">chmod 731 abc</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/26/8d26763066066285f8e8e2a3db58bbcc.png" width="70%"/></li></ul></li></ol><h1 id="最佳实践"><a href="#最佳实践" class="headerlink" title="最佳实践"></a>最佳实践</h1><h2 id="警察和土匪"><a href="#警察和土匪" class="headerlink" title="警察和土匪"></a>警察和土匪</h2><ol><li><p>题设：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">police,bandit  # 用户组</span><br><span class="line">jack,jerry  # 警察用户</span><br><span class="line">xh,xq  # 土匪用户</span><br></pre></td></tr></table></figure></li><li><p>题目：</p><ul><li><p>创建组</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">groupadd police</span><br><span class="line">groupadd bandit</span><br></pre></td></tr></table></figure></li><li><p>创建用户</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">useradd -g police jack</span><br><span class="line">passwd jack</span><br><span class="line">useradd -g police jerry</span><br><span class="line">passwd jerry</span><br><span class="line">useradd -g bandit xh</span><br><span class="line">passwd xh</span><br><span class="line">useradd -g bandit xq</span><br><span class="line">passwd xq</span><br></pre></td></tr></table></figure></li><li><p>使用jack用户登录并创建一个文件，自己可以读写，本组人可以读，其他组没有任何权限</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">touch a1.txt</span><br><span class="line">chmod 640 a1.txt </span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/26/262b38663f8f0c32cdc2dd4e175b05d3.png" width="70%"/></li><li><p>jack修改文件权限，让其他组人可以读，所在组用户可以写</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod o+r,g+w a1.txt</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/26/159149dea26272e70fea73b4743195dc.png" width="70%"/><p>验证同组可以修改：</p><ul><li><p>jerry账号登录并尝试进入/home/jack目录下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /home/jack/</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/26/4c335b6a0b924ca3877c4478ee0d3dff.png" width="70%"/><p>原因：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/26/3df90833b7d7c7e34dee07a2f009d6a3.png" width="70%"/><p>注意：这个很好理解，在自己家里有权限但在整栋楼不一定有权限</p></li><li><p>使用jack账户修改/home/jack文件的权限：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 750 jack/</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/26/c17c9a4bdf35d67e06515fcef42da18d.png" width="70%"/><p>注意：为什么给所在组5的权限？因为需要进入（x：1）和查看（r：4），所以总权限是4+1=5</p></li><li><p>再次尝试修改a1.txt文件内容：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/26/1da37c4123cd2514e580fe4ddd4b2d4f.png" width="70%"/></li></ul></li><li><p>xh投靠警察，看看是否可以读写</p><ul><li><p>修改xh的所在组：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">usermod -g police xh  # 注意：修改某个用户所在组需要root账户下操作</span><br></pre></td></tr></table></figure></li><li><p>尝试读写a1.txt文件：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/26/9644b246a2ff769b68d337be24b850f2.png" width="70%"/></li></ul></li></ul></li></ol><hr><p>不足之处，欢迎留言，会及时回复，及时更正！</p><p>创作不易，感谢支持！</p>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 实用指令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux实用指令（上）</title>
      <link href="41524.html"/>
      <url>41524.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>本文章最初发布在 <a href="https://plushine.cn">XJHui’s Blog</a>，未经允许，任何人禁止转载！</p><p><font color="red" style="font-weight:700">注意：</font>最新修改版本已发布在 <a href="https://plushine.cn/41524.html">这里</a>，点击前往查看！</p><h1 id="运行级别"><a href="#运行级别" class="headerlink" title="运行级别"></a>运行级别</h1><h2 id="级别概述"><a href="#级别概述" class="headerlink" title="级别概述"></a>级别概述</h2><ol><li><p>系统运行级别示意图：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/22/f8bc49ce02fee07208170efc5006b01a.png" width="50%"/></li><li><p>运行级别介绍：</p><ul><li>0关机</li><li>1单用户【找回root密码】</li><li>2多用户状态【无网络服务】</li><li>3多用户状态，有网络服务【常用】</li><li>4保留</li><li>5图形界面【常用】</li><li>6重启</li></ul></li><li><p>查看当前系统运行级别：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/inittab </span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/22/11a75b05339465732b0311429a84eb61.png" width="70%"/></li></ol><h2 id="切换运行级别"><a href="#切换运行级别" class="headerlink" title="切换运行级别"></a>切换运行级别</h2><ol><li><p>语法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">init [0,6]  # 不要使用4，因为4未被指定</span><br></pre></td></tr></table></figure></li><li><p>实例：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/22/9133d3f148bcb5b4bf1b35998e1e1cdb.png" width="70%"/><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/22/a8db499bd3175caa8644ec6a1aaebef9.png" width="70%"/><p>切换为图形化界面：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/22/56bde9f334dc6398d35d7f0ad81e764e.png" width="70%"/><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/24/6bfe7f6b12456ee9ad47aa3bcc145041.png" width="70%"/></li><li><p>特殊级别：</p><ul><li><p>级别0：关机</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">init 0</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/24/a9012b255d09c312bca4df0e4781fc26.png" width="70%"/></li><li><p>级别6：重启</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">init 6</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/24/2bb0f72363d952ecbea5517dd4d82775.png" width="70%"/></li></ul></li><li><p>两种修改方式的区别：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/inittable  # 在该文件中将系统运行级别修改为3，系统每次重启后运行级别均为3</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">init 3  # 命令行中执行init3，系统重启后运行级别与/etc/inittable中一致，未必是3</span><br></pre></td></tr></table></figure><p>注意：如果编辑/etc/inittable将系统运行级别设置为0，系统会无限重启！如何解决？看完下面的面试题就知道了</p></li></ol><h2 id="面试题"><a href="#面试题" class="headerlink" title="面试题"></a>面试题</h2><blockquote><p>如何找回丢失的root密码？</p></blockquote><ol><li><p>原理：进入单用户模式（系统运行级别为1），修改root密码（进入单用户模式不需要输入root密码）</p></li><li><p>操作：</p><ul><li><p>服务器启动时，按下enter键，输入e，上下移动光标选中第二行，再输入e：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/24/3f4c878dc981bf7cee98de474c48bb59.png" width="70%"/></li><li><p>下图命令行中输入 <code>空格1</code>，按下回车，输入b：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/24/4e3928c2246059f685b4ac4ab34b097e.png" width="70%"/></li><li><p>成功进入系统（无需root密码）：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/24/6c89232f77dcd7c9fce53b46b3287256.png" width="70%"/></li><li><p>使用passwd命令修改密码：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/24/7e6e92a15ab5757764a2fd907cdf163c.png" width="70%"/></li></ul></li><li><p>安全：该方法只能在服务器操作（不可远程）且一般的人也接触不到服务器，所以足够安全。个人电脑，安全？？</p></li></ol><h1 id="帮助指令"><a href="#帮助指令" class="headerlink" title="帮助指令"></a>帮助指令</h1><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><pre><code>当对某个命令不熟悉时，可以使用linux提供的帮助指令来了解这个命令的使用方法。</code></pre><h2 id="man指令"><a href="#man指令" class="headerlink" title="man指令"></a>man指令</h2><ol><li><p>语法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">man [命令或配置文件]  # 获取该命令的使用方法以及其它信息</span><br></pre></td></tr></table></figure></li><li><p>案例：查看ls命令的帮助信息</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">man ls</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/24/c137fab4e55fe5427bdf94a89f0dbdf9.png" width="70%"/><p>注意：按q退出man指令</p></li></ol><h2 id="help指令"><a href="#help指令" class="headerlink" title="help指令"></a>help指令</h2><ol><li><p>语法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">help 命令  # 获取该命令的使用方法以及其它信息</span><br></pre></td></tr></table></figure></li><li><p>实例：查看cd目录作用</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">help cd</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/24/7342eda6db48335244e39a3fa63d72b8.png" width="70%"/></li></ol><h1 id="文件目录类"><a href="#文件目录类" class="headerlink" title="文件目录类"></a>文件目录类</h1><h2 id="pwd"><a href="#pwd" class="headerlink" title="pwd"></a>pwd</h2><ol><li><p>语法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pwd  # 显示当前工作目录的绝对路径</span><br></pre></td></tr></table></figure></li><li><p>案例：显示当前工作目录</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/24/7e1a16362a82cdae01f1b7029ba35c54.png" width="70%"/></li></ol><h2 id="ls"><a href="#ls" class="headerlink" title="ls"></a>ls</h2><ol><li><p>语法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ls  # 显示当前目录下所有文件和文件夹</span><br><span class="line">ls -l  # 显示文件和文件夹的详细信息，可简写为ll</span><br><span class="line">ls -lh  # 显示文件和文件夹的详细信息，大小非字节</span><br><span class="line">ls -al  # 显示所有文件（含隐藏文件）的详细信息</span><br></pre></td></tr></table></figure></li><li><p>案例：查看当前路径下所有文件详细信息：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -al</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/24/4cba51fe870a746fc9a9d88eacacad29.png" width="70%"/></li></ol><h2 id="cd"><a href="#cd" class="headerlink" title="cd"></a>cd</h2><ol><li><p>语法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd 目录  # 切换到指定路径</span><br></pre></td></tr></table></figure></li><li><p>绝对路径和相对路径：当前所在路径为/root要求切换到/home路径下</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/24/f1033ff24b03c6937d884df7003588e8.png" width="70%"/><ul><li>绝对路径：/home</li><li>相对路径：../home（..代表返回上一级目录）</li></ul></li><li><p>案例：</p><ul><li><p>使用绝对路径切换到root目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /root</span><br></pre></td></tr></table></figure></li><li><p>回到上一级</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd ..</span><br></pre></td></tr></table></figure></li><li><p>回到家目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd ~</span><br></pre></td></tr></table></figure></li></ul></li></ol><h2 id="mkdir"><a href="#mkdir" class="headerlink" title="mkdir"></a>mkdir</h2><ol><li><p>语法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p[可选，创建多级目录] 目录名  # 创建文件夹</span><br></pre></td></tr></table></figure></li><li><p>案例：</p><ul><li><p>/home目录下创建dog目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir /home/dog</span><br></pre></td></tr></table></figure></li><li><p>/home目录下创建/animal/tiger</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /animal/tiger</span><br></pre></td></tr></table></figure></li></ul></li></ol><h2 id="rmdir"><a href="#rmdir" class="headerlink" title="rmdir"></a>rmdir</h2><ol><li><p>语法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rmdir 目录名  # 只能删除空目录</span><br></pre></td></tr></table></figure></li><li><p>案例：</p><ul><li><p>删除空目录tiger：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rmdir tiger/</span><br></pre></td></tr></table></figure></li><li><p>删除非空目录animal：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -rf animal/</span><br></pre></td></tr></table></figure><p>注意：rmdir不能删除非空目录，可以使用rm -rf命令代替</p></li></ul></li></ol><h2 id="touch"><a href="#touch" class="headerlink" title="touch"></a>touch</h2><ol><li><p>语法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">touch 文件名  # 创建空文件</span><br></pre></td></tr></table></figure></li><li><p>案例：</p><ul><li><p>创建一个空文件hello.txt</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">touch hello.txt</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/24/7c57551e51bb89a15fa22624b620b9ef.png" width="70%"/></li><li><p>一次创建多个文件 hello1.txt hello2.txt</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">touch hello1.txt hello1.txt</span><br></pre></td></tr></table></figure></li></ul></li></ol><h2 id="cp"><a href="#cp" class="headerlink" title="cp"></a>cp</h2><ol><li><p>语法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp -r[递归复制] source dest  # 将source拷贝到dest路径中</span><br></pre></td></tr></table></figure></li><li><p>案例：</p><ul><li><p>将aaa.txt移动到/root/test/中：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv aaa.txt /root/test/</span><br></pre></td></tr></table></figure></li><li><p>将/root/test目录拷贝到/home中：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp -r /root/test /home  # 递归复制</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/24/73b709fa80ccba08504275c315b0f430.png" width="70%"/></li><li><p>再次执行上个案例的拷贝命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp -r /root/test /home  # 递归复制</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/24/4c9beb97ad3b9de5561da90015918b8e.png" width="70%"/><p>如何跳过询问，强制覆盖？使用\cp命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\cp -r /root/test/ home/</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/24/6f17d8fdd7075dd265a98a872cfeec39.png" width="70%"/></li></ul></li></ol><h2 id="rm"><a href="#rm" class="headerlink" title="rm"></a>rm</h2><ol><li><p>语法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -r[可选，递归删除] f[可选，强制删除不提示] 文件名/目录  # 移除文件或目录</span><br></pre></td></tr></table></figure></li><li><p>案例：</p><ul><li><p>删除/root/linux.txt文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm linux.txt</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/25/a804d5dc872e8afefa28c4b1d4c8c3ae.png" width="70%"/></li><li><p>删除/root/windows.txt文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -f windows.txt  # 不提示，强制删除</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/25/40e860355013d5f57647dc73a8175722.png" width="70%"/><p>注意：和上一个案例区分，加上-f则不再询问是否删除</p></li><li><p>删除/root/bbb（非空）目录：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -rf /root/bbb  # 强制递归删除非空目录</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/25/bba8f885a79ab990551be1f4e52f3ed3.png" width="70%"/></li></ul></li></ol><h2 id="mv"><a href="#mv" class="headerlink" title="mv"></a>mv</h2><ol><li><p>语法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mv 文件名 文件名  # 重命名</span><br><span class="line">mv 文件名 路径  # 移动文件</span><br></pre></td></tr></table></figure></li><li><p>案例：</p><ul><li><p>将文件hello.cpp重命名为nihao.cpp：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv hello.cpp nihao.cpp</span><br></pre></td></tr></table></figure></li><li><p>将文件nihao.txt移动到/home/animal目录下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv nihao.cpp /home/animal/</span><br></pre></td></tr></table></figure></li></ul></li></ol><h2 id="cat"><a href="#cat" class="headerlink" title="cat"></a>cat</h2><ol><li><p>语法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat -n[可选，显示行号] 文件名  # 查看文件内容</span><br></pre></td></tr></table></figure></li><li><p>案例：查看/etx/profile文件内容，并显示行号</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat -n /etc/profile</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/24/d79e470be1298c73846d55dfaf569b18.png" width="70%"/><p>注意：执行cat命令后，文件内容会被一次显示，使用管道符|可分页显示</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat -n /etc/profile | more</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/24/961bbee5e976e32c58ea2e6bc7725715.png" width="70%"/><p>注意：按空格键可向下翻页，此方法不支持向上翻页，按q退出more指令</p></li></ol><h2 id="more"><a href="#more" class="headerlink" title="more"></a>more</h2><ol><li><p>语法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">more 文件名  # 全屏方式按页显示文本文件内容</span><br></pre></td></tr></table></figure></li><li><p>案例：采用more指令查看文件 /etc/profile</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">more /etc/profile</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/25/1e5bc4cdc67362bd5ba22058e7e5089c.png" width="70%"/><p>快捷键：</p><ul><li>下翻一行：enter</li><li>下翻页：空格、ctrl+f</li><li>上翻页：b、ctrl+b</li><li>退出more：q</li></ul></li></ol><h2 id="less"><a href="#less" class="headerlink" title="less"></a>less</h2><ol><li><p>语法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">less 文件名  # 按需加载，适合大文件的查看</span><br></pre></td></tr></table></figure></li><li><p>案例：使用less命令查看/etc/profile的内容</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">less /etc/profile</span><br></pre></td></tr></table></figure><p>快捷键与more基本相同，使用 <code>/字符串</code> 实现查询功能，n向下查询，N向上查询</p></li></ol><h2 id="gt-和-gt-gt"><a href="#gt-和-gt-gt" class="headerlink" title="&gt;和&gt;&gt;"></a>&gt;和&gt;&gt;</h2><ol><li><p>含义：</p><ul><li>&gt; （输出重定向）：会将文件原来的内容覆盖</li><li>&gt;&gt;（追加写）：不覆盖而是追加到文件的尾部</li></ul></li><li><p>案例：</p><ul><li><p>将ls -l指令显示的内容写入到a.txt文件中：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -l &gt; a.txt</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/25/65b4adb3fe8858593829945960db4c48.png" width="70%"/></li><li><p>将ls 指令显示的内容追加写到a.txt文件中：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls &gt;&gt; a.txt</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/25/8c464b6134a7335894e729f65c03a3c7.png" width="70%"/></li><li><p>将/etc/profile的内容写入到b.txt文件中：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/profile &gt; b.txt  # 与cat|more|less等命令搭配使用</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/25/b254bb86a31fd63a22f0f05536246bc8.png" width="70%"/></li><li><p>将 <code>hello world</code> 覆盖写入到a.txt文件中：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;hello world&quot; &gt; a.txt</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/25/81ddc9bdb53596602888676dde882d43.png" width="70%"/></li><li><p>请在当前目录（/home）打印/root的文件列表：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -l /root  # 打印其他路径下的文件目录，可以不cd到该路径下</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/25/1d6cff2f5fac04bbec50ebe5040509c3.png" width="70%"/></li></ul></li></ol><h2 id="echo"><a href="#echo" class="headerlink" title="echo"></a>echo</h2><ol><li><p>语法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo 变量/文本  # 输出环境变量、文本</span><br></pre></td></tr></table></figure></li><li><p>案例：输入linux的path路径</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo $PATH  # $PATH与windows下的path环境变量类似</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/25/8f0cfdf1d8ed4c9868c71874f7e1cc82.png" width="70%"/></li></ol><h2 id="head"><a href="#head" class="headerlink" title="head"></a>head</h2><ol><li><p>语法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">head -n 5[可选，显示指定行数] 文件名  # 显示文件开头内容，默认显示前10行 </span><br></pre></td></tr></table></figure></li><li><p>案例</p><ul><li><p>使用head命令显示/etc/profile文件的内容：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">head /etc/profile  # 默认显示前10行</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/25/a4bfe6bedf45205ff2a5610ab15d8a14.png" width="70%"/></li><li><p>使用head命令显示/etc/profile文件的前5行：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">head -n 5 /etc/profile  # 显示具体行数要加参数-n</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/25/6e8afdc664a6599d2ed643499de5f23d.png" width="70%"/></li></ul></li></ol><h2 id="tail"><a href="#tail" class="headerlink" title="tail"></a>tail</h2><ol><li><p>语法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tail 文件  # 默认显示文件后10行内容</span><br><span class="line">tail -n x 文件  # 与head类似也可以使用参数-n来显示具体后n行内容</span><br><span class="line">tail -f 文件  # 实时追踪该文档的所有更新，工作中很常用</span><br></pre></td></tr></table></figure></li><li><p>案例：</p><ul><li><p>显示/etc/profile后5行：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tail -n 5 /etc/profile</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/25/234e7642ce433a7c85e74ce85d982cf0.png" width="70%"/></li><li><p>实时追踪c.txt文件的变化：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 在虚拟机中向c.txt文件追加写入内容，并在xshell中使用tail -f监控文件变化</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/25/a3163efb4b39b62e8809778cfb67db1d.png" width="70%"/><p>注意：使用快捷键ctrl+c退出追踪</p></li></ul></li></ol><h2 id="ln"><a href="#ln" class="headerlink" title="ln"></a>ln</h2><ol><li><p>语法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s [原文件或目录] [软链接]  # 给原文件创建一个软链接（类似windows中个快捷方式）</span><br></pre></td></tr></table></figure></li><li><p>案例：</p><ul><li><p>/root目录下创建一个软链接，链接到/root目录：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s /root linkToRoot</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/25/1c0ca11c0d52f35c3a502e86323fce41.png" width="70%"/><p>软链接的使用：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd linkToRoot/</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/25/a676b3a9508e4daa7843e5fdf4ec77a2.png" width="70%"/></li><li><p>软链接的删除：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -rf linkToRoot  # 注意：删除软链接时最后不要添加/</span><br></pre></td></tr></table></figure></li></ul></li></ol><h2 id="history"><a href="#history" class="headerlink" title="history"></a>history</h2><ol><li><p>语法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">history  # 显示所有历史指令</span><br><span class="line">history 5  # 显示最近执行的5条指令</span><br><span class="line">!123  # 执行history中第123条指令</span><br></pre></td></tr></table></figure></li><li><p>案例：</p><ul><li><p>显示最近执行的6条指令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">history 6</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/25/aaf8724cbbd723af92c5781ff30091f2.png" width="70%"/></li><li><p>执行第286行指令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!286</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/25/1b81b5ae777e89cf193c3e9ac3eb70c8.png" width="70%"/></li></ul></li></ol><hr><p>不足之处，欢迎留言，会及时回复，及时更正！</p><p>创作不易，感谢支持！</p>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 实用指令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用户与用户组的管理</title>
      <link href="41140.html"/>
      <url>41140.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>本文章最初发布在 <a href="https://plushine.cn">XJHui’s Blog</a>，未经允许，任何人禁止转载！</p><p><font color="red" style="font-weight:700">注意：</font>最新修改版本已发布在 <a href="https://plushine.cn/41140.html">这里</a>，点击前往查看！</p><h1 id="关系概图"><a href="#关系概图" class="headerlink" title="关系概图"></a>关系概图</h1><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/22/8c6bfbc6dda8f5d1cd46abce01143710.png" width="70%"/><h1 id="用户"><a href="#用户" class="headerlink" title="用户"></a>用户</h1><h2 id="添加用户"><a href="#添加用户" class="headerlink" title="添加用户"></a>添加用户</h2><ol><li><p>语法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useradd 用户名</span><br></pre></td></tr></table></figure><p>案例：创建用户xl</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/26/a1f6d5cf1c767ab687de0b2be090ae17.png" width="70%"/><p>说明：</p><ul><li><p>如果不指明家目录，会自动创建与用户同名的家目录/home/xl</p></li><li><p>创建用户并指明家目录：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useradd -d 目录 用户名  # 指定家目录（指定/home下不存在的目录）</span><br></pre></td></tr></table></figure><p>案例：创建用户xj，家目录为/home/tigger</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/22/4f6d1824ef35fb28f4066e8d5ca63c13.png" width="70%"/></li></ul></li><li><p>设置用户密码：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/22/215c9d1609f888d8858b048a4c5074df.png" width="70%"/></li><li><p>登录新账户：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">user: xh</span><br><span class="line">passed: xh</span><br></pre></td></tr></table></figure><p>登录成功（默认进入到家目录）：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/22/59ee3cf7a4a2f40985fbe5171f426d8d.png" width="70%"/></li></ol><h2 id="删除用户"><a href="#删除用户" class="headerlink" title="删除用户"></a>删除用户</h2><ol><li><p>语法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">userdel 用户名</span><br></pre></td></tr></table></figure></li><li><p>案例：</p><ul><li><p>删除用户xl，保留家目录：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/22/8196af0df2928d0028a9ff5754785c7f.png" width="70%"/></li><li><p>删除用户xj和家目录（/home/tigger）：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/22/5a98015dd5beb1be45b35b79abb61a5c.png" width="70%"/></li></ul></li><li><p>思考：正常工作中是否要删除家目录？</p><p>因为用户在工作中产生的代码会存放在家目录中，所以家目录一般不需要删除</p></li></ol><h2 id="查询用户信息"><a href="#查询用户信息" class="headerlink" title="查询用户信息"></a>查询用户信息</h2><ol><li><p>语法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id 用户名</span><br></pre></td></tr></table></figure></li><li><p>案例：查询root用户信息</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/22/88acdf3737111f3962fb59272cbc1d2c.png" width="70%"/><p>注意：如果用户不存在，会返回 “无此用户”</p></li></ol><h2 id="切换用户"><a href="#切换用户" class="headerlink" title="切换用户"></a>切换用户</h2><ol><li><p>介绍：</p><p>在linux中，如果用户权限不够，可以通过su - 命令切换到高权限用户（例如root）</p></li><li><p>案例：在zf用户下使用 <code>su - root</code> 命令，切换回root用户</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/22/4b1a8b9e8f56904e9d9838fd295d9637.png" width="70%"/><p>注意：</p><ul><li><p>从高权限到低权限切换用户不需要输入密码，反之需要</p></li><li><p><code>exit</code> 命令可切换为原来的用户</p></li><li><p><code>whoami</code>（<code>who am i</code>） 命令可查看当前用户名称（用户信息）</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/22/f14d4c26327427b34d023a20f81b68ed.png" width="70%"/></li></ul></li></ol><h1 id="用户组"><a href="#用户组" class="headerlink" title="用户组"></a>用户组</h1><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><p>​    类似于小组，系统可以对有共性的多个用户进行统一的管理</p><h2 id="组的操作"><a href="#组的操作" class="headerlink" title="组的操作"></a>组的操作</h2><ol><li><p>创建用户组：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">groupadd wudang</span><br></pre></td></tr></table></figure></li><li><p>删除用户组：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">groupdel wudang</span><br></pre></td></tr></table></figure><p>案例：创建用户zwj并将其添加到用户组wudang中</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/22/f775e474299c516bb43b8ef118a95681.png" width="70%"/><p>注意：家目录和用户组不是一个东西，要区分开</p></li><li><p>修改用户组：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">usermod -g 用户新组名 用户名</span><br></pre></td></tr></table></figure><p>案例：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/22/63fca35ab5399ba517dd9c8ae0104acc.png" width="70%"/></li></ol><h1 id="用户和组的相关文件"><a href="#用户和组的相关文件" class="headerlink" title="用户和组的相关文件"></a>用户和组的相关文件</h1><h2 id="用户配置信息"><a href="#用户配置信息" class="headerlink" title="用户配置信息"></a>用户配置信息</h2><blockquote><p>存放用户基本信息</p></blockquote><ol><li><p>路径：/etc/passwd</p></li><li><p>配置信息组成：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/22/605c5f1ffaf3a6ef28497c10271d2194.png" width="70%"/></li></ol><h2 id="口令配置文件"><a href="#口令配置文件" class="headerlink" title="口令配置文件"></a>口令配置文件</h2><blockquote><p>存放用户密码</p></blockquote><ol><li>路径：/etc/shadow</li><li>配置信息组成：</li></ol><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/22/09732b9242a62fd2576e6664e8516839.png" width="70%"/><h2 id="组配置文件"><a href="#组配置文件" class="headerlink" title="组配置文件"></a>组配置文件</h2><blockquote><p>记录linux包含的组的信息</p></blockquote><ol><li><p>路径：/etc/group</p></li><li><p>配置信息组成：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/22/6f622e816978ea864576e037e3f2587f.png" width="70%"/></li></ol><hr><p>不足之处，欢迎留言，会及时回复，及时更正！</p><p>创作不易，感谢支持！</p>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 用户 </tag>
            
            <tag> 用户组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vi和Vim编辑器与服务器关机和重启</title>
      <link href="49560.html"/>
      <url>49560.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>本文章最初发布在 <a href="https://plushine.cn">XJHui’s Blog</a>，未经允许，任何人禁止转载！</p><p><font color="red" style="font-weight:700">注意：</font>最新修改版本已发布在 <a href="https://plushine.cn/49560.html">这里</a>，点击前往查看！</p><h1 id="Vi和Vim基本介绍"><a href="#Vi和Vim基本介绍" class="headerlink" title="Vi和Vim基本介绍"></a>Vi和Vim基本介绍</h1><blockquote><p>所有的linux系统都会内置vi文本编辑器</p></blockquote><h2 id="两者区别"><a href="#两者区别" class="headerlink" title="两者区别"></a>两者区别</h2><ul><li>vim是vi的 ‘增强版’ ，具有程序编辑能力</li><li>可根据字体颜色辨别语法的正确性，方便程序设计</li><li>代码补全、编译、错误跳转等功能丰富</li></ul><h2 id="vi和vim常用的三种模式"><a href="#vi和vim常用的三种模式" class="headerlink" title="vi和vim常用的三种模式"></a>vi和vim常用的三种模式</h2><ul><li>正常（一般）模式：可以使用快捷键</li><li>插入（编辑）模式：可以输入内容，i、o等字母进入编辑模式</li><li>命令行模式：实现保存、替换、添加行号、离开vim等功能</li></ul><h2 id="快速入门案例"><a href="#快速入门案例" class="headerlink" title="快速入门案例"></a>快速入门案例</h2><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/21/37dddf6254e63db344a58947f40fcb1b.png" width="55%"/><ol><li><p>进入正常模式：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim hello.cpp</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/21/5c41c5bc6b0965a9f21d6ef1396cb6bf.png" width="55%"/></li><li><p>按 <code>i</code> 键进入编辑模式：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/21/c960e7bbdd6968744e8484ded3b89dc3.png" width="55%"/><p>输入代码：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/21/37be8630f07d267a3881b9a26ad60024.png" width="55%"/></li><li><p>按下 <code>Esc</code> 键进入命令模式：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wq  # 保存退出</span><br><span class="line">:q  # 不保存退出（内容为改变）</span><br><span class="line">:q!  # 强制退出（内容改变）</span><br></pre></td></tr></table></figure><p>保存退出：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/21/add50f605be901b547c13d814e01c394.png" width="55%"/><p>再次进入正常模式，之前输入的代码依然存在：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/21/299b828f2924a1f03191e13404cbe483.png" width="55%"/></li></ol><h1 id="Vi和Vim快捷键"><a href="#Vi和Vim快捷键" class="headerlink" title="Vi和Vim快捷键"></a>Vi和Vim快捷键</h1><blockquote><p>来源：<a href="https://www.runoob.com/linux/linux-vim.html">菜鸟教程</a></p></blockquote><h2 id="正常模式"><a href="#正常模式" class="headerlink" title="正常模式"></a>正常模式</h2><table><thead><tr><th align="left">h 或 向左箭头键(←)</th><th>光标向左移动一个字符</th></tr></thead><tbody><tr><td align="left">j 或 向下箭头键(↓)</td><td>光标向下移动一个字符</td></tr><tr><td align="left">k 或 向上箭头键(↑)</td><td>光标向上移动一个字符</td></tr><tr><td align="left">l 或 向右箭头键(→)</td><td>光标向右移动一个字符</td></tr><tr><td align="left">[Ctrl] + [f]</td><td>屏幕『向下』移动一页，相当于 [Page Down]按键 (常用)</td></tr><tr><td align="left">[Ctrl] + [b]</td><td>屏幕『向上』移动一页，相当于 [Page Up] 按键 (常用)</td></tr><tr><td align="left">[Ctrl] + [d]</td><td>屏幕『向下』移动半页</td></tr><tr><td align="left">[Ctrl] + [u]</td><td>屏幕『向上』移动半页</td></tr><tr><td align="left">+</td><td>光标移动到非空格符的下一行</td></tr><tr><td align="left">-</td><td>光标移动到非空格符的上一行</td></tr><tr><td align="left">n<space></td><td>那个 n 表示『数字』，例如 20 。按下数字后再按空格键，光标会向右移动这一行的 n 个字符。例如 20<space> 则光标会向后面移动 20 个字符距离。</td></tr><tr><td align="left">0 或功能键[Home]</td><td>这是数字『 0 』：移动到这一行的最前面字符处 (常用)</td></tr><tr><td align="left">$ 或功能键[End]</td><td>移动到这一行的最后面字符处(常用)</td></tr><tr><td align="left">H</td><td>光标移动到这个屏幕的最上方那一行的第一个字符</td></tr><tr><td align="left">M</td><td>光标移动到这个屏幕的中央那一行的第一个字符</td></tr><tr><td align="left">L</td><td>光标移动到这个屏幕的最下方那一行的第一个字符</td></tr><tr><td align="left">G</td><td>移动到这个档案的最后一行(常用)</td></tr><tr><td align="left">nG</td><td>n 为数字。移动到这个档案的第 n 行。例如 20G 则会移动到这个档案的第 20 行(可配合 :set nu)</td></tr><tr><td align="left">gg</td><td>移动到这个档案的第一行，相当于 1G 啊！ (常用)</td></tr><tr><td align="left">n<Enter></td><td>n 为数字。光标向下移10动 n 行(常用)</td></tr><tr><td align="left"><strong>搜索替换</strong></td><td></td></tr><tr><td align="left">/word</td><td>向光标之下寻找一个名称为 word 的字符串。例如要在档案内搜寻 vbird 这个字符串，就输入 /vbird 即可！ (常用)</td></tr><tr><td align="left">?word</td><td>向光标之上寻找一个字符串名称为 word 的字符串。</td></tr><tr><td align="left">n</td><td>这个 n 是英文按键。代表重复前一个搜寻的动作。举例来说， 如果刚刚我们执行 /vbird 去向下搜寻 vbird 这个字符串，则按下 n 后，会向下继续搜寻下一个名称为 vbird 的字符串。如果是执行 ?vbird 的话，那么按下 n 则会向上继续搜寻名称为 vbird 的字符串！</td></tr><tr><td align="left">N</td><td>这个 N 是英文按键。与 n 刚好相反，为『反向』进行前一个搜寻动作。 例如 /vbird 后，按下 N 则表示『向上』搜寻 vbird 。</td></tr><tr><td align="left">使用 /word 配合 n 及 N 是非常有帮助的！可以让你重复的找到一些你搜寻的关键词！</td><td></td></tr><tr><td align="left">:n1,n2s/word1/word2/g</td><td>n1 与 n2 为数字。在第 n1 与 n2 行之间寻找 word1 这个字符串，并将该字符串取代为 word2 ！举例来说，在 100 到 200 行之间搜寻 vbird 并取代为 VBIRD 则： 『:100,200s/vbird/VBIRD/g』。(常用)</td></tr><tr><td align="left"><strong>:1,$s/word1/word2/g</strong> 或 <strong>:%s/word1/word2/g</strong></td><td>从第一行到最后一行寻找 word1 字符串，并将该字符串取代为 word2 ！(常用)</td></tr><tr><td align="left"><strong>:1,$s/word1/word2/gc</strong> 或 <strong>:%s/word1/word2/gc</strong></td><td>从第一行到最后一行寻找 word1 字符串，并将该字符串取代为 word2 ！且在取代前显示提示字符给用户确认 (confirm) 是否需要取代！(常用)</td></tr><tr><td align="left">删除、复制与粘贴</td><td></td></tr><tr><td align="left">x, X</td><td>在一行字当中，x 为向后删除一个字符 (相当于 [del] 按键)， X 为向前删除一个字符(相当于 [backspace] 亦即是退格键) (常用)</td></tr><tr><td align="left">nx</td><td>n 为数字，连续向后删除 n 个字符。举例来说，我要连续删除 10 个字符， 『10x』。</td></tr><tr><td align="left">dd</td><td>删除游标所在的那一整行(常用)</td></tr><tr><td align="left">ndd</td><td>n 为数字。删除光标所在的向下 n 行，例如 20dd 则是删除 20 行 (常用)</td></tr><tr><td align="left">d1G</td><td>删除光标所在到第一行的所有数据</td></tr><tr><td align="left">dG</td><td>删除光标所在到最后一行的所有数据</td></tr><tr><td align="left">d$</td><td>删除游标所在处，到该行的最后一个字符</td></tr><tr><td align="left">d0</td><td>那个是数字的 0 ，删除游标所在处，到该行的最前面一个字符</td></tr><tr><td align="left">yy</td><td>复制游标所在的那一行(常用)</td></tr><tr><td align="left">nyy</td><td>n 为数字。复制光标所在的向下 n 行，例如 20yy 则是复制 20 行(常用)</td></tr><tr><td align="left">y1G</td><td>复制游标所在行到第一行的所有数据</td></tr><tr><td align="left">yG</td><td>复制游标所在行到最后一行的所有数据</td></tr><tr><td align="left">y0</td><td>复制光标所在的那个字符到该行行首的所有数据</td></tr><tr><td align="left">y$</td><td>复制光标所在的那个字符到该行行尾的所有数据</td></tr><tr><td align="left">p, P</td><td>p 为将已复制的数据在光标下一行贴上，P 则为贴在游标上一行！ 举例来说，我目前光标在第 20 行，且已经复制了 10 行数据。则按下 p 后， 那 10 行数据会贴在原本的 20 行之后，亦即由 21 行开始贴。但如果是按下 P 呢？ 那么原本的第 20 行会被推到变成 30 行。 (常用)</td></tr><tr><td align="left">J</td><td>将光标所在行与下一行的数据结合成同一行</td></tr><tr><td align="left">c</td><td>重复删除多个数据，例如向下删除 10 行，[ 10cj ]</td></tr><tr><td align="left">u</td><td>复原前一个动作。(常用)</td></tr><tr><td align="left">[Ctrl]+r</td><td>重做上一个动作。(常用)</td></tr><tr><td align="left">这个 u 与 [Ctrl]+r 是很常用的指令！一个是复原，另一个则是重做一次～ 利用这两个功能按键，你的编辑，嘿嘿！很快乐的啦！</td><td></td></tr><tr><td align="left">.</td><td>不要怀疑！这就是小数点！意思是重复前一个动作的意思。 如果你想要重复删除、重复贴上等等动作，按下小数点『.』就好了！ (常用)</td></tr></tbody></table><h2 id="切换到编辑模式"><a href="#切换到编辑模式" class="headerlink" title="切换到编辑模式"></a>切换到编辑模式</h2><table><thead><tr><th align="left">i, I</th><th>进入输入模式(Insert mode)： i 为『从目前光标所在处输入』， I 为『在目前所在行的第一个非空格符处开始输入』。 (常用)</th></tr></thead><tbody><tr><td align="left">a, A</td><td>进入输入模式(Insert mode)： a 为『从目前光标所在的下一个字符处开始输入』， A 为『从光标所在行的最后一个字符处开始输入』。(常用)</td></tr><tr><td align="left">o, O</td><td>进入输入模式(Insert mode)： 这是英文字母 o 的大小写。o 为『在目前光标所在的下一行处输入新的一行』； O 为在目前光标所在处的上一行输入新的一行！(常用)</td></tr><tr><td align="left">r, R</td><td>进入取代模式(Replace mode)： r 只会取代光标所在的那一个字符一次；R会一直取代光标所在的文字，直到按下 ESC 为止；(常用)</td></tr><tr><td align="left">上面这些按键中，在 vi 画面的左下角处会出现『–INSERT–』或『–REPLACE–』的字样。 由名称就知道该动作了吧！！特别注意的是，我们上面也提过了，你想要在档案里面输入字符时， 一定要在左下角处看到 INSERT 或 REPLACE 才能输入喔！</td><td></td></tr><tr><td align="left">[Esc]</td><td>退出编辑模式，回到一般模式中(常用)</td></tr></tbody></table><h2 id="指令模式"><a href="#指令模式" class="headerlink" title="指令模式"></a>指令模式</h2><table><thead><tr><th align="left">:w</th><th>将编辑的数据写入硬盘档案中(常用)</th></tr></thead><tbody><tr><td align="left">:w!</td><td>若文件属性为『只读』时，强制写入该档案。不过，到底能不能写入， 还是跟你对该档案的档案权限有关啊！</td></tr><tr><td align="left">:q</td><td>离开 vi (常用)</td></tr><tr><td align="left">:q!</td><td>若曾修改过档案，又不想储存，使用 ! 为强制离开不储存档案。</td></tr><tr><td align="left">注意一下啊，那个惊叹号 (!) 在 vi 当中，常常具有『强制』的意思～</td><td></td></tr><tr><td align="left">:wq</td><td>储存后离开，若为 :wq! 则为强制储存后离开 (常用)</td></tr><tr><td align="left">ZZ</td><td>这是大写的 Z 喔！如果修改过，保存当前文件，然后退出！效果等同于(保存并退出)</td></tr><tr><td align="left">ZQ</td><td>不保存，强制退出。效果等同于 :q!。</td></tr><tr><td align="left">:w [filename]</td><td>将编辑的数据储存成另一个档案（类似另存新档）</td></tr><tr><td align="left">:r [filename]</td><td>在编辑的数据中，读入另一个档案的数据。亦即将 『filename』 这个档案内容加到游标所在行后面</td></tr><tr><td align="left">:n1,n2 w [filename]</td><td>将 n1 到 n2 的内容储存成 filename 这个档案。</td></tr><tr><td align="left">:! command</td><td>暂时离开 vi 到指令行模式下执行 command 的显示结果！例如 『:! ls /home』即可在 vi 当中察看 /home 底下以 ls 输出的档案信息！</td></tr><tr><td align="left">vim 环境的变更</td><td></td></tr><tr><td align="left">:set nu</td><td>显示行号，设定之后，会在每一行的前缀显示该行的行号</td></tr><tr><td align="left">:set nonu</td><td>与 set nu 相反，为取消行号！</td></tr></tbody></table><h1 id="关机和重启"><a href="#关机和重启" class="headerlink" title="关机和重启"></a>关机和重启</h1><h2 id="基本命令"><a href="#基本命令" class="headerlink" title="基本命令"></a>基本命令</h2><ul><li>shutdown：可关机，可重启，详见下文</li><li>halt：关机</li><li>reboot：重启计算机</li><li>sync：把内存中的数据同步到磁盘（关机、重启前执行，防止数据丢失）</li></ul><h2 id="shutdown"><a href="#shutdown" class="headerlink" title="shutdown"></a>shutdown</h2><ol><li><p>关机：</p><ul><li>立即关机：shutdown -h now</li><li>x分钟后关机：shutdown -h x</li></ul></li><li><p>重启：</p><ul><li>立即重启：shutdown -r now</li><li>x分钟后重启：shutdown -r x</li></ul><p>注意：-h代表关机，-r代表重启，now代表立刻，x代表x分钟后</p></li></ol><h2 id="退出远程连接"><a href="#退出远程连接" class="headerlink" title="退出远程连接"></a>退出远程连接</h2><p>命令行输入：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">logout</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/21/e536cbaf68331849814a8aca9bfe5e9d.png" width="55%"/><hr><p><strong>不足之处，欢迎留言，会及时回复，及时更正！</strong></p><p><strong>创作不易，感谢支持！</strong></p>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vim编辑器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>与服务器的远程连接和文件传输</title>
      <link href="41011.html"/>
      <url>41011.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>本文章最初发布在 <a href="https://plushine.cn">XJHui’s Blog</a>，未经允许，任何人禁止转载！</p><p><font color="red" style="font-weight:700">注意：</font>最新修改版本已发布在 <a href="https://plushine.cn/41011.html">这里</a>，点击前往查看！</p><h1 id="远程连接"><a href="#远程连接" class="headerlink" title="远程连接"></a>远程连接</h1><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/20/fbeedb45db59115cc1e59bbce7f158da.png" width="60%"/><ol><li><p>为什么要远程连接？</p><ul><li><p>公司服务器不是个人电脑更不是虚拟机，其有独立的机房存放</p></li><li><p>补充：有的机房 “藏” 在山里，一方面可以防止人为干扰，另一方面气温较低有助于服务器冷却</p></li></ul></li><li><p>如何远程连接？用什么软件？</p><ul><li>Xshell：实现远程连接、命令行操控服务器</li><li>Xftp：帮助服务器实现文件的上传和下载</li></ul><p>注意：上面只是比较常用的两款工具与其它软件大同小异</p></li></ol><h1 id="Xshell"><a href="#Xshell" class="headerlink" title="Xshell"></a>Xshell</h1><h2 id="软件特点"><a href="#软件特点" class="headerlink" title="软件特点"></a>软件特点</h2><ul><li>速度流畅</li><li>完美解决了中文乱码的问题</li><li>支持windows平台</li></ul><h2 id="下载、安装"><a href="#下载、安装" class="headerlink" title="下载、安装"></a>下载、安装</h2><ul><li><p>下载地址：<a href="https://xjhui.lanzous.com/b00zts8lc">在这</a>  感谢：<a href="http://www.lanzou.com/account.php?action=register&USBfNAUzDTxUZwNhWzJROFs7BzUBaA==">蓝奏云</a></p></li><li><p>访问密码: 348h  </p></li></ul><h2 id="连接服务器"><a href="#连接服务器" class="headerlink" title="连接服务器"></a>连接服务器</h2><blockquote><p>虚拟机为例</p></blockquote><ol><li><p>开启虚拟机的sshd（22号）端口</p><ul><li><p>虚拟机桌面右键-》在终端中打开-》输入命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setup</span><br></pre></td></tr></table></figure><p>回车：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/20/849377d5850f8976f757f9352004a063.png" width="55%"/><p>光标移动到 <code>系统服务</code>（方向下键）回车，找到 <code>sshd</code>：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/20/bb688e5a511b8ca4f5936bb8b7180035.png" width="55%"/><p>如果没有开启，光标选中后按下空格即可开启</p><p>按下tab键，光标移动到 <code>取消</code> ，再次按下回车键即可关闭弹窗</p></li></ul></li><li><p>查看虚拟机ip地址</p><p>命令行输入：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ifconfig</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/20/ccb6c65c89ff289fde1bc4f1b65e90f6.png" width="55%"/><p>注意：</p><ul><li>如果找不到IP地址，尝试重新连接网络</li><li>上图框选出的内容即为虚拟机分配的ip地址</li></ul></li><li><p>打开xshell，新建连接-》输入上面获取的ip地址-》点击确定：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/20/be571adf84a801e1828b0b3501ee1f01.png" width="55%"/></li><li><p>连接虚拟机：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/20/747da70cc77b26357a4d3dbf08a3d6d4.png" width="55%"/></li><li><p>接受主机密钥-》输入用户名（root）和密码（安装系统时设置的）：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/20/8fd5c7e05a992c8890f31c4c7dd72a8d.png" width="55%"/></li><li><p>连接成功：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/20/9766dbc3921d462f0f8e892b2ebc3be6.png" width="55%"/></li></ol><h2 id="其它设置"><a href="#其它设置" class="headerlink" title="其它设置"></a>其它设置</h2><ol><li><p>配色方案：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/20/e882127e2f84abca2e270ec5e677e2dc.png" width="55%"/></li><li><p>字体：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/20/8881c38f612c864fbd512041dda914cf.png" width="55%"/></li></ol><h1 id="Xftp"><a href="#Xftp" class="headerlink" title="Xftp"></a>Xftp</h1><h2 id="软件特点-1"><a href="#软件特点-1" class="headerlink" title="软件特点"></a>软件特点</h2><ul><li>支持sftp、ftp文件传输</li><li>基于windows平台</li></ul><h2 id="下载、安装-1"><a href="#下载、安装-1" class="headerlink" title="下载、安装"></a>下载、安装</h2><ul><li>下载地址：<a href="https://xjhui.lanzous.com/b00zts8lc">在这</a>  感谢：<a href="http://www.lanzou.com/account.php?action=register&USBfNAUzDTxUZwNhWzJROFs7BzUBaA==">蓝奏云</a></li><li>访问密码: 348h</li></ul><h2 id="连接服务器-1"><a href="#连接服务器-1" class="headerlink" title="连接服务器"></a>连接服务器</h2><blockquote><p>虚拟机为例，类似Xshell</p></blockquote><ol><li><p>新建连接，输入服务器信息：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/21/b6e74b3eb1f9a7c8a31ee1cc100c0cc4.png" width="55%"/></li><li><p>连接成功：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/21/35792b47ade853a4da9d7bdab1ea6d89.png" width="55%"/></li><li><p>如果linux文件名出现乱码，按下图操作：</p><ul><li><p>修改编码：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/21/82a109561347fb6c73e1ced952a81edc.png" width="55%"/></li><li><p>在空白位置，鼠标右键选择刷新，就解决啦：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/21/47d63706844eb7aa94b2a23d9e0a6ed1.png" width="55%"/></li></ul></li></ol><h2 id="软件使用"><a href="#软件使用" class="headerlink" title="软件使用"></a>软件使用</h2><blockquote><p>拖动文件即可实现传输，详见下gif</p></blockquote><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/21/4560371f198fe72e0a7722f47788673a.png" width="80%"/><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><ul><li>这篇文章水了点（内容少），不过真的有收获（sshd:22）</li><li>老师作图用的Excel着实是秀到我了，我也在尝试用它画图</li></ul><hr><p>不足之处，欢迎留言，会及时回复，及时更正！</p><p>创作不易，感谢支持！</p>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Xshell </tag>
            
            <tag> Xftp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VMware安装CentOS6及其配置方法</title>
      <link href="47550.html"/>
      <url>47550.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>本文章最初发布在 <a href="https://plushine.cn">XJHui’s Blog</a>，未经允许，任何人禁止转载！</p><p><font color="red" style="font-weight:700">注意：</font>最新修改版本已发布在 <a href="https://plushine.cn/47550.html">这里</a>，点击前往查看！</p><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>视频地址： <a href="https://www.bilibili.com/video/BV1dW411M7xL?p=1">传送门</a> ，一起来b站学习吧！</p><p>这是linux的第一篇笔记，因为之前对linux的发展史稍微有了了解，故博客中不再做相关描述。</p><p>基本每个教程（视频/博客）开始都会讲这些发展史，有兴趣可以去看看。</p><h1 id="准备阶段"><a href="#准备阶段" class="headerlink" title="准备阶段"></a>准备阶段</h1><h2 id="虚拟机"><a href="#虚拟机" class="headerlink" title="虚拟机"></a>虚拟机</h2><p>本教程以VMware16 PRO为例，安装（pojie）教程自行百度</p><h2 id="镜像"><a href="#镜像" class="headerlink" title="镜像"></a>镜像</h2><blockquote><p>CentOS版本是6.8</p></blockquote><p>下载链接：<a href="https://mirrors.tuna.tsinghua.edu.cn/centos-vault/6.8/isos/x86_64/CentOS-6.8-x86_64-bin-DVD1.iso">在这里</a>，感谢：<a href="https://mirrors.tuna.tsinghua.edu.cn/">清华大学开源软件镜像站</a></p><h2 id="BIOS虚拟化"><a href="#BIOS虚拟化" class="headerlink" title="BIOS虚拟化"></a>BIOS虚拟化</h2><p>设置步骤：<a href="https://jingyan.baidu.com/article/ab0b56305f2882c15afa7dda.html">在这里</a>，感谢：百度经验</p><p>注意：务必要开启此功能，否则后面操作系统会安装失败</p><h1 id="安装阶段"><a href="#安装阶段" class="headerlink" title="安装阶段"></a>安装阶段</h1><h2 id="创建虚拟机"><a href="#创建虚拟机" class="headerlink" title="创建虚拟机"></a>创建虚拟机</h2><ol><li><p>新建虚拟机：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/20/823caefb7fb9948ea844bfbc056242e8.png" width="50%"/></li><li><p>选择 <code>典型值</code>  后点击 <code>下一步</code> ：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/20/4612e38ccbfefb06189efb0a7d6291b9.png" width="50%"/></li><li><p>选择 <code>稍后安装操作系统</code>：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/20/8bdc9af74c265a1905c4bd51998ae4f1.png" width="50%"/></li><li><p>版本号选择 <code>CentOS6 64位</code>：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/20/72dedf168c67d5c172ff532ba0e8f531.png" width="50%"/></li><li><p>修改虚拟机名称和硬盘位置：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/20/bf3817ecad7f85439d0587d0a24c9924.png" width="50%"/></li><li><p>设置虚拟机硬盘大小：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/20/9f7d4e7b52c3d33d289be1fb37bae583.png" width="50%"/><p>注意：不是一次性占据20GB，而是随着系统的使用不断扩大，以后可挂载其他磁盘来扩充容量</p></li><li><p>点击 <code>完成</code>：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/20/fc6c37689ce045cde1cf0047f9210f0d.png" width="50%"/></li><li><p>虚拟机创建完成</p><ul><li><p>虚拟机主页：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/20/edede8ad2f8d6c480ad26d41c57c6c8a.png" width="70%"/></li><li><p>虚拟机所在文件夹：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/20/c6e62b6fcf14ebc772a307f53eecd5b3.png" width="70%"/><p>注意：目前只是将虚拟机创建完成，由于未安装系统镜像故无法开机运行</p></li></ul></li></ol><h2 id="安装操作系统"><a href="#安装操作系统" class="headerlink" title="安装操作系统"></a>安装操作系统</h2><ol><li><p>点击 <code>编辑虚拟机</code>：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/20/9686395b160153c982cca65652247f4a.png" width="50%"/></li><li><p>配置 <code>内存</code>：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/20/b9e13d75c3bbcc029d146dd1cd118238.png" width="50%"/></li><li><p>配置 <code>处理器</code>：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/20/7ac2222167d8b90a0711a792fa338e45.png" width="50%"/><p>注意：不要超过计算机总处理器数目，超过会有提示：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/20/42268cbb4e7f555c6b81cf4050766a7c.png" width="50%"/></li><li><p>配置 <code>网络适配器</code>：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/20/e206b091a81ec3ffea330ae758b95c5a.png" width="50%"/><p>图解网络连接：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/20/a44cbe1d8563b2a561c6c48cf33842b8.png" width="50%"/><ul><li>桥接模式：linux可与其它系统通讯，但可能造成ip冲突（windows和linux全在同一字段，ip数量有限）</li><li>NAT模式（网络地址转换方式）：linux可以访问外网，不会造成ip冲突</li><li>主机模式：你的linux是一个独立的主机，不能访问外网</li></ul></li><li><p>安装iso镜像：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/20/5ba0f0e4b6fe15d1de6b308785fdcf08.png" width="50%"/><p>注意：iso镜像为前面准备阶段所下载的</p></li></ol><h2 id="开机配置"><a href="#开机配置" class="headerlink" title="开机配置"></a>开机配置</h2><ol><li><p>若虚拟机出现下图提示，点击x关闭即可：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/20/252b3339a647aa0771cc872c850c559f.png" width="60%"/></li><li><p>启动虚拟机，按下回车安装CentOS6：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/20/4c9b1e9d5f9b6e293111157a41ae7dcb.png" width="50%"/><p>注意：</p><ul><li>如果按下回车无反应，鼠标点击虚拟机界面后再次尝试</li><li>如果鼠标被限制在虚拟机界面，可以使用ctrl+alt解除限制</li></ul></li><li><p>跳过磁盘检测：按下Tab键光标移动后按回车确定，否则会耗费很长时间</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/20/0724f5850887441ad199146d09b2c95d.png" width="50%"/></li><li><p>点击next，选择语言（中文简体）、键盘（美国英语式）：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/20/3b0cac5f55bdd97587319ea305d0bec0.png" width="50%"/><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/20/72236006b44c60909bcae19be0b52969.png" width="50%"/></li><li><p>选择 <code>基本存储设备</code> ，弹窗中选择 <code>是,忽略所有数据</code> ：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/20/58a1d6680000269d72a473d2d5a3ffb7.png" width="50%"/></li><li><p>输入 <code>主机名</code> ，时区（上海），密码：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/20/b2d1b53ed3f7e796536d30bb135293b7.png" width="50%"/></li><li><p>选择 <code>创建自定义布局</code> ：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/20/f9272c0c6be0cad8c70d809252f40550.png" width="50%"/><p>注意：为了详细了解linux磁盘分区，才选择自定义布局</p></li><li><p>创建分区</p><ul><li><p>光标选中空闲硬盘，点击创建：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/20/e3aa18a466bad5a150697668b780c73c.png" width="50%"/></li><li><p>选择标准分区，点击创建：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/20/876cda05ec096519debb172b8c1e80ac.png" width="20%"/></li><li><p>按照下图，分三次创建三个不同的分区：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/20/5541a266b9a2bb83a4e9165fc9b34970.png" width="50%"/><p>注意：</p><ul><li>/boot分区：存放启动时的引导文件</li><li>swap分区：当内存不足时，使用该区域硬盘充当</li><li>/分区：占剩余全部空间</li></ul></li><li><p>格式化磁盘，将修改写入磁盘：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/20/b7ea9e696479f6d3d781b7fd3a61f0fc.png" width="50%"/></li><li><p>下图界面中选择下一步：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/20/c78da2c97d00d93dedcdbb196451acca.png" width="50%"/></li></ul></li><li><p>安装桌面，选择 <code>现在自定义</code>：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/20/54d56e449804b6835b7b842c9624e36c.png" width="50%"/></li><li><p>选择需要的软件，点击下一步：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/20/2d203bd07fafbf1fcc835a9d2e7bf3a0.png" width="50%"/><p>等待安装完成：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/20/f522193371ea5285ccc5d7374398564f.png" width="50%"/><p>选择重新引导，等待重启：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/20/7e965fa0b4189d767338811a5251e431.png" width="50%"/></li><li><p>进入欢迎页面：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/20/2b2a7466ef5ab2ffaee0729077bb3552.png" width="50%"/></li><li><p>点击前进，暂不创建用户（使用root账户登录）：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/20/4a88d09e31942a4894457be9eab7a370.png" width="50%"/></li></ol><h1 id="系统配置"><a href="#系统配置" class="headerlink" title="系统配置"></a>系统配置</h1><h2 id="登录系统"><a href="#登录系统" class="headerlink" title="登录系统"></a>登录系统</h2><ol><li><p>进入系统，点击 <code>其他</code>：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/20/f2e4f76cdfee0eeec89bbe9fbfe0efd3.png" width="50%"/></li><li><p>账号：root，密码为安装系统时设置的：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/20/f3d6679551a01eeef8a5829d13ea5824.png" width="50%"/></li><li><p>关闭警告：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/20/9e89f00332d502bca4f4ea5f10f4720f.png" width="50%"/></li><li><p>进入系统：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/20/4f2b91589fafa1019e4faad6d410ad54.png" width="50%"/></li></ol><h2 id="配置网络"><a href="#配置网络" class="headerlink" title="配置网络"></a>配置网络</h2><ol><li><p>打开浏览器，进入百度首页：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/20/3e6d700e5050d4d2e83daf7c4c7c39ae.png" width="50%"/><p>注意：提示找不到服务器，说明网络无连接</p></li><li><p>按下图操作，连接网络：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/20/e6cf239b25e7e07617c21674db086a87.png" width="50%"/></li><li><p>再次进入浏览器，可访问百度首页：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/20/4ece8657bf17a6663c017c258c5df9e8.png" width="50%"/></li></ol><h2 id="VMtools"><a href="#VMtools" class="headerlink" title="VMtools"></a>VMtools</h2><ol><li><p>插件作用：</p><ul><li>windows与linux之间复制、粘贴文本</li><li>windows与linux均可操作的公共文件夹</li><li>屏幕比例自适应</li></ul></li><li><p>安装：</p><ul><li><p>点击VMware菜单栏中的虚拟机-》安装VMware Tools：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/20/2eb1db2040c8e2ca7fedcdfbcd6f8f86.png" width="60%"/><p>会自动在桌面弹窗显示：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/20/1d7514d54e4349b9741c9832b593d4a8.png" width="50%"/></li><li><p>复制上图.tar.gz后缀的文件到虚拟机/opt目录下：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/20/ce90dbf3ef58e32d8721c25a7cb6a379.png" width="50%"/></li><li><p>/opt文件夹内右键选择 <code>在终端打开</code>：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/20/ec9961b78ac29d88ed28e884e67b90b4.png" width="50%"/></li><li><p>依次输入以下命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf VMwareTools-10.3.22-15902021.tar.gz</span><br><span class="line">cd vmware-tools-distrib</span><br><span class="line">./vmware-install.pl</span><br></pre></td></tr></table></figure><p>注意：执行上面命令后，一路回车直至出现下图表示安装成功</p></li><li><p>安装成功：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/20/bf55f1a3523fb6245bfef5266705915e.png" width="50%"/></li><li><p>重启虚拟机：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure></li></ul></li><li><p>使用</p><ul><li><p>windows与linux之间复制粘贴请自行测试</p></li><li><p>屏幕自适应前后截图：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/20/46c02518ed4c696c0714dcb6e82e1f13.png" width="50%"/><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/20/3ba1c1c4693f07db637fe1d98b41e64b.png" width="50%"/></li><li><p>共享文件夹：</p><ul><li><p>windows下创建要共享的文件夹：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/20/911e2fdad35ced878dc1766945c7c687.png" width="50%"/></li><li><p>vmware导航栏选择 <code>虚拟机</code> ，点击 <code>设置</code>：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/20/9f7ca597b8bdaec9b2abb026cf2f014d.png" width="50%"/></li><li><p>按下图，添加路径后点击确定：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/20/4c0194d80b37a8a61d12918436c9185a.png" width="50%"/></li><li><p>依次进入虚拟机 /mnt/hgfs/MyShare文件夹中新建文件（test），并写入内容（打开方式为编辑）：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/20/793314bea119d692e48caefa09839cac.png" width="50%"/></li><li><p>从windows进入共享文件夹查看该文件内容：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/20/8a608868b612f8fd5c2808edb4aeacfa.png" width="50%"/></li></ul></li></ul></li></ol><hr><p>不足之处，欢迎留言，会及时回复，及时更正！</p><p>创作不易，感谢支持！</p>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VMware </tag>
            
            <tag> Centos6 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Day12 正则表达式</title>
      <link href="42406.html"/>
      <url>42406.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>本文章最初发布在 <a href="https://plushine.cn">XJHui’s Blog</a>，未经允许，任何人禁止转载！</p><p><font color="red" style="font-weight:700">注意：</font>最新修改版本已发布在 <a href="https://plushine.cn/42406.html">这里</a>，点击前往查看！</p><h1 id="re模块"><a href="#re模块" class="headerlink" title="re模块"></a>re模块</h1><h2 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h2><ol><li>正则表达式：被用来检索（主要用途）、替换符合某个规则的字符</li><li>re模块和正则的关系：先有正则后有re模块（C语言编写，速度快）， re是python中用来实现正则功能的模块</li></ol><h2 id="mach"><a href="#mach" class="headerlink" title="mach()"></a>mach()</h2><blockquote><p>匹配符合正则表达式规则的字符串  mach(pattern,data,flag=0) </p></blockquote><ol><li><p>案例（无标志位flag）：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re  <span class="comment"># 导入re模块</span></span><br><span class="line"></span><br><span class="line">strData = <span class="string">&#x27;hello world&#x27;</span>  <span class="comment"># 字符串数据</span></span><br><span class="line">res = re.match(<span class="string">&#x27;h&#x27;</span>, strData)  <span class="comment"># 两个参数分别代表：正则表达式、字符串数据</span></span><br><span class="line"><span class="keyword">if</span> res:</span><br><span class="line">    print(<span class="string">&#x27;匹配成功&#x27;</span>)</span><br><span class="line">    print(res.group())  <span class="comment"># 使用res.group()返回匹配结果</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">&#x27;匹配失败&#x27;</span>)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/15/6c71b5943e37341b25359fd7aa843a7a.png" width="80%"/></li><li><p>案例（有标志位flag）：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">strData = <span class="string">&#x27;hello world&#x27;</span></span><br><span class="line">res = re.match(<span class="string">&#x27;H&#x27;</span>, strData, re.I)  <span class="comment"># 第三个参数为标志位：re.I代表大小写不敏感</span></span><br><span class="line"><span class="keyword">if</span> res:</span><br><span class="line">    print(<span class="string">&#x27;匹配成功&#x27;</span>)</span><br><span class="line">    print(res.group())  <span class="comment"># 如果匹配失败，使用res.group()则会报错</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">&#x27;匹配失败&#x27;</span>)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/15/a6c0232157afa119331a084a8a047254.png" width="80%"/><p>标志位可选参数：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/15/6afebaf09698e07841191b4943a57a7a.png" width="80%"/></li><li><p>group()：</p><blockquote><p>匹配结果会返回到group中</p></blockquote><ul><li><p>下标：</p><ul><li>group(0)（0可省略）：匹配结果</li><li>group(1)：返回第一组匹配结果</li><li>groups()：返回所有组匹配结果</li></ul></li><li><p>案例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">  </span><br><span class="line">  strData = <span class="string">&#x27;Python is the best language in the world&#x27;</span></span><br><span class="line">  res = re.match(<span class="string">&#x27;(.*) is (.*?) .*&#x27;</span>, strData, re.I)  <span class="comment"># 第三个参数为标志位：re.I代表大小写不敏感</span></span><br><span class="line">  <span class="keyword">if</span> res:</span><br><span class="line">      print(<span class="string">&#x27;匹配成功&#x27;</span>)</span><br><span class="line">      print(<span class="string">&#x27;res.groups()：&#x27;</span>, res.groups())  <span class="comment"># groups(陪陪)</span></span><br><span class="line">      print(<span class="string">&#x27;res.group()：&#x27;</span>, res.group())</span><br><span class="line">      print(<span class="string">&#x27;res.group(0)：&#x27;</span>, res.group(<span class="number">0</span>))</span><br><span class="line">      print(<span class="string">&#x27;res.group(1)：&#x27;</span>, res.group(<span class="number">1</span>))</span><br><span class="line">      print(<span class="string">&#x27;res.group(2)：&#x27;</span>, res.group(<span class="number">2</span>))</span><br><span class="line">  <span class="keyword">else</span>:</span><br><span class="line">      print(<span class="string">&#x27;匹配失败&#x27;</span>)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/16/5ac50f6b3e38b2eb0942061a28c059d4.png" width="80%"/></li><li><p>注意：</p><ul><li>有几组匹配结果的判断方法后面会讲解</li><li>group(0)、group()效果是一致的<h2 id="compile"><a href="#compile" class="headerlink" title="compile()"></a>compile()</h2></li></ul></li></ul></li></ol><blockquote><p>将正则表达式编译成一个正则表达式对象，以提高效率</p></blockquote><ol><li><p>为什么会提高效率？当使用match匹配时，python每次都会将正则表达式转换成对象，而使用compile只需要转换一次</p></li><li><p>案例：匹配4位数字</p><ul><li><p>match方法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">htmlTag = <span class="string">&#x27;12345677&#x27;</span></span><br><span class="line">pattern = <span class="string">&#x27;\d&#123;4&#125;&#x27;</span>  <span class="comment"># 固定个数可使用&#123;num&#125;表示，下面具体会讲解</span></span><br><span class="line">res = re.match(pattern, htmlTag)</span><br><span class="line">print(res.group())</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/18/064ff82aa39229dbb5341f9f3b50314c.png" width="80%"/></li><li><p>compile方法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">reobj = re.<span class="built_in">compile</span>(<span class="string">&#x27;\d&#123;4&#125;&#x27;</span>)</span><br><span class="line">res = reobj.match(<span class="string">&#x27;12345677&#x27;</span>)</span><br><span class="line">print(res.group())</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/18/6cac6191a222c86a222997c0c2291e71.png" width="80%"/></li><li><p>注意：</p><ul><li>两种方法结果是一致的，只是速度有差别</li><li>下文案例主要使用match方法讲解，但推荐使用compile方法</li></ul></li></ul></li></ol><h2 id="search"><a href="#search" class="headerlink" title="search()"></a>search()</h2><blockquote><p>全文查找，找到一个就返回，而match必须是从开头开始匹配</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">data = <span class="string">&#x27;I love China!&#x27;</span></span><br><span class="line">pattern = <span class="string">&#x27;China&#x27;</span></span><br><span class="line">res = re.search(pattern, data)</span><br><span class="line">print(res)</span><br><span class="line">print(res.group())</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/18/b917b78821d96e896cdc81e05b761c2e.png" width="80%"/><h2 id="findall"><a href="#findall" class="headerlink" title="findall()"></a>findall()</h2><blockquote><p>将所有匹配结果保存到列表中返回，而search只是返回第一个</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">data = <span class="string">&#x27;I love China, China!&#x27;</span></span><br><span class="line">pattern = <span class="string">&#x27;China&#x27;</span></span><br><span class="line">res = re.findall(pattern, data)</span><br><span class="line">print(res)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/18/3da3c353702c7cf9d7a5f61cfad9bf47.png" width="80%"/><h2 id="sub"><a href="#sub" class="headerlink" title="sub()"></a>sub()</h2><blockquote><p>将匹配到的数据进行替换 re.sub(pattern,replace,data,count,flags=0)</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">data = <span class="string">&#x27;hello world&#x27;</span></span><br><span class="line">pattern = <span class="string">&#x27;l&#x27;</span></span><br><span class="line">res = re.sub(pattern, <span class="string">&#x27;L&#x27;</span>, data, <span class="number">2</span>)  <span class="comment"># 将匹配的字符换成L，并限制替换次数为2</span></span><br><span class="line">print(res)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/18/4ebb3224236e43c544436a53e2a0cb1f.png" width="80%"/><h2 id="split"><a href="#split" class="headerlink" title="split()"></a>split()</h2><blockquote><p>分隔字符串（前面有讲过），最后返回一个列表</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">data = <span class="string">&#x27;1,2,3,4,5,6&#x27;</span></span><br><span class="line">res = re.split(<span class="string">&#x27;,&#x27;</span>, data)</span><br><span class="line">print(res)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/18/5974aadb95bfbd6f7ad5e5f386b9f1d6.png" width="80%"/><h1 id="常用匹配规则"><a href="#常用匹配规则" class="headerlink" title="常用匹配规则"></a>常用匹配规则</h1><h2 id="匹配字符"><a href="#匹配字符" class="headerlink" title="匹配字符"></a>匹配字符</h2><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/17/fb46349ae74d14204ceeaab95668f417.png" width="60%"/><ol><li><p>.（点）</p><blockquote><p>匹配任意1个字符（除了换行符\n）</p></blockquote><p>案例：匹配 ‘李娜’</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">name = <span class="string">&#x27;李娜&#x27;</span>  <span class="comment"># 数据</span></span><br><span class="line">pattern = <span class="string">&#x27;李.&#x27;</span>  <span class="comment"># 正则表达式</span></span><br><span class="line">res = re.match(pattern, name)  <span class="comment"># match方法</span></span><br><span class="line">print(res.group())</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/17/2f32dcaa322f6a59d22e5e90051a7050.png" width="80%"/></li><li><p>[]</p><blockquote><p>匹配括号中的任意一个字符</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">name = <span class="string">&#x27;elloh&#x27;</span></span><br><span class="line">pattern = <span class="string">&#x27;[he]&#x27;</span></span><br><span class="line">res = re.match(pattern, name)</span><br><span class="line">print(res.group(<span class="number">0</span>))</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/17/6cc9843cfbd73aeeb1f53eb3fdd80bd5.png" width="80%"/><p>注意：[a-z]、[A-Z]、[0-9]语法是正确的，甚至可以写成[a-zA-Z0-9]</p></li><li><p>\d、\D</p><blockquote><p>匹配一个数字（0-9）、一个非数字</p></blockquote><ul><li><p>案例1（\d，匹配一个数字）：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">data = <span class="string">&#x27;1123aaa&#x27;</span></span><br><span class="line">pattern = <span class="string">&#x27;\d&#x27;</span></span><br><span class="line">print(re.match(pattern, data).group())</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/17/afcf9c7bdfc859a130b21094519809a5.png" width="80%"/></li><li><p>案例2（\D，匹配一个非数字）：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">data = <span class="string">&#x27;a1123a&#x27;</span></span><br><span class="line">pattern = <span class="string">&#x27;\D&#x27;</span></span><br><span class="line">print(re.match(pattern, data).group())</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/17/70e6d616bd842ce5d86e10526a016454.png" width="80%"/></li></ul></li><li><p>\s、\S</p><blockquote><p>匹配一个空字符、一个非空字符</p></blockquote><ul><li><p>\s（匹配一个空字符）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">data = <span class="string">&#x27; a1123a&#x27;</span></span><br><span class="line">pattern = <span class="string">&#x27;\s&#x27;</span></span><br><span class="line">print(re.match(pattern, data).group())</span><br></pre></td></tr></table></figure></li><li><p>\S（匹配一个非空字符）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">data = <span class="string">&#x27;a1123a&#x27;</span></span><br><span class="line">pattern = <span class="string">&#x27;\S&#x27;</span></span><br><span class="line">print(re.match(pattern, data).group())</span><br></pre></td></tr></table></figure></li></ul></li><li><p>\w、\W</p><blockquote><p>匹配一个单词字符（0-9、a-z、A-Z、_）、一个非单词字符</p></blockquote><ul><li><p>\w</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">data = <span class="string">&#x27;a1123a&#x27;</span></span><br><span class="line">pattern = <span class="string">&#x27;\w&#x27;</span></span><br><span class="line">print(re.match(pattern, data).group())</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/17/836fc869d3a7cb5d52e040f3151ee295.png" width="80%"/></li><li><p>\W</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">data = <span class="string">&#x27; a1123a&#x27;</span></span><br><span class="line">pattern = <span class="string">&#x27;\W&#x27;</span>  <span class="comment"># 匹配一个空字符</span></span><br><span class="line">print(re.match(pattern, data).group())</span><br></pre></td></tr></table></figure></li></ul></li></ol><h2 id="匹配字符数量"><a href="#匹配字符数量" class="headerlink" title="匹配字符数量"></a>匹配字符数量</h2><blockquote><p>匹配字符数量的符号满足前一个匹配规则的次数</p></blockquote><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/17/9d280b2b3a30bbab52b68529047a1547.png" width="60%"/><ol><li><p>*</p><blockquote><p>满足前一个匹配规则0或无限次</p></blockquote><ul><li><p>案例1：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">print(re.match(<span class="string">&#x27;[A-Z]*&#x27;</span>, <span class="string">&#x27;MAAA&#x27;</span>).group())</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/17/8150bce81badd46620f570b437064cff.png" width="80%"/></li><li><p>综合案例：匹配符合规范的python变量名（不能以数字开头，只能包含字母和数字）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">pattern = <span class="string">&#x27;[a-zA-Z_]+\w*&#x27;</span>  <span class="comment"># 正则表达式（匹配字符要搭配一个数量），a-zA-Z0-9不需要加任何分隔符</span></span><br><span class="line">dataList = [<span class="string">&#x27;1nihao&#x27;</span>, <span class="string">&#x27;nihao&#x27;</span>, <span class="string">&#x27;Test111&#x27;</span>, <span class="string">&#x27;Tes t_&#x27;</span>, <span class="string">&#x27;Test_t&#x27;</span>, <span class="string">&#x27;**test&#x27;</span>]  <span class="comment"># 测试数据</span></span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> dataList:  </span><br><span class="line">    <span class="keyword">try</span>:  <span class="comment"># 异常处理</span></span><br><span class="line">        res = re.match(pattern, item)</span><br><span class="line">        print(res.group())</span><br><span class="line">    <span class="keyword">except</span> AttributeError: </span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/17/74e5b70847b6a279d46a52d691d0cea9.png" width="80%"/></li></ul></li><li><p>+</p><blockquote><p>满足前一个匹配规则至少1次</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">print(re.match(<span class="string">&#x27;[a-bA-B]+&#x27;</span>, <span class="string">&#x27;aabbcd&#x27;</span>).group())  <span class="comment"># 注意：[a-b]表示[ab]，其余同理</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/17/d86fda446fe5dd5fc1213249605625d9.png" width="80%"/></li><li><p>{,max}、{min,}、{min,max}，？</p><blockquote><p>满足前一个匹配规则最多max次、最少min次、min-max次，0-1次</p></blockquote><ul><li><p>案例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">print(<span class="string">&#x27;\d&#123;,5&#125;&#x27;</span>, re.match(<span class="string">&#x27;\d&#123;,5&#125;&#x27;</span>, <span class="string">&#x27;12344555a1&#x27;</span>).group())  </span><br><span class="line">print(<span class="string">&#x27;\d&#123;1,&#125;&#x27;</span>, re.match(<span class="string">&#x27;\d&#123;1,&#125;&#x27;</span>, <span class="string">&#x27;12344555a1&#x27;</span>).group())</span><br><span class="line">print(<span class="string">&#x27;\d&#123;1,5&#125;&#x27;</span>, re.match(<span class="string">&#x27;\d&#123;1,5&#125;&#x27;</span>, <span class="string">&#x27;12344555a1&#x27;</span>).group())</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/17/e58297ba7da7a1fde05acf35469a0177.png" width="80%"/><p>注意：</p><ul><li>?的含义和{0,1}相同</li><li>固定次数为5，可以使用{5}来实现</li></ul></li><li><p>综合案例：匹配qq邮箱（数字@qq.com）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">pattern = <span class="string">&#x27;\d&#123;1,&#125;@qq.com&#x27;</span></span><br><span class="line">dataList = [<span class="string">&#x27;123@qq.com&#x27;</span>, <span class="string">&#x27;123@qq1.com&#x27;</span>, <span class="string">&#x27;a123@qq.com&#x27;</span>, <span class="string">&#x27;123@qq.cn&#x27;</span>]</span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> dataList:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        res = re.match(pattern, item)</span><br><span class="line">        print(res.group())</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">except</span> AttributeError:</span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/17/7744093335eb087f12eed3a5dc2feb49.png" width="80%"/></li></ul></li></ol><h2 id="原生字符串"><a href="#原生字符串" class="headerlink" title="原生字符串"></a>原生字符串</h2><blockquote><p>python读取字符串时会对\后面的字符自动进行转义，从而引起一些问题</p></blockquote><ol><li><p>引入案例：打印路径 ‘d:\next\1day\4class’</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">str</span> = <span class="string">&#x27;d:\python\next\1day\4class&#x27;</span></span><br><span class="line">print(<span class="built_in">str</span>)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/17/dcab2a37b3155879dd816a72ad479ed2.png" width="80%"/><p>解决方法：在所有的\前面再添加一个转义字符\</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">str</span> = <span class="string">&#x27;d:\\python\\next\\1day\\4class&#x27;</span></span><br><span class="line">print(<span class="built_in">str</span>)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/17/01006d42726f317c321a5a516cfe5f86.png" width="80%"/></li><li><p>匹配路径：’d:\\test’</p><ul><li><p>直接匹配：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">print(re.match(<span class="string">&#x27;d:\\test&#x27;</span>, <span class="string">&#x27;d:\\test&#x27;</span>).group())</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/17/8a247c61a46c4db36bce88cbf9bb1de0.png" width="80%"/><p>注意：在匹配时，正则表达式中会被转义成 ‘d:\test’ 故不能与 ‘d:\test’ 匹配成功</p></li><li><p>解决方法1：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">print(re.match(<span class="string">&#x27;d:\\\\test&#x27;</span>, <span class="string">&#x27;d:\\test&#x27;</span>).group())</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/17/c7e666301db5da82f0072d9f9813a6f1.png" width="80%"/><p>注意：</p><ul><li><p>为什么要加两个\：因为匹配串中每个\都需要一个\去取消转义</p></li><li><p>虽然上图结果是 ‘d:\test’ 但匹配成功的字符串肯定是 ‘d:\test’，因为只有 ‘d:\\test’ 打印出来才是 ‘d:\test’ ：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/17/b19f132e3d971c3a049a37d203ec5934.png" width="80%"/></li></ul></li><li><p>解决方法2：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">print(re.match(<span class="string">r&#x27;d:\\test&#x27;</span>, <span class="string">&#x27;d:\\test&#x27;</span>).group())  <span class="comment"># 保证两个串中\个数一致，在正则前面加r</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/17/07b0fd0726a1cd4e63b3325e2c88da3a.png" width="80%"/><p>注意：如果你疑惑为什么少了个\，就去看解决方法1中的注2</p></li></ul></li></ol><h2 id="匹配开头结尾"><a href="#匹配开头结尾" class="headerlink" title="匹配开头结尾"></a>匹配开头结尾</h2><ol><li><p>^</p><blockquote><p>匹配字符串的开头</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">print(re.match(<span class="string">&#x27;^P.*&#x27;</span>, <span class="string">&#x27;Python is good&#x27;</span>).group())</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/17/206d5ab90fbf3c3b4da74189f9aab323.png" width="80%"/></li><li><p>$</p><blockquote><p>匹配字符串的结尾</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">print(re.match(<span class="string">&#x27;\d&#123;1,13&#125;@qq.com$&#x27;</span>, <span class="string">&#x27;1231@qq.com&#x27;</span>).group())</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/17/1a1cbd79c149dbb22c1d93d19cb16aae.png" width="80%"/></li></ol><h2 id="分组匹配"><a href="#分组匹配" class="headerlink" title="分组匹配"></a>分组匹配</h2><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/18/b983c1291efaa211e7ebc0b3e96120d9.png" width="80%"/><ol><li><p>|</p><blockquote><p>匹配左右任意一个表达式</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">pattern = <span class="string">&#x27;[1-9]?\d$|100&#x27;</span></span><br><span class="line">print(re.match(pattern, <span class="string">&#x27;78&#x27;</span>).group())</span><br><span class="line">print(re.match(pattern, <span class="string">&#x27;100&#x27;</span>).group())</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/18/50bdf8453cf14274b40cec0f0cea1666.png" width="80%"/><p>上面的正则表达式可分别匹配78、100，为便于理解，可将正则表达式分别如下：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/18/1ea0a361b1d4910d5e91e91562cdde03.png" width="50%"/></li><li><p>(ab)</p><blockquote><p>将括号中的字符作为一个分组</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="comment"># 匹配电话号码 ****-12345678</span></span><br><span class="line">pattern = <span class="string">&#x27;(\d&#123;4,4&#125;)-(\d&#123;8,8&#125;)&#x27;</span></span><br><span class="line">print(re.match(pattern, <span class="string">&#x27;0101-12334234&#x27;</span>).group(<span class="number">0</span>))</span><br><span class="line">print(re.match(pattern, <span class="string">&#x27;0101-12334234&#x27;</span>).group(<span class="number">1</span>))  <span class="comment"># 分组后的第一组</span></span><br><span class="line">print(re.match(pattern, <span class="string">&#x27;0101-12334234&#x27;</span>).group(<span class="number">2</span>))  <span class="comment"># 分组后的第二组</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/18/276461dc375fe2bc065cc1d07fb068d5.png" width="80%"/><p>注意：每一个()对应一个匹配结果</p></li><li><p>\num</p><blockquote><p>引用前面分组的字符串</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">htmlTag = <span class="string">&#x27;&lt;html&gt;&lt;h1&gt;你好啊&lt;/h1&gt;&lt;/html&gt;&#x27;</span></span><br><span class="line">pattern = <span class="string">r&#x27;&lt;(.+)&gt;&lt;(.+)&gt;(.+)&lt;/\2&gt;&lt;/\1&gt;&#x27;</span>  <span class="comment"># /2、/1分别代表前面分组2（h1）和分组1（html），注意r可以加在&#x27;&#x27;前面</span></span><br><span class="line">res = re.match(pattern, htmlTag)</span><br><span class="line">print(res.group(<span class="number">0</span>))</span><br><span class="line">print(res.group(<span class="number">1</span>))</span><br><span class="line">print(res.group(<span class="number">2</span>))</span><br><span class="line">print(res.group(<span class="number">3</span>))</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/18/34b2386e079d1a6358cf0a12afb5f0a0.png" width="80%"/></li><li><p>?P</p><blockquote><p>起别名：?P&lt;名字&gt;  使用别名：(?P=名字)</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="comment"># 匹配html</span></span><br><span class="line">htmlTag = <span class="string">&#x27;&lt;html&gt;&lt;h1&gt;你好啊&lt;/h1&gt;&lt;/html&gt;&#x27;</span></span><br><span class="line">pattern = <span class="string">r&#x27;&lt;(?P&lt;html&gt;.+)&gt;&lt;(?P&lt;h1&gt;.+)&gt;(.+)&lt;/(?P=h1)&gt;&lt;/(?P=html)&gt;&#x27;</span></span><br><span class="line">res = re.match(pattern, htmlTag)</span><br><span class="line">print(res.group(<span class="number">0</span>))</span><br><span class="line">print(res.group(<span class="number">1</span>))</span><br><span class="line">print(res.group(<span class="number">2</span>))</span><br><span class="line">print(res.group(<span class="number">3</span>))</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/18/c589257e45536fa09c0aed46e6fd0e46.png" width="80%"/></li></ol><h1 id="贪婪模式"><a href="#贪婪模式" class="headerlink" title="贪婪模式"></a>贪婪模式</h1><blockquote><p>默认情况下会尽可能多的去匹配满足条件的数据</p></blockquote><ol><li><p>案例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">data = <span class="string">&#x27;123456&#x27;</span></span><br><span class="line">pattern = <span class="string">&#x27;\d&#123;3,6&#125;&#x27;</span></span><br><span class="line">pattern_no = <span class="string">&#x27;\d&#123;3,6&#125;?&#x27;</span>  <span class="comment"># 非贪婪只需要在最后添加一个？</span></span><br><span class="line">print(<span class="string">&#x27;贪婪：&#x27;</span>, re.match(pattern, data).group())  <span class="comment"># 默认为贪婪模式</span></span><br><span class="line">print(<span class="string">&#x27;非贪婪：&#x27;</span>, re.match(pattern_no, data).group())</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/18/79e16bfe3ef62beb0ff7c6f3e8358d22.png" width="80%"/><p>注意：非贪婪模式会尽可能少的去匹配满足条件的数据，非贪婪模式中的？其实就是前面匹配字符数量中的？</p></li><li><p>优先级问题（极易错）：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">content = <span class="string">&#x27;aacbacbc&#x27;</span></span><br><span class="line">pattern = re.<span class="built_in">compile</span>(<span class="string">&#x27;a.*?b&#x27;</span>)</span><br><span class="line">result = re.search(pattern,content)</span><br><span class="line">print(result.group())</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/18/7280eb323a6a0e9a8b01efc17d53ea59.png" width="80%"/><p>答案为什么不是acb？ 因为最先开始的匹配拥有最高的优先权，即：</p><p>匹配到的第一个a具有最高优先权，只要之后没有发生匹配失败的情况，它就会一直匹配下去，直到匹配成功，感谢 <a href="https://blog.csdn.net/Sirow/article/details/89512885">Siro阿希</a> ！</p></li></ol><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>好啦，python基础的学习到这里就结束了！</p><p>后面会更新linux的学习笔记，期待吧！一起加油！</p><p>终于成功入门了一次，hahaha…</p><hr><p>不足之处，欢迎留言，会及时回复，及时更正！</p><p>创作不易，感谢支持！</p>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Day11 文件操作和模块</title>
      <link href="65489.html"/>
      <url>65489.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>本文章最初发布在 <a href="https://plushine.cn">XJHui’s Blog</a>，未经允许，任何人禁止转载！</p><p><font color="red" style="font-weight:700">注意：</font>最新修改版本已发布在 <a href="https://plushine.cn/65489.html">这里</a>，点击前往查看！</p><h1 id="文件打开关闭"><a href="#文件打开关闭" class="headerlink" title="文件打开关闭"></a>文件打开关闭</h1><h2 id="打开"><a href="#打开" class="headerlink" title="打开"></a>打开</h2><blockquote><p>使用open函数，可以打开已存在的文件或者创建一个新文件</p></blockquote><ol><li><p>语法格式：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">open</span>(<span class="string">&#x27;文件名称&#x27;</span>,<span class="string">&#x27;打开模式&#x27;</span>)  <span class="comment"># 打开模式也要使用引号</span></span><br></pre></td></tr></table></figure></li><li><p>示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">open</span>(<span class="string">&#x27;test.txt&#x27;</span>,<span class="string">&#x27;w&#x27;</span>)  </span><br></pre></td></tr></table></figure></li><li><p>文件打开模式：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/27/d6421dba7a7c8f115dd9b584e04ee592.png" width="80%"/></li><li><p>案例：使用w打开模式，打开Test.txt文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">open</span>(<span class="string">&#x27;./Test.txt&#x27;</span>, <span class="string">&#x27;w&#x27;</span>)  <span class="comment"># 打开一个不存在的文件</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/27/38698c70b8fd8889e883e9bb23203e62.png" width="80%"/><p>注意：打开模式为w时，若文件不存在则会自动创建</p></li></ol><h2 id="关闭"><a href="#关闭" class="headerlink" title="关闭"></a>关闭</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">fobj = <span class="built_in">open</span>(<span class="string">&#x27;./Test.txt&#x27;</span>, <span class="string">&#x27;w&#x27;</span>)  <span class="comment"># open函数返回文件对象，使用fobj接受这个对象</span></span><br><span class="line">fobj.close()  <span class="comment"># 使用：文件对象.close() 关闭打开的文件</span></span><br></pre></td></tr></table></figure><h1 id="文件的写入"><a href="#文件的写入" class="headerlink" title="文件的写入"></a>文件的写入</h1><blockquote><p>将 hello world 写入test.txt 文件中</p></blockquote><h2 id="w-只写"><a href="#w-只写" class="headerlink" title="w-只写"></a>w-只写</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">fobj = <span class="built_in">open</span>(<span class="string">&#x27;./test.txt&#x27;</span>, <span class="string">&#x27;w&#x27;</span>)  <span class="comment"># 使用open函数在w打开模式下打开test.txt文件</span></span><br><span class="line">fobj.write(<span class="string">&#x27;hello world&#x27;</span>)  <span class="comment"># 使用：文件对象.write(要写入的内容) 将字符串写入文件</span></span><br><span class="line">fobj.close()  <span class="comment"># 写入后记得要关闭</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/27/e220063fc31b926ad5e5ff4a172abd3a.png" width="80%"/><p>注意：默认的编码是gbk，为防止乱码：</p><ul><li><p>方法一（打开文件时）：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fobj = <span class="built_in">open</span>(<span class="string">&#x27;./test.txt&#x27;</span>, <span class="string">&#x27;w&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br></pre></td></tr></table></figure></li><li><p>方法二（写入文件时）：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">obj.write(<span class="string">&#x27;hello world&#x27;</span>.encode(<span class="string">&#x27;utf-8&#x27;</span>)) </span><br></pre></td></tr></table></figure></li></ul><h2 id="wb-只二进制写"><a href="#wb-只二进制写" class="headerlink" title="wb-只二进制写"></a>wb-只二进制写</h2><blockquote><p>01字符串</p></blockquote>   <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">fobj = <span class="built_in">open</span>(<span class="string">&#x27;./test.txt&#x27;</span>, <span class="string">&#x27;wb&#x27;</span>)</span><br><span class="line">fobj.write(<span class="string">&#x27;hello world&#x27;</span>)</span><br><span class="line">fobj.close()</span><br></pre></td></tr></table></figure><p>报错：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/27/f8676f4a755832c8a288f1ed77e3d986.png" width="80%"/><p>注意：wb写入时，要指定写入值的类型 <code>obj.write(&#39;hello world&#39;.encode(&#39;utf-8&#39;))</code></p><p>修改后运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/27/47c1ee90951c6de300c0d8f6fdf86fcb.png" width="80%"/><h2 id="a-只追加写"><a href="#a-只追加写" class="headerlink" title="a-只追加写"></a>a-只追加写</h2><blockquote><p>追加：存在则在原来基础上接着写，不存在则从头写</p></blockquote>   <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">fobj = <span class="built_in">open</span>(<span class="string">&#x27;./test.txt&#x27;</span>, <span class="string">&#x27;a&#x27;</span>)</span><br><span class="line">fobj.write(<span class="string">&#x27;这是追加的内容&#x27;</span>.encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">fobj.close()</span><br></pre></td></tr></table></figure><p>报错：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/27/3895f9d47c2eae8fae8d81eaf7ef7381.png" width="80%"/><p>注意：a打开模式，写入内容必须是字符串，不需要添加encode。</p><p>修改后报错：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/27/74f5867df3d9739793af03a649ada3f2.png" width="80%"/><p>注意：虽然是字符串类型写入的，但打开后依然显示乱码，在打开文件时使用 <code>encoding = &#39;utf-8&#39;</code></p><p>修改后运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/27/303e3b118af96de5df9a2d75a073ffcc.png" width="80%"/><h2 id="ab-只二进制追加"><a href="#ab-只二进制追加" class="headerlink" title="ab-只二进制追加"></a>ab-只二进制追加</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">fobj = <span class="built_in">open</span>(<span class="string">&#x27;./test.txt&#x27;</span>, <span class="string">&#x27;ab&#x27;</span>)</span><br><span class="line">fobj.write(<span class="string">&#x27;\n这还是追加的内容&#x27;</span>.encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">fobj.close()</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/27/6bc08c85532d56a2487e9e4f09ebafe9.png" width="80%"/><p>注意：’\n’在写入时表示换行符！</p><h1 id="文件的读取"><a href="#文件的读取" class="headerlink" title="文件的读取"></a>文件的读取</h1><h2 id="read"><a href="#read" class="headerlink" title="read()"></a>read()</h2><blockquote><p>read()表示读取全部内容，r打开模式下：read(2)读取前两个字符，rb模式下表示读取前两个字节</p></blockquote><p>案例：读取test.txt文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">f = <span class="built_in">open</span>(<span class="string">&#x27;test.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>)  <span class="comment"># 打开模式使用r（只读）</span></span><br><span class="line">print(f.read(<span class="number">10</span>))  <span class="comment"># 读取10个字符</span></span><br><span class="line">print(<span class="string">&#x27;---------------&#x27;</span>)</span><br><span class="line">print(f.read())  <span class="comment"># 读取全部内容</span></span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/27/e88572140a3330b5be30ccf4d99bf0e7.png" width="80%"/><p>注意：第二个read()开始读取的位置为第一个read()读取结束的位置+1。</p><h2 id="readline"><a href="#readline" class="headerlink" title="readline()"></a>readline()</h2><blockquote><p>读取一行</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">f = <span class="built_in">open</span>(<span class="string">&#x27;test.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">print(f.readline())</span><br><span class="line">print(f.readline())</span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/27/8031c5d46310e51dbaaf29a4042c9838.png" width="80%"/><p>注意：每行最后都会跟一个空行，想避免这个问题可以使用<code>end=&#39;&#39;</code></p><h2 id="readlines"><a href="#readlines" class="headerlink" title="readlines()"></a>readlines()</h2><blockquote><p>按行读取所有内容并将读取到的数据存入列表中</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">f = <span class="built_in">open</span>(<span class="string">&#x27;test.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>)  <span class="comment"># 使用r打开模式，打开文件</span></span><br><span class="line">dataList = f.readlines()  <span class="comment"># readlines()读取文件所有内容</span></span><br><span class="line">print(<span class="built_in">type</span>(dataList))  <span class="comment"># 打印存放读取数据的列表</span></span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> dataList:  <span class="comment"># 遍历该列表，输出文件内容</span></span><br><span class="line">    print(item, end=<span class="string">&#x27;&#x27;</span>)  <span class="comment"># 使用end=&#x27;&#x27; 避免出现空行的问题</span></span><br><span class="line">f.close()  <span class="comment"># 关闭文件</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/27/b2a119beaeba366c862166b249c7c952.png" width="80%"/><h2 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h2><ol><li><p>解码：decode</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">f = <span class="built_in">open</span>(<span class="string">&#x27;test.txt&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>)  <span class="comment"># 二进制读取</span></span><br><span class="line">data = f.read()</span><br><span class="line">print(data.decode(<span class="string">&#x27;utf-8&#x27;</span>))  <span class="comment"># decode解码</span></span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/27/6b76168d66d2c5f6868d96df57b182fc.png" width="80%"/></li><li><p>with关键字</p><blockquote><p>使用open()函数打开文件后，容易忘记关闭文件，使用with关键字打开文件可避免因此带来的问题</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;test.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    print(f.read())</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/27/76e0af42599c7d83b5384a91cef72f5e.png" width="80%"/></li></ol><h1 id="文件备份脚本"><a href="#文件备份脚本" class="headerlink" title="文件备份脚本"></a>文件备份脚本</h1><h2 id="小文件"><a href="#小文件" class="headerlink" title="小文件"></a>小文件</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">smallFileCopy</span>():</span></span><br><span class="line">    old_name = <span class="built_in">input</span>(<span class="string">&#x27;请输入要备份的文件名：&#x27;</span>)</span><br><span class="line">    old_nameList = old_name.split(<span class="string">&#x27;.&#x27;</span>)</span><br><span class="line">    new_name = old_nameList[<span class="number">0</span>] + <span class="string">&#x27;备份.&#x27;</span> + old_nameList[<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(old_name, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> old_file, <span class="built_in">open</span>(new_name, <span class="string">&#x27;w&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> new_file:  <span class="comment"># 要同时打开多个文件是，可以只使用一个with，多个open()之间使用逗号分隔</span></span><br><span class="line">        fileData = old_file.read()</span><br><span class="line">        new_file.write(fileData)</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">smallFileCopy()</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/28/a0ac036f5f8ccf6aca0814e1fc761b26.png" width="80%"/><p>注意：该代码仅适用于小型文件，因为使用read()一次读取全部会消耗较大内存。</p><h2 id="大文件"><a href="#大文件" class="headerlink" title="大文件"></a>大文件</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bigFileCopy</span>():</span></span><br><span class="line">    old_name = <span class="built_in">input</span>(<span class="string">&#x27;请输入要备份的文件名：&#x27;</span>)</span><br><span class="line">    old_nameList = old_name.split(<span class="string">&#x27;.&#x27;</span>)</span><br><span class="line">    new_name = old_nameList[<span class="number">0</span>] + <span class="string">&#x27;备份.&#x27;</span> + old_nameList[<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(old_name, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> old_file, <span class="built_in">open</span>(new_name, <span class="string">&#x27;w&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> new_file:</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            fileData = old_file.read(<span class="number">1024</span>)</span><br><span class="line">            new_file.write(fileData)</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">len</span>(fileData) &lt; <span class="number">1024</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">bigFileCopy()</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/28/6135d0729851d8322f7b5f11d362a927.png" width="80%"/><p>注意：每次读取固定大小字符，避免一次读取过多内容。</p><h1 id="文件定位"><a href="#文件定位" class="headerlink" title="文件定位"></a>文件定位</h1><h2 id="tell"><a href="#tell" class="headerlink" title="tell"></a>tell</h2><blockquote><p>获取文件指针位置（字节）</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;test.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    print(f.read(<span class="number">6</span>))  <span class="comment"># 读取6个字符</span></span><br><span class="line">    print(f.tell())  <span class="comment"># 打印文件指针位置</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/28/177b07dfbed6da6fc174f66a035a2dd5.png" width="80%"/><p>注意：</p><ul><li>utf-8编码下：汉字所占字节数为3</li><li>gbk编码下：汉字所占字节数为2</li><li>英文所占字节数，在上面两种编码下均为1个</li></ul><p>案例中所用编码格式为utf-8，共读取6个字符，故文件指针位置在第3*6=18个字节处</p><h2 id="truncate"><a href="#truncate" class="headerlink" title="truncate"></a>truncate</h2><blockquote><p>f.truncate(10)：保留前10个字节的内容</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;test.txt&#x27;</span>, <span class="string">&#x27;r+&#x27;</span>, encoding=<span class="string">&#x27;gbk&#x27;</span>) <span class="keyword">as</span> f:  <span class="comment"># gbk编码格式，每个中文占2个字节</span></span><br><span class="line">    f.truncate(<span class="number">10</span>)  <span class="comment"># 字节</span></span><br><span class="line">    print(<span class="string">&#x27;-------截取后文件的内容：-------&#x27;</span>)</span><br><span class="line">    print(f.read())</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/28/c6b3173ec42d6969baba7bcd849aefe4.png" width="80%"/><h2 id="seek"><a href="#seek" class="headerlink" title="seek"></a>seek</h2><blockquote><p>设置文件指针的位置</p></blockquote><ol><li><p>语法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">f.seek(offset,<span class="keyword">from</span>)</span><br></pre></td></tr></table></figure><p>注意：</p><ul><li>offset：表示偏移量（字节，为负表示向前移动）</li><li>from：0-从头，1-从当前位置，2-从文件末尾</li></ul></li><li><p>案例1：seek的简单使用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;test备份.txt&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    print(f.read(<span class="number">3</span>).decode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">    f.seek(<span class="number">-3</span>, <span class="number">1</span>)  <span class="comment"># 文件指针回溯3个字节</span></span><br><span class="line">    print(f.read(<span class="number">6</span>).decode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/14/36b401155a0ae56fbec6a5f6de9a915d.png" width="80%"/></li><li><p>当文件打开方式为非二进制时，只允许从文件的开头计算相对位置。</p></li></ol><h1 id="模块"><a href="#模块" class="headerlink" title="模块"></a>模块</h1><h2 id="import"><a href="#import" class="headerlink" title="import"></a>import</h2><blockquote><p>导入模块中所有的功能</p></blockquote><ol><li><p>导入和使用：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time  <span class="comment"># 导入</span></span><br><span class="line"></span><br><span class="line">print(time.ctime())  <span class="comment"># 调用</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/15/6a1fd93399170b3baac6aef2ce04acc9.png" width="80%"/></li><li><p>首次导入模块时，系统的操作：</p><ul><li>打开模块文件</li><li>执行该文件，将执行过程中产生的名字都丢到模块的名称空间</li><li>在程序中会有一个模块的名称指向模块的名称空间去</li></ul></li><li><p>模块搜索路径：</p><ul><li><p>优先搜索当前目录（自定义模块中的函数名不要和系统中的重复）</p></li><li><p>sys模块中搜索：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/15/7c54b315967481f1b36662cff5ac1482.png" width="80%"/></li><li><p>第三方模块默认安放位置：</p><ul><li>linux：/usr/local/lib/python</li><li>windows：环境变量位置\Lib\site-package</li></ul></li></ul></li><li><p>as 起别名：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time <span class="keyword">as</span> t  <span class="comment"># 别名为t</span></span><br><span class="line"></span><br><span class="line">print(t.ctime())  <span class="comment"># 模块名称不可使用</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/15/9e80592b50773c133bd36a8ebaf5cf02.png" width="80%"/></li></ol><h2 id="from…import"><a href="#from…import" class="headerlink" title="from…import"></a>from…import</h2><blockquote><p>只导入其中部分函数</p></blockquote><ol><li><p>导入和使用：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> ctime, time  <span class="comment"># 导入两个函数，不需要添加括号</span></span><br><span class="line"></span><br><span class="line">print(ctime())  <span class="comment"># 不再需要模块名称</span></span><br></pre></td></tr></table></figure><p>导入全部：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> *  <span class="comment"># 导入全部函数</span></span><br><span class="line"></span><br><span class="line">print(ctime())  <span class="comment"># 不再需要模块名称</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/15/b6f46f106ee865194f553d213ec06b91.png" width="80%"/></li><li><p>首次导入模块时，系统的操作：</p><ul><li>以模块为准创建一个名称空间</li><li>执行该模块文件，将执行过程中产生的名字都丢到模块的名称空间</li><li>在程序中拿到一个名字，该名字直接指向模块中的某一个名字</li></ul><p>缺点：容易与本地文件中的函数名称冲突</p></li></ol><h2 id="os模块"><a href="#os模块" class="headerlink" title="os模块"></a>os模块</h2><ol><li><p>重命名：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">os.rename(<span class="string">&#x27;test.txt&#x27;</span>, <span class="string">&#x27;test_重命名.txt&#x27;</span>)</span><br></pre></td></tr></table></figure></li><li><p>删除文件：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">os.remove(<span class="string">&#x27;test备份.txt&#x27;</span>)</span><br></pre></td></tr></table></figure></li><li><p>创建文件夹：</p><ul><li><p>创建一级目录：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">os.mkdir(<span class="string">&#x27;hello&#x27;</span>)</span><br></pre></td></tr></table></figure></li><li><p>创建多级目录：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">os.makedirs(<span class="string">&#x27;world\hello&#x27;</span>)</span><br></pre></td></tr></table></figure></li></ul></li><li><p>删除文件夹：</p><ul><li><p>删除空目录：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">os.rmdir(<span class="string">&#x27;hello&#x27;</span>)</span><br></pre></td></tr></table></figure></li><li><p>删除非空目录：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> shutil <span class="keyword">as</span> st</span><br><span class="line"></span><br><span class="line">st.rmtree(<span class="string">&#x27;world&#x27;</span>)</span><br></pre></td></tr></table></figure></li></ul></li><li><p>打印当前程序目录：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(os.getcwd())</span><br></pre></td></tr></table></figure></li><li><p>遍历d盘根目录下文件名称：</p><ul><li><p>os.listdir()：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">rs = os.listdir(<span class="string">&#x27;d:/&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> rs:</span><br><span class="line">    print(item)</span><br></pre></td></tr></table></figure></li><li><p>os.scandir()：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> os.scandir(<span class="string">&#x27;d:/&#x27;</span>) <span class="keyword">as</span> sc:</span><br><span class="line">    <span class="keyword">for</span> rs <span class="keyword">in</span> sc:</span><br><span class="line">        print(rs.name)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/15/54468b6242f06a26acf77699c892b5c6.png" width="80%"/><p>注意：d盘根目录的表示方法 ‘d:/‘</p></li></ul></li><li><p>判断是否是目录/文件：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(os.path.isdir(<span class="string">&#x27;world&#x27;</span>))  <span class="comment"># 返回值为布尔类型</span></span><br></pre></td></tr></table></figure><p>注意：可以通过递归实现打印某个目录下的全部文件</p></li><li><p>其它的一些操作：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/15/0a903842a4d704834028c39c4e502ccc.png" width="80%"/></li></ol><h2 id="制作模块"><a href="#制作模块" class="headerlink" title="制作模块"></a>制作模块</h2><blockquote><p>制作模块实现返回两个数的和</p></blockquote><ol><li><p>模块内容：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    返回a与b的和</span></span><br><span class="line"><span class="string">    :param a: 数a</span></span><br><span class="line"><span class="string">    :param b: 数b</span></span><br><span class="line"><span class="string">    :return: a+b</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> a + b</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试</span></span><br><span class="line">rs = add(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">print(<span class="string">&#x27;测试结果：&#x27;</span>, rs)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/15/5a8f152d728fd9705c3a4c309ee4d552.png" width="80%"/></li><li><p>导入模块：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> modudelTest  <span class="comment"># 导入自定义模块</span></span><br><span class="line"></span><br><span class="line">rs = modudelTest.add(<span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">print(<span class="string">&#x27;测试结果：&#x27;</span>, rs)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/15/e145411cdbfe538eb0b746f6bc79f8b1.png" width="80%"/><p>注意：导入模块时，其内部的测试代码也会被执行</p></li><li><p>模块内输出魔术变量__name__的值：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    返回a与b的和</span></span><br><span class="line"><span class="string">    :param a: 数a</span></span><br><span class="line"><span class="string">    :param b: 数b</span></span><br><span class="line"><span class="string">    :return: a+b</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> a + b</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试</span></span><br><span class="line">print(<span class="string">&#x27;__name__的值是：&#x27;</span>, __name__)</span><br></pre></td></tr></table></figure><ul><li><p>运行模块文件：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/15/35d65942e1eec0fcee532740f59fa1d2.png" width="80%"/></li><li><p>导入模块：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> modudelTest  <span class="comment"># 导入自定义模块</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/15/bcbe7a2cc2e8e79bcb0689f1ff2fd73c.png" width="80%"/></li></ul><p>注意：可以看出__name__在模块内和程序内的值是不同的，我们可以通过该特征解决2中的问题</p></li><li><p>根据3中性质修改后的模块代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    返回a与b的和</span></span><br><span class="line"><span class="string">    :param a: 数a</span></span><br><span class="line"><span class="string">    :param b: 数b</span></span><br><span class="line"><span class="string">    :return: a+b</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> a + b</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:  <span class="comment"># 判断__name__的值决定是否运行下面的代码 </span></span><br><span class="line">    rs = add(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">    print(<span class="string">&#x27;测试结果：&#x27;</span>, rs)</span><br></pre></td></tr></table></figure></li><li><p>__all__魔术变量：</p><blockquote><p>当模块中定义了__all__的值，使用from…import * 则只能导入all中存在的函数名</p></blockquote><ul><li><p>模板内容：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">__all__ = [<span class="string">&#x27;add&#x27;</span>, <span class="string">&#x27;diff&#x27;</span>]  <span class="comment"># 魔术变量__all__</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    <span class="keyword">return</span> a + b</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">diff</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    <span class="keyword">return</span> a - b</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">printInfo</span>():</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;这是输出的信息&#x27;</span></span><br></pre></td></tr></table></figure></li><li><p>使用import导入模板：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> modudelTest  <span class="comment"># 导入自定义模块</span></span><br><span class="line"></span><br><span class="line">print(modudelTest.add(<span class="number">1</span>, <span class="number">2</span>))</span><br><span class="line">print(modudelTest.diff(<span class="number">5</span>, <span class="number">4</span>))</span><br><span class="line">print(modudelTest.printInfo())</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/15/765cfc69735ad4117a404d020bdcedbf.png" width="80%"/></li><li><p>使用from…import *导入模板：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> modudelTest <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">print(add(<span class="number">1</span>, <span class="number">2</span>))</span><br><span class="line">print(diff(<span class="number">5</span>, <span class="number">4</span>))</span><br><span class="line">print(printInfo())</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/15/13c175e9f067149ebc5523c0e7b425f8.png" width="80%"/><p>报错原因：模板中定义了__all__的值为 [‘add’, ‘diff’]，当私用from导入全部函数时，只可导入all中定义的函数</p></li></ul></li></ol><h2 id="发布模块"><a href="#发布模块" class="headerlink" title="发布模块"></a>发布模块</h2><blockquote><p>让其他开发者安装后使用</p></blockquote><ol><li><p>新建文件夹并将模块文件移入其中：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/15/78228dae60be78f8d59c8455377f6d4a.png" width="80%"/></li><li><p>文件夹中新建setup.py ,按照注释补充模板内容：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> distutils.core <span class="keyword">import</span> setup</span><br><span class="line"></span><br><span class="line"><span class="comment"># name 模块名称</span></span><br><span class="line"><span class="comment"># version 版本号</span></span><br><span class="line"><span class="comment"># description 描述</span></span><br><span class="line"><span class="comment"># author 作者</span></span><br><span class="line"><span class="comment"># py_modules 要发布的内容</span></span><br><span class="line">setup(name=<span class="string">&quot;moduelTest&quot;</span>, version=<span class="string">&quot;1.0&quot;</span>, description=<span class="string">&quot;两位数加、减法、输出字符串&quot;</span>,</span><br><span class="line">      author=<span class="string">&quot;XJHui&quot;</span>, py_modules=[<span class="string">&#x27;modudelTest&#x27;</span>])  <span class="comment"># 不需要写文件后缀</span></span><br></pre></td></tr></table></figure></li><li><p>在新建文件夹下执行命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python setup.py build</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/15/23fa0186340b7f77d66b54d8ff0ad33b.png" width="80%"/></li><li><p>生成压缩包：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python setup.py sdist</span><br></pre></td></tr></table></figure></li><li><p>找到压缩包，分享后安装即可使用</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/15/f8be8c72c808a92eb02d04af0e616054.png" width="80%"/></li></ol><h2 id="安装模块"><a href="#安装模块" class="headerlink" title="安装模块"></a>安装模块</h2><ol><li><p>压缩包所在文件夹中执行命令：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install moduelTest<span class="number">-1.0</span>.tar.gz</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/15/8f1264b04332791ef509701d52048f17.png" width="80%"/></li><li><p>使用模块：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> modudelTest <span class="keyword">as</span> mt</span><br><span class="line"></span><br><span class="line">print(mt.add(<span class="number">1</span>, <span class="number">5</span>))</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/15/e992b4b302f87ad7cdee17cebf832a1e.png" width="80%"/></li></ol><hr><p>不足之处，欢迎留言，会及时回复，及时更正！</p><p>创作不易，感谢支持！</p>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Day10 项目-飞机大战游戏</title>
      <link href="16144.html"/>
      <url>16144.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>本文章最初发布在 <a href="https://plushine.cn">XJHui’s Blog</a>，未经允许，任何人禁止转载！</p><p><font color="red" style="font-weight:700">注意：</font>最新修改版本已发布在 <a href="https://plushine.cn/16144.html">这里</a>，点击前往查看！</p><h1 id="项目需求"><a href="#项目需求" class="headerlink" title="项目需求"></a>项目需求</h1><ol><li><p>存在四个对象：</p><ul><li>我方飞机</li><li>敌方飞机</li><li>我方子弹</li><li>敌方子弹</li></ul></li><li><p>功能：</p><ul><li><p>背景音乐的添加</p></li><li><p>我方飞机可以移动【根据按键来控制的】</p></li><li><p>敌方飞机也可以移动【随机的自动移动】</p></li><li><p>双方飞机都可以发送子弹</p></li></ul></li><li><p>步骤:</p><ul><li>创建一个窗口【搭建界面】</li><li>创建一个我方飞机，根据方向键左右的移动【键盘监测】</li><li>给我方飞机添加发射子弹的功能【按下空格键去发送】</li><li>创建一个敌人飞机</li><li>敌人飞机可以自由的移动</li><li>敌人飞机可以自动的发射子弹</li></ul></li></ol><h1 id="环境安装和调试"><a href="#环境安装和调试" class="headerlink" title="环境安装和调试"></a>环境安装和调试</h1><h2 id="安装pygame"><a href="#安装pygame" class="headerlink" title="安装pygame"></a>安装pygame</h2><blockquote><p>利用SDL（C语言编写）库编写的python游戏库，需要手动安装</p></blockquote><ul><li><p>安装库：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install pygame</span><br></pre></td></tr></table></figure><p>安装完成：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/11/556f2fbfb4cf08ab32668b85483011cb.png" width="80%"/><p>注意：可能会因为网络原因下载中断导致安装失败，建议科学上网。</p></li><li><p>验证安装：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip list</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/11/2924dd9ddacca13251af6905857b7577.png" width="80%"/></li></ul><h2 id="搭建环境"><a href="#搭建环境" class="headerlink" title="搭建环境"></a>搭建环境</h2><ul><li><p>新建python项目：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/11/75446b0a893b2297f8d0c55b72c594e5.png" width="80%"/><p>注意：要勾选红框中的内容，代表使用新的虚拟环境。</p></li><li><p>导入pygame文件：</p><p>点击下方Terminal：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/11/eaaedb0d68726fd20273b3cf537d4cd7.png" width="80%"/><p>输入：pip list查看已安装的第三方库，发现pygame未安装</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/11/aa5cc82f0f693de57b80757aef5dc311.png" width="80%"/></li><li><p>输入：pip install pygame</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/11/9523d9092254d82dcda416c5aa2a0e38.png" width="80%"/><p>如果cmd中安装成功，pycharm中安装失败，可以按照以下步骤操作：</p><ul><li><p>输入：pip show pygame</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/11/94c3b11f3107dd599eba753d7997be59.png" width="80%"/></li><li><p>访问该路径，找到下图所示文件夹并复制：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/11/cdec911178dd016be138fb06b224d2bb.png" width="80%"/></li><li><p>粘贴到 <code>游戏项目\venv\Lib\site-packages</code> 路径下：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/11/180610e214105e2b5dff5bf62cf1dc3a.png" width="80%"/></li></ul></li><li><p>验证安装成功：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/11/2f2c19dd872cf2aa3b6e0b80f682a936.png" width="80%"/></li></ul><h2 id="验证库"><a href="#验证库" class="headerlink" title="验证库"></a>验证库</h2><p>运行代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pygame</span><br><span class="line"></span><br><span class="line">print(<span class="string">&#x27;可以正常使用！&#x27;</span>)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/11/5342483d5fd103694111c022ca85dc91.png" width="80%"/><h1 id="界面配置"><a href="#界面配置" class="headerlink" title="界面配置"></a>界面配置</h1><h2 id="搭建界面"><a href="#搭建界面" class="headerlink" title="搭建界面"></a>搭建界面</h2><ol><li><p>游戏界面：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/11/9b6b712d68c2cc8ff1c0ca0e11798bc2.png" width="40%"/></li><li><p>程序代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pygame  <span class="comment"># 导入pygame包</span></span><br><span class="line"><span class="keyword">from</span> pygame.<span class="built_in">locals</span> <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    搭建界面，显示背景图片</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    screen = pygame.display.set_mode((<span class="number">350</span>, <span class="number">500</span>))  <span class="comment"># 设置界面大小</span></span><br><span class="line">    background = pygame.image.load(<span class="string">&quot;./feiji/background.png&quot;</span>)  <span class="comment"># 导入背景图片</span></span><br><span class="line"></span><br><span class="line">    pygame.display.set_caption(<span class="string">&#x27;飞机大作战&#x27;</span>)  <span class="comment"># 界面名称</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        screen.blit(background, (<span class="number">0</span>, <span class="number">0</span>))  <span class="comment"># 在界面中心位置显示背景图片</span></span><br><span class="line"></span><br><span class="line">        pygame.display.update()  <span class="comment"># 刷新界面</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()  <span class="comment"># 调用创建界面的函数</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="键盘监测"><a href="#键盘监测" class="headerlink" title="键盘监测"></a>键盘监测</h2><ol><li><p>程序代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">eventList = pygame.event.get()  <span class="comment"># event.gey()可以监听键盘的输入</span></span><br><span class="line"><span class="keyword">for</span> event <span class="keyword">in</span> eventList:  <span class="comment"># 遍历读取到的信息</span></span><br><span class="line">print(event)</span><br><span class="line"><span class="keyword">if</span> event.<span class="built_in">type</span> == QUIT:  <span class="comment"># 先判断读取到的信息的类型</span></span><br><span class="line">        print(<span class="string">&#x27;退出！&#x27;</span>)</span><br><span class="line">exit()</span><br><span class="line"><span class="keyword">elif</span> event.<span class="built_in">type</span> == KEYDOWN:</span><br><span class="line"><span class="keyword">if</span> event.key == K_a <span class="keyword">or</span> event.key == K_LEFT:  <span class="comment"># 如果是a或者左方向键</span></span><br><span class="line">print(<span class="string">&#x27;left&#x27;</span>)</span><br><span class="line"><span class="keyword">elif</span> event.key == K_d <span class="keyword">or</span> event.key == K_RIGHT:</span><br><span class="line">print(<span class="string">&#x27;right&#x27;</span>)</span><br><span class="line"><span class="keyword">elif</span> event.key == K_SPACE:</span><br><span class="line">print(<span class="string">&#x27;space&#x27;</span>)</span><br></pre></td></tr></table></figure></li><li><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/11/a81e1fee8fb760199b70d82930d783a5.png" width="80%"/></li></ol><h2 id="背景音乐"><a href="#背景音乐" class="headerlink" title="背景音乐"></a>背景音乐</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">pygame.mixer.init()  <span class="comment"># 初始化音乐播放器</span></span><br><span class="line">pygame.mixer.music.load(<span class="string">&quot;./feiji/backgrou</span></span><br><span class="line"><span class="string">pygame.mixer.music.set_volume(0.5)  # 设置背景音乐音量</span></span><br><span class="line"><span class="string">pygame.mixer.music.play(-1)  # 无限循环</span></span><br></pre></td></tr></table></figure><h2 id="玩家样式"><a href="#玩家样式" class="headerlink" title="玩家样式"></a>玩家样式</h2><ol><li><p>程序代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pygame  <span class="comment"># 导入pygame包</span></span><br><span class="line"><span class="keyword">from</span> pygame.<span class="built_in">locals</span> <span class="keyword">import</span> *  <span class="comment"># 导入包中的一些函数</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    搭建界面，显示背景图片</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    screen = pygame.display.set_mode((<span class="number">350</span>, <span class="number">500</span>), depth=<span class="number">32</span>)  <span class="comment"># 设置界面大小</span></span><br><span class="line">    background = pygame.image.load(<span class="string">&quot;./feiji/background.png&quot;</span>)  <span class="comment"># 导入背景图片</span></span><br><span class="line">    hero = pygame.image.load(<span class="string">&#x27;./feiji/hero.png&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    pygame.display.set_caption(<span class="string">&#x27;飞机大作战&#x27;</span>)  <span class="comment"># 界面名称</span></span><br><span class="line"></span><br><span class="line">    pygame.mixer.init()  <span class="comment"># 初始化音乐播放器</span></span><br><span class="line">    pygame.mixer.music.load(<span class="string">&quot;./feiji/background.mp3&quot;</span>)  <span class="comment"># 导入背景音乐</span></span><br><span class="line">    pygame.mixer.music.set_volume(<span class="number">0.5</span>)  <span class="comment"># 设置背景音乐音量</span></span><br><span class="line">    pygame.mixer.music.play(<span class="number">-1</span>)  <span class="comment"># 无限循环</span></span><br><span class="line">    x, y = <span class="number">0</span>, <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        screen.blit(background, (<span class="number">0</span>, <span class="number">0</span>))  <span class="comment"># 在界面中心位置显示背景图片</span></span><br><span class="line">        screen.blit(hero, (x, y))  <span class="comment"># 在界面中心位置显示背景图片</span></span><br><span class="line"></span><br><span class="line">        eventList = pygame.event.get()  <span class="comment"># event.gey()可以监听键盘的输入</span></span><br><span class="line">        <span class="keyword">for</span> event <span class="keyword">in</span> eventList:  <span class="comment"># 遍历读取到的信息</span></span><br><span class="line">            print(event)</span><br><span class="line">            <span class="keyword">if</span> event.<span class="built_in">type</span> == QUIT:  <span class="comment"># 先判断读取到的信息的类型</span></span><br><span class="line">                print(<span class="string">&#x27;退出！&#x27;</span>)</span><br><span class="line">                exit()</span><br><span class="line">            <span class="keyword">elif</span> event.<span class="built_in">type</span> == KEYDOWN:</span><br><span class="line">                <span class="keyword">if</span> event.key == K_a <span class="keyword">or</span> event.key == K_LEFT:  <span class="comment"># 如果是a或者左方向键</span></span><br><span class="line">                    print(<span class="string">&#x27;left&#x27;</span>)</span><br><span class="line">                    <span class="keyword">if</span> x &gt; <span class="number">0</span>:</span><br><span class="line">                        x -= <span class="number">5</span></span><br><span class="line">                <span class="keyword">elif</span> event.key == K_d <span class="keyword">or</span> event.key == K_RIGHT:</span><br><span class="line">                    <span class="keyword">if</span> x &lt; <span class="number">310</span>:</span><br><span class="line">                        x += <span class="number">5</span></span><br><span class="line">                    print(<span class="string">&#x27;right&#x27;</span>)</span><br><span class="line">                <span class="keyword">elif</span> event.key == K_SPACE:</span><br><span class="line">                    print(<span class="string">&#x27;space&#x27;</span>)</span><br><span class="line">        pygame.display.update()  <span class="comment"># 刷新界面</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()  <span class="comment"># 调用创建界面的函数</span></span><br></pre></td></tr></table></figure></li><li><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/12/cfe775ca59ada975e4838f4bfa5b1647.png" width="80%"/></li></ol><h1 id="面向对象实现"><a href="#面向对象实现" class="headerlink" title="面向对象实现"></a>面向对象实现</h1><ol><li><p>代码：<a href="https://pasteme.cn/48332">在这</a></p></li><li><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/12/07260a51dcb4ef327f15f4c1be5aa3ff.png" width="80%"/></li></ol><h1 id="发射子弹"><a href="#发射子弹" class="headerlink" title="发射子弹"></a>发射子弹</h1><ol><li><p>代码：<a href="https://pasteme.cn/48379">在这</a></p></li><li><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/12/a9b924ed5ee694961a1bcd3863977240.png" width="80%"/></li></ol><h1 id="显示敌机和子弹"><a href="#显示敌机和子弹" class="headerlink" title="显示敌机和子弹"></a>显示敌机和子弹</h1><ol><li><p>代码：<a href="https://pasteme.cn/50192">在这</a></p></li><li><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/27/680e2aca039731988549e89c044e87ce.png" width="80%"/></li></ol><h1 id="代码优化"><a href="#代码优化" class="headerlink" title="代码优化"></a>代码优化</h1><p>可优化项：继承（避免过度冗余）</p><p>代码：<a href="https://pasteme.cn/50203">在这</a></p><hr><p>不足之处，欢迎留言，会及时回复，及时更正！</p><p>创作不易，感谢支持！</p>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Day09 面向对象基础（下）</title>
      <link href="43473.html"/>
      <url>43473.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>本文章最初发布在 <a href="https://plushine.cn">XJHui’s Blog</a>，未经允许，任何人禁止转载！</p><p><font color="red" style="font-weight:700">注意：</font>最新修改版本已发布在 <a href="https://plushine.cn/43473.html">这里</a>，点击前往查看！</p><h1 id="私有化属性"><a href="#私有化属性" class="headerlink" title="私有化属性"></a>私有化属性</h1><blockquote><p>有些属性不想让别人随意修改或者防止被意外修改，就要对属性进行私有化</p></blockquote><h2 id="基本概述"><a href="#基本概述" class="headerlink" title="基本概述"></a>基本概述</h2><ol><li><p>定义：</p><p>为了保证属性安全（不能被随意修改），可以将属性定义为私有属性</p></li><li><p>使用场景：</p><ul><li>属性不想被类的外部直接调用</li><li>属性值不想随意被改变</li><li>不想被子类继承</li></ul></li><li><p>语法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>:</span></span><br><span class="line">       __name = <span class="string">&#x27;张三&#x27;</span>  <span class="comment"># 属性名前加两个下划线将该属性私有化</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="使用私有属性"><a href="#使用私有属性" class="headerlink" title="使用私有属性"></a>使用私有属性</h2><ol><li><p>案例：验证实例属性私有化后在类的外部不可调用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>:</span></span><br><span class="line">       <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">           self.name = <span class="string">&#x27;张三&#x27;</span>  <span class="comment"># 实例属性</span></span><br><span class="line">           self.__age = <span class="number">17</span>  <span class="comment"># 私有属性</span></span><br><span class="line">           <span class="keyword">pass</span></span><br><span class="line">   </span><br><span class="line">       <span class="keyword">pass</span></span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   p1 = Person()</span><br><span class="line">   print(p1.name)  <span class="comment"># 打印实例属性</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/07/22cb76f330dc9bb0ffc1e1d5ebd71abb.png" width="80%"/><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(p1.age)  <span class="comment"># 打印私有属性</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/07/d293c87bc7b4d126b3464b54187295a3.png" width="80%"/></li><li><p>案例：验证私有化属性可在类的内部调用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>:</span></span><br><span class="line">       <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">           self.name = <span class="string">&#x27;张三&#x27;</span></span><br><span class="line">           self.__age = <span class="number">17</span></span><br><span class="line">           <span class="keyword">pass</span></span><br><span class="line">   </span><br><span class="line">       <span class="function"><span class="keyword">def</span> <span class="title">printData</span>(<span class="params">self</span>):</span>  <span class="comment"># 实例方法，打印私有属性age</span></span><br><span class="line">           print(self.__age)</span><br><span class="line">   </span><br><span class="line">       <span class="keyword">pass</span></span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   p1 = Person()</span><br><span class="line">   p1.printData()  <span class="comment"># 通过调用实例方法，验证在类的内部可直接访问私有属性</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/07/e46aff47681438414db36531fde0ad44.png" width="80%"/><p>   总结：将属性私有化后，就不可以在类的外部访问了，但内部使用不受任何影响</p></li><li><p>私有化属性可继承性：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>:</span>  <span class="comment"># 父类</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.__name = <span class="string">&#x27;张三&#x27;</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Teacher</span>(<span class="params">Person</span>):</span>  <span class="comment"># 子类调用父类</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test</span>(<span class="params">self</span>):</span>  <span class="comment"># 子类中打印父类中的私有属性</span></span><br><span class="line">        print(self.__name)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">t1 = Teacher()</span><br><span class="line">t1.test()</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/10/a89ad1b07037bfb6523478ba75bf9107.png" width="80%"/><p>总结：父类的私有属性不可被子类继承</p></li></ol><h1 id="私有化方法"><a href="#私有化方法" class="headerlink" title="私有化方法"></a>私有化方法</h1><blockquote><p>有些重要的方法，不允许外部调用或防止子类意外重写，可以把普通方法设置成私有化方法</p></blockquote><h2 id="语法规则"><a href="#语法规则" class="headerlink" title="语法规则"></a>语法规则</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Animal</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__showInfo</span>(<span class="params">self</span>):</span>  <span class="comment"># 方法名前面加两个下划线</span></span><br><span class="line">        print(<span class="string">&#x27;这是动物类！&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="使用私有化方法"><a href="#使用私有化方法" class="headerlink" title="使用私有化方法"></a>使用私有化方法</h2><ol><li><p>案例：验证私有方法不可被外部直接访问且不可被继承</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Animal</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__showInfo</span>(<span class="params">self</span>):</span></span><br><span class="line">        print(<span class="string">&#x27;这是动物类！&#x27;</span>)</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Bird</span>(<span class="params">Animal</span>):</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">b1 = Bird()</span><br><span class="line">b1.__showInfo()</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/07/328e987a44164c53ffb31f1ae5be43cc.png" width="80%"/></li><li><p>案例：私有方法在类的内部可正常访问</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Animal</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__showInfo</span>(<span class="params">self</span>):</span></span><br><span class="line">        print(<span class="string">&#x27;这是动物类！&#x27;</span>)</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">printData</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.__showInfo()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Bird</span>(<span class="params">Animal</span>):</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">b1 = Bird()</span><br><span class="line">b1.printData()</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/07/58987f0345a563f320155aa97a4033af.png" width="80%"/></li><li><p>总结：</p><ul><li>私有方法不可被外部访问且不可被继承</li><li>私有方法在类内部可正常访问</li></ul></li></ol><h2 id="命名规范"><a href="#命名规范" class="headerlink" title="命名规范"></a>命名规范</h2><ol><li>头单下划线：保护类变量（不常用） _name</li><li>头双下划线：私有属性【方法】 __name</li><li>头尾双下划线：魔术方法【系统所有】，不可自定义 _<em>init_</em></li><li>尾单下划线： 避免变量名与关键字冲突时可使用 class_</li></ol><h1 id="Property属性"><a href="#Property属性" class="headerlink" title="Property属性"></a>Property属性</h1><blockquote><p>获取和修改私有属性的值</p></blockquote><p>方法一：调用set方法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Animal</span>:</span></span><br><span class="line">    __name = <span class="string">&#x27;张三&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getName</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> self.__name</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">setName</span>(<span class="params">self, data</span>):</span></span><br><span class="line">        self.__name = data</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">a1 = Animal()</span><br><span class="line">a1.setName(<span class="string">&#x27;李四&#x27;</span>)  <span class="comment"># 通过调用set方法实现私有属性值的修改</span></span><br><span class="line">print(a1.getName())  <span class="comment"># 调用get方法实现私有属性值的获取</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/07/8861c5d6acc8bbfb4289cdc557d0c569.png" width="80%"/><p>方法二：使用Property属性函数</p><blockquote><p>Property属性函数可以通过点语法来获取、修改私有属性的值</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Animal</span>:</span></span><br><span class="line">    __name = <span class="string">&#x27;张三&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getName</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> self.__name</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">setName</span>(<span class="params">self, data</span>):</span></span><br><span class="line">        self.__name = data</span><br><span class="line"></span><br><span class="line">    name = <span class="built_in">property</span>(getName, setName)  <span class="comment"># property()方法有两个参数，分别为get、set的方法名</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">a1 = Animal()</span><br><span class="line">a1.name = <span class="string">&#x27;李四&#x27;</span>  <span class="comment"># 点语法实现值的修改</span></span><br><span class="line">print(a1.name)  <span class="comment"># 点语法实现值的获取</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/07/58094986cae0dcf5f7aad2fc6215f052.png" width="80%"/><h1 id="单例模式"><a href="#单例模式" class="headerlink" title="单例模式"></a>单例模式</h1><blockquote><p>实现整个系统中某个类的实例只创建一次</p></blockquote><h2 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h2><p>网站登录（例如淘宝网，只允许一个账号同时浏览）</p><h2 id="创建单例对象"><a href="#创建单例对象" class="headerlink" title="创建单例对象"></a>创建单例对象</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">People</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    __instance = <span class="literal">None</span>  <span class="comment"># 私有属性用来存放首次创建的对象</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        print(<span class="string">&#x27;对象创建成功！&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__new__</span>(<span class="params">cls, *args, **kwargs</span>):</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> cls.__instance:  <span class="comment"># 如果 __instance 为None，说明该类还未曾创建过对象</span></span><br><span class="line">            cls.__instance = <span class="built_in">object</span>.__new__(cls)  <span class="comment"># 创建一个对象并用__instance记录下来</span></span><br><span class="line">            <span class="keyword">return</span> cls.__instance</span><br><span class="line">        <span class="keyword">else</span>:  <span class="comment"># 如果__instance不为None代表，该类已经创建过一个对象了，只需要直接返回之前创建的那个变量【__instance】</span></span><br><span class="line">            <span class="keyword">return</span> cls.__instance</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">p1 = People()</span><br><span class="line">p2 = People()</span><br><span class="line">print(<span class="built_in">id</span>(p1), <span class="built_in">id</span>(p2))</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/07/6e4be1d1e0199551ff1cb0374b776fb8.png" width="80%"/><h1 id="错误与异常处理"><a href="#错误与异常处理" class="headerlink" title="错误与异常处理"></a>错误与异常处理</h1><h2 id="引入"><a href="#引入" class="headerlink" title="引入"></a>引入</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">age = <span class="number">10</span></span><br><span class="line">print(name)  <span class="comment"># 未定义，运行会报错</span></span><br><span class="line">print(age)  <span class="comment"># 已定义，理论上可以正常显示</span></span><br></pre></td></tr></table></figure><p>上面代码中，未定义name而直接输出，程序会报错如下：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/07/8566294caebaaca0ed110e4bfa73b004.png" width="80%"/><p>程序报错导致整个程序结束，因此age不能正常显示。</p><p>有没有办法可以输出错误内容并使程序正常运行？有，异常处理。</p><h2 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h2><ol><li><p>try…except</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">age = <span class="number">10</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    print(name)  <span class="comment"># 准备捕获异常的代码</span></span><br><span class="line"><span class="keyword">except</span> NameError <span class="keyword">as</span> msg:  <span class="comment"># except后跟错误类型，as将结果重定向</span></span><br><span class="line">    print(<span class="string">&#x27;【&#123;&#125;】 异常&#x27;</span>.<span class="built_in">format</span>(msg))</span><br><span class="line">print(age)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/07/5ef885d6523b56f739183d779dd19af4.png" width="80%"/><p>拓展：如果可能有多种错误类型怎么办？</p><ul><li><p>try跟随多个except语句</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">l1 = [<span class="string">&#x27;hello&#x27;</span>, <span class="number">1</span>, <span class="literal">True</span>]</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    print(l1[<span class="number">10</span>])</span><br><span class="line"><span class="keyword">except</span> NameError <span class="keyword">as</span> msg:</span><br><span class="line">    print(<span class="string">&#x27;【&#123;&#125;】 异常&#x27;</span>.<span class="built_in">format</span>(msg))</span><br><span class="line"><span class="keyword">except</span> IndexError <span class="keyword">as</span> msg:</span><br><span class="line">    print(<span class="string">&#x27;【&#123;&#125;】 异常&#x27;</span>.<span class="built_in">format</span>(msg))</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/07/62d720469a44e13377f2606f13490bd8.png" width="80%"/></li><li><p>方法二：捕获所有异常（万能）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">l1 = [<span class="string">&#x27;hello&#x27;</span>, <span class="number">1</span>, <span class="literal">True</span>]</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">   print(l1[<span class="number">10</span>])</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> msg:</span><br><span class="line">   print(msg)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/08/661f0dfa191fe17d64064b57ccb7524a.png" width="80%"/></li></ul></li><li><p>错误栈：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">A</span>(<span class="params">data</span>):</span></span><br><span class="line">    <span class="keyword">return</span> data / <span class="built_in">int</span>(data)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">B</span>(<span class="params">data</span>):</span></span><br><span class="line">    <span class="keyword">return</span> A(data) * <span class="number">10</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Func</span>(<span class="params">data</span>):</span></span><br><span class="line">    B(data)</span><br><span class="line"></span><br><span class="line">Func(<span class="number">0</span>)</span><br></pre></td></tr></table></figure><p>分析：上面出现多个函数嵌套调用，每个函数中都需要写try…except？答案是：不需要</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">A</span>(<span class="params">data</span>):</span></span><br><span class="line">    <span class="keyword">return</span> data / <span class="built_in">int</span>(data)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">B</span>(<span class="params">data</span>):</span></span><br><span class="line">    <span class="keyword">return</span> A(data) * <span class="number">10</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Func</span>(<span class="params">data</span>):</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        B(data)</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> msg:</span><br><span class="line">        print(msg)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Func(<span class="number">0</span>)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/08/5e7a5166c04db054cb2d65fecc094285.png" width="80%"/><p>原理：</p><ul><li>如果在函数中出现错误，则会将该错误返回到上一层，直至最顶层</li><li>如果错误出现在最顶层，则程序会结束</li></ul><p>总结：合适位置添加try…except可以极大的减少代码量</p></li><li><p>else：</p><blockquote><p>当try中未出现错误，会执行else语句</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Func</span>(<span class="params">data</span>):</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        print(<span class="built_in">int</span>(<span class="number">10</span> / <span class="built_in">int</span>(data)))  <span class="comment"># try里面是可以输出内容的</span></span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> msg:</span><br><span class="line">        print(msg)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">&#x27;程序无异常！&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Func(<span class="number">5</span>)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/08/0bf4b5a4ac536b948daaa051f0feac4b.png" width="80%"/></li><li><p>finally：</p><blockquote><p>无论是否报错都会执行的语句</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Func</span>(<span class="params">data</span>):</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        print(<span class="built_in">int</span>(<span class="number">10</span> / <span class="built_in">int</span>(data)))  <span class="comment"># try里面是可以输出内容的</span></span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> msg:</span><br><span class="line">        print(msg)</span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        print(<span class="string">&#x27;程序运行结束！&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Func(<span class="number">5</span>)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/08/fceb7a0511be21bbdf61cad9ddd297e5.png" width="80%"/><p>注意：虽然finally在这里显得很多余，但用其释放资源很方便。</p></li></ol><h2 id="自定义错误"><a href="#自定义错误" class="headerlink" title="自定义错误"></a>自定义错误</h2><blockquote><p>直接或间接继承Exception类或者Error类</p></blockquote><p>案例：当字符长度超过5时，抛出异常</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LenError</span>(<span class="params">Exception</span>):</span>  <span class="comment"># 继承Exception类</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;您的字符长度超过所限制的5个字符！&#x27;</span>  <span class="comment"># 自定义异常，msg内容来自__str__方法</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">str</span> = <span class="string">&#x27;hello python!&#x27;</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(<span class="built_in">str</span>) &gt; <span class="number">5</span>:</span><br><span class="line">        <span class="keyword">raise</span> LenError  <span class="comment"># raise用来抛出异常，不可用return（程序会停止运行）</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="built_in">str</span>)</span><br><span class="line"><span class="keyword">except</span> LenError <span class="keyword">as</span> msg:</span><br><span class="line">    print(msg)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/08/e27b62d1c81514811854d856a7cba5a4.png" width="80%"/><h1 id="动态属性和方法"><a href="#动态属性和方法" class="headerlink" title="动态属性和方法"></a>动态属性和方法</h1><h2 id="动态属性"><a href="#动态属性" class="headerlink" title="动态属性"></a>动态属性</h2><blockquote><p>支持实例属性和类属性的添加</p></blockquote><ol><li><p>添加实例属性：</p><blockquote><p>通过实例对象添加</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, name, age</span>):</span></span><br><span class="line">        self.name = name  <span class="comment"># 初始方法定义实例变量</span></span><br><span class="line">        self.age = age</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;【&#123;&#125;】今年【&#123;&#125;】岁了。&#x27;</span>.<span class="built_in">format</span>(self.name, self.age)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">zyh = Student(<span class="string">&#x27;张艳华&#x27;</span>, <span class="number">20</span>)</span><br><span class="line">zyh.weight = <span class="string">&#x27;101&#x27;</span>  <span class="comment"># 动态添加实例属性</span></span><br><span class="line">print(zyh.weight)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/10/4ab6f0bcf7efb2d5b4b104ef25715352.png" width="80%"/><p>动态添加的属性仅对该实例对象有效，验证：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, name, age</span>):</span></span><br><span class="line">        self.name = name  <span class="comment"># 初始方法定义实例变量</span></span><br><span class="line">        self.age = age</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;【&#123;&#125;】今年【&#123;&#125;】岁了。&#x27;</span>.<span class="built_in">format</span>(self.name, self.age)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">zyh = Student(<span class="string">&#x27;张艳华&#x27;</span>, <span class="number">20</span>)</span><br><span class="line">zyh.weight = <span class="string">&#x27;101&#x27;</span>  <span class="comment"># 动态添加实例属性</span></span><br><span class="line">wh = Student(<span class="string">&#x27;王浩&#x27;</span>, <span class="number">19</span>)</span><br><span class="line">print(wh.weight)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/10/1c93869bd52967ce79edfa9306553008.png" width="80%"/></li><li><p>添加类属性：</p><blockquote><p>通过类对象添加</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, name, age</span>):</span></span><br><span class="line">        self.name = name  <span class="comment"># 初始方法定义实例变量</span></span><br><span class="line">        self.age = age</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">zyh = Student(<span class="string">&#x27;张艳华&#x27;</span>, <span class="number">20</span>)</span><br><span class="line">Student.weight = <span class="number">101</span>  <span class="comment"># 动态添加类属性</span></span><br><span class="line">print(zyh.weight)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/10/15e9fe1471aa2b3679e145cd2392d4fa.png" width="80%"/></li></ol><h2 id="动态方法"><a href="#动态方法" class="headerlink" title="动态方法"></a>动态方法</h2><blockquote><p>原理是把一个外部函数通过转换（types.MethodType()）使其成为实例方法</p></blockquote><ol><li><p>添加实例方法：</p><blockquote><p>通过实例对象添加，仅对该实例对象有效</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> types  <span class="comment"># 导入用来转换的types包</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, name, age</span>):</span></span><br><span class="line">        self.name = name  <span class="comment"># 初始方法定义实例变量</span></span><br><span class="line">        self.age = age</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span>(<span class="params">self</span>):</span>  <span class="comment"># 自定义的一个外部函数，self不能忘记</span></span><br><span class="line">    print(<span class="string">&#x27;【&#123;&#125;】今年【&#123;&#125;】岁了！&#x27;</span>.<span class="built_in">format</span>(self.name, self.age))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">zyh = Student(<span class="string">&#x27;张艳华&#x27;</span>, <span class="number">20</span>)</span><br><span class="line">zyh.printData = types.MethodType(func, zyh)  <span class="comment"># 实例对象.方法名=types.MethodType(外部函数名, 实例对象)</span></span><br><span class="line">zyh.printData()  <span class="comment"># 实例对象.方法名（调用定义的实例方法）</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/10/5e901614e3996f17d3c421e0e688e832.png" width="80%"/></li><li><p>添加类方法和静态方法：</p><blockquote><p>通过类对象实现</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, name, age</span>):</span></span><br><span class="line">        self.name = name  <span class="comment"># 初始方法定义实例变量</span></span><br><span class="line">        self.age = age</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@classmethod  # 定义的外部方法，要满足类方法的条件：1、注明@classmethod 2、第一个参数默认是cls</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span>(<span class="params">cls</span>):</span></span><br><span class="line">    print(<span class="string">&#x27;这是一个类方法！&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Student.testFunc = func  <span class="comment"># 动态添加类方法（通过类对象实现的），（类对象.方法名=外部方法名）</span></span><br><span class="line">zyh = Student(<span class="string">&#x27;张艳华&#x27;</span>, <span class="number">20</span>)</span><br><span class="line">zyh.testFunc()  <span class="comment"># 验证类方法是否添加成功（实例对象调用类方法）</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/10/9e96cf30b70a1fd3ba08f3746d2b0692.png" width="80%"/><p>注意：</p><ul><li>静态方法同理（外部方法，要满足静态方法的条件）</li><li>类、静态方法不需要导入types包</li></ul></li></ol><h1 id="slots"><a href="#slots" class="headerlink" title="_slots_"></a>_<em>slots_</em></h1><h2 id="限制属性"><a href="#限制属性" class="headerlink" title="限制属性"></a>限制属性</h2><ol><li><p>添加属性（未使用slots方法）：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">xm = Student()</span><br><span class="line">xm.name = <span class="string">&#x27;小明&#x27;</span>  <span class="comment"># 动态添加实例属性</span></span><br><span class="line">xm.age = <span class="number">19</span></span><br><span class="line">print(xm.name, xm.age)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/10/ad4f881b87379808e4c136d5c9b2323d.png" width="80%"/></li><li><p>限制属性添加（使用slots方法）：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span>:</span>  <span class="comment"># 使用slots方法限制属性的添加，字符串类型的属性名放入元组中，逗号分隔</span></span><br><span class="line">    __slots__ = (<span class="string">&#x27;name&#x27;</span>)  <span class="comment"># 仅允许添加一个名为name的属性</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">xm = Student()</span><br><span class="line">xm.name = <span class="string">&#x27;小明&#x27;</span>  <span class="comment"># 动态添加实例属性</span></span><br><span class="line">xm.age = <span class="number">19</span></span><br><span class="line">print(xm.name, xm.age)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/10/3a2e5705a437a5c716e230804c5daab8.png" width="80%"/></li></ol><h2 id="节省内存"><a href="#节省内存" class="headerlink" title="节省内存"></a>节省内存</h2><ol><li><p>dict存放所有属性（消耗内存）：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">xm = Student()</span><br><span class="line">xm.name = <span class="string">&#x27;小明&#x27;</span>  <span class="comment"># 动态添加实例属性</span></span><br><span class="line">xm.age = <span class="number">19</span></span><br><span class="line">print(xm.__dict__)  <span class="comment"># dict默认存放所有属性及其值</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/10/3ff75b74793b0d55b35b7d42666ab1f4.png" width="80%"/></li><li><p>使用slots后dict会被删除（节省内存）：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span>:</span></span><br><span class="line">    __slots__ = (<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;age&#x27;</span>)</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">xm = Student()</span><br><span class="line">xm.name = <span class="string">&#x27;小明&#x27;</span>  <span class="comment"># 动态添加实例属性</span></span><br><span class="line">xm.age = <span class="number">19</span></span><br><span class="line">print(xm.__dict__)  <span class="comment"># dict默认存放所有属性及其值</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/10/2d16c826e1ce11620bcccd56f325b1c3.png" width="80%"/></li></ol><h2 id="继承关系"><a href="#继承关系" class="headerlink" title="继承关系"></a>继承关系</h2><p>案例1：父类限制属性（name，age），子类不限制，验证slots的限制不可继承</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span>:</span>  <span class="comment"># 父类</span></span><br><span class="line">    __slots__ = (<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;age&#x27;</span>)  <span class="comment"># 限制属性</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Computer</span>(<span class="params">Student</span>):</span>  <span class="comment"># 子类继承Student类</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">lm = Computer()</span><br><span class="line">lm.sex = <span class="string">&#x27;男&#x27;</span>  <span class="comment"># 动态定义实例属性（该属性不在父类slots限制中）</span></span><br><span class="line">print(lm.sex)  <span class="comment"># 输出实例属性的内容</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/10/3e1fcab1e7d96123ce3a35f4525f8591.png" width="80%"/><p>案例2：父类限制属性（name，age），子类限制属性（sex），验证slots的限制为其并集（父类+子类）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span>:</span>  <span class="comment"># 父类</span></span><br><span class="line">    __slots__ = (<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;age&#x27;</span>)  <span class="comment"># 父类限制属性</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Computer</span>(<span class="params">Student</span>):</span>  <span class="comment"># 子类继承Student类</span></span><br><span class="line">    __slots__ = (<span class="string">&#x27;sex&#x27;</span>)  <span class="comment"># 子类限制属性</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">lm = Computer()</span><br><span class="line">lm.name = <span class="string">&#x27;李明&#x27;</span>  <span class="comment"># 父类限制</span></span><br><span class="line">lm.age = <span class="number">18</span>  <span class="comment"># 父类限制</span></span><br><span class="line">lm.sex = <span class="string">&#x27;男&#x27;</span>  <span class="comment"># 子类限制</span></span><br><span class="line">print(<span class="string">&#x27;我叫【&#123;&#125;】，是个【&#123;&#125;】孩子，今年【&#123;&#125;】岁了！&#x27;</span>.<span class="built_in">format</span>(lm.name, lm.sex, lm.age))  <span class="comment"># 输出实例属性的内容</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/10/6db87614affae9b29dd0de029249f6e1.png" width="80%"/><p>总结：</p><ul><li>若子类无slots方法，则不继承slots</li><li>若子类有slots方法，slots的限制为其并集（父类+子类）</li></ul><hr><p>不足之处，欢迎留言，会及时回复，及时更正！</p><p>创作不易，感谢支持！</p>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Day08 面向对象基础（中）</title>
      <link href="26896.html"/>
      <url>26896.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>本文章最初发布在 <a href="https://plushine.cn">XJHui’s Blog</a>，未经允许，任何人禁止转载！</p><p><font color="red" style="font-weight:700">注意：</font>最新修改版本已发布在 <a href="https://plushine.cn/26896.html">这里</a>，点击前往查看！</p><h1 id="析构方法"><a href="#析构方法" class="headerlink" title="析构方法"></a>析构方法</h1><blockquote><p>当一个对象被删除或者被销毁时，python解释器默认会调用一个_<em>del_</em>()方法也叫析构方法。</p></blockquote><h2 id="方法特点"><a href="#方法特点" class="headerlink" title="方法特点"></a>方法特点</h2><ol><li>_<em>del_</em>()方法是一个魔术方法</li><li>程序运行结束会释放所有内存，就是通过调用del方法实现的</li><li>在程序中删除一个对象也会调用del方法</li></ol><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><ol><li><p>情况一：程序结束，解释器自动调用del方法释放内存：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Animal</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, name</span>):</span></span><br><span class="line">        self.name = name</span><br><span class="line">        print(<span class="string">&#x27;对象【&#123;&#125;】已经创建！&#x27;</span>.<span class="built_in">format</span>(self.name))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__del__</span>(<span class="params">self</span>):</span></span><br><span class="line">        print(<span class="string">&#x27;正在回收内存，对象【&#123;&#125;】已被删除！&#x27;</span>.<span class="built_in">format</span>(self.name))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cat = Animal(<span class="string">&#x27;小花猫&#x27;</span>)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/01/497829b9265a5862592d914bdf5942e0.png" width="80%"/></li><li><p>情况二：程序中存在主动删除对象的内容：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Animal</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, name</span>):</span></span><br><span class="line">        self.name = name</span><br><span class="line">        print(<span class="string">&#x27;对象【&#123;&#125;】已经创建！&#x27;</span>.<span class="built_in">format</span>(self.name))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__del__</span>(<span class="params">self</span>):</span></span><br><span class="line">        print(<span class="string">&#x27;正在回收内存，对象【&#123;&#125;】已被删除！&#x27;</span>.<span class="built_in">format</span>(self.name))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cat = Animal(<span class="string">&#x27;小花猫&#x27;</span>)</span><br><span class="line"><span class="keyword">del</span> cat</span><br><span class="line">inPut = <span class="built_in">input</span>(<span class="string">&#x27;程序等待中...&#x27;</span>)  <span class="comment"># 让程序一直运行避免与1相矛盾</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/01/ca9329d02fa552672b9e7bb8bb7aec4f.png" width="80%"/></li></ol><h1 id="OOP三大特征"><a href="#OOP三大特征" class="headerlink" title="OOP三大特征"></a>OOP三大特征</h1><ul><li><p>封装</p></li><li><p>继承</p></li><li><p>多态</p></li></ul><h1 id="封装"><a href="#封装" class="headerlink" title="封装"></a>封装</h1><ul><li><p>定义：把内容封装到某个地方，便于以后使用</p></li><li><p>使用：通过初始化方法（init）将内容封装到对象中，然后通过对象直接获取或通过self获取</p></li></ul><h1 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h1><h2 id="单继承"><a href="#单继承" class="headerlink" title="单继承"></a>单继承</h2><ol><li><p>定义：子类可以继承父类的内容【属性和方法】（父类有的子类都有，但子类有的父类不一定有）</p></li><li><p>案例：创建两个对象，其方法分别如下：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/01/08b8d8456bf30a6d179a5655c58e4865.png" width="100%"/><p>思路1：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cat</span>:</span></span><br><span class="line">    喵喵叫</span><br><span class="line">    吃</span><br><span class="line">    喝</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dog</span>:</span></span><br><span class="line">    汪汪叫</span><br><span class="line">    吃</span><br><span class="line">    喝</span><br><span class="line">cat = Cat()</span><br><span class="line">dog = Dog()</span><br></pre></td></tr></table></figure><p>思路2：共有方法放在同一个类中</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Animal</span>:</span></span><br><span class="line">    吃</span><br><span class="line">    喝</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cat</span>(<span class="params">Animal</span>):</span>  <span class="comment"># 继承动物类</span></span><br><span class="line">    喵喵叫</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dog</span>(<span class="params">Animal</span>):</span>  <span class="comment"># 继承动物类</span></span><br><span class="line">    汪汪叫</span><br><span class="line">cat = Cat()</span><br><span class="line">dog = Dog()</span><br></pre></td></tr></table></figure><p>注意：比较上面两种思路，2nd代码更简洁，这也是继承的优点</p></li><li><p>单继承子类语法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> 子类名(<span class="params">父类名</span>):</span>  <span class="comment"># 子类继承父类</span></span><br><span class="line">    代码块</span><br></pre></td></tr></table></figure></li><li><p>总结：</p><ul><li>将多个类中共有的方法、属性提取到【父类】中，而特有的方法在各自类【子类】中。</li><li>继承可以极大地提高代码效率，避免代码过度冗余</li></ul></li></ol><h2 id="多继承"><a href="#多继承" class="headerlink" title="多继承"></a>多继承</h2><blockquote><p>继承单个父类称为单继承，继承多个父类就是多继承</p></blockquote><ol><li><p>多继承子类语法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> 子类名(<span class="params">父类<span class="number">1</span>名, 父类<span class="number">2</span>名 ...</span>):</span>  <span class="comment"># 子类继承父类，多个父类之间使用逗号分隔</span></span><br><span class="line">    代码块</span><br></pre></td></tr></table></figure></li><li><p>案例：创建孙悟空【类】其继承自神仙【类】和猴子【类】，并为其实例化一个对象</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Shenxian</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">fly</span>(<span class="params">self</span>):</span></span><br><span class="line">        print(<span class="string">&#x27;神仙会飞！&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Monky</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">chitao</span>(<span class="params">self</span>):</span></span><br><span class="line">        print(<span class="string">&#x27;猴子喜欢吃桃！&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Sunwukong</span>(<span class="params">Shenxian, Monky</span>):</span>  <span class="comment"># 多继承中多个父类之间使用逗号分隔</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, name</span>):</span></span><br><span class="line">        self.name = name</span><br><span class="line">        print(<span class="string">&#x27;创建【&#123;&#125;】对象成功！&#x27;</span>.<span class="built_in">format</span>(self.name))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">swk = Sunwukong(<span class="string">&#x27;孙悟空&#x27;</span>)</span><br><span class="line">swk.fly()  <span class="comment"># 调用Shenxian【类】的方法</span></span><br><span class="line">swk.chitao()  <span class="comment"># 调用Monky【类】的方法</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/02/f6ff5b208268a833d3a3d1c9faca2763.png" width="80%"/></li><li><p>调试时输出异常：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/02/cbf9038acf4b14ede9f60977301faa37.png" width="80%"/><p>本以为是python版本的原因才会与老师的输出结果不同，直到百度到下面这句话：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/02/30d332a73b87f8420b152d591d5b5906.png" width="80%"/><p>再看一眼我代码：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/05/ab370025b6425d065607d8c9f2dbb75b.png" width="80%"/><p>总结，感谢 <a href="https://www.cnblogs.com/rayshaw/p/8531506.html">rayshaw13</a>：</p><ul><li>当方法中已经使用了print，调用时不要再次使用，否则会多输出一个None</li><li>若必须使用print，那也可以在方法中使用return来避免多输出内容</li></ul></li></ol><h2 id="同名方法"><a href="#同名方法" class="headerlink" title="同名方法"></a>同名方法</h2><blockquote><p>当多个父类中存在相同的方法的时候，应该调用哪一个？</p></blockquote><ol><li><p>案例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">D</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">eat</span>(<span class="params">self</span>):</span></span><br><span class="line">        print(<span class="string">&#x27;D.eat()&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C</span>(<span class="params">D</span>):</span>  <span class="comment"># C【类】继承D【类】</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">eat</span>(<span class="params">self</span>):</span></span><br><span class="line">        print(<span class="string">&#x27;C.eat()&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span>(<span class="params">D</span>):</span>  <span class="comment"># B【类】继承D【类】</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span>(<span class="params">B, C</span>):</span>  <span class="comment"># A【类】继承B【类】、C【类】</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">a = A()  <span class="comment"># 创建A类的实例对象</span></span><br><span class="line">a.eat()  <span class="comment"># 调用a的eat方法，判断该eat方法属于谁</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/02/759acbee66670edb7fcb1eee0a84e8d5.png" width="80%"/><p>根据上例可知，其符合【广度优先遍历】的原则：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/05/f979788d0f6461cb6336506fea07f49c.png" width="80%"/></li><li><p>__mro__方法：</p><blockquote><p>查看类的继承顺序（优先级）</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(A.mro())  <span class="comment"># 注意是A.mro()【A类】 而不是实例对象a</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/02/20a1de8ce737a07ac810c55edf135612.png" width="80%"/><p>总结：将此顺序与1st中的【最终顺序】比较可知是一致的。</p></li></ol><h2 id="继承的传递"><a href="#继承的传递" class="headerlink" title="继承的传递"></a>继承的传递</h2><blockquote><p>子类继承父类，孙子类继承子类，孙子类可调用【父类】的方法</p></blockquote><ol><li><p>案例：判断下面程序能否正常输出：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">D</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">eat</span>(<span class="params">self</span>):</span></span><br><span class="line">        print(<span class="string">&#x27;D.eat()&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C</span>(<span class="params">D</span>):</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span>(<span class="params">C</span>):</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">a = A()</span><br><span class="line">a.eat()</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/02/3609eca54a894afc6c7bfbc3b8a55221.png" width="80%"/></li><li><p>使用mro方法查看类的继承顺序：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(A.mro())</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/02/a27183e665588de9e2bd9e67dfddfaec.png" width="80%"/></li><li><p>总结：可以使用任意祖先【类】的方法。</p></li></ol><h2 id="重写方法"><a href="#重写方法" class="headerlink" title="重写方法"></a>重写方法</h2><ol><li><p>是什么？</p><p>在子类中有一个和父类相同名字的方法，子类中的方法会覆盖掉父类中的方法。</p></li><li><p>为什么？</p><p>父类的方法已经不能满足子类的需要，那么子类可以重写父类或者完善父类中的方法。</p></li><li><p>案例1：创建Keji【类】继承自父类Dog【类】，并重写父类Bark方法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dog</span>:</span>  <span class="comment"># 父类Dog【类】</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">Bark</span>(<span class="params">self</span>):</span>  <span class="comment"># 父类方法</span></span><br><span class="line">        print(<span class="string">&#x27;汪汪汪...&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Keji</span>(<span class="params">Dog</span>):</span>  <span class="comment"># 子类Keji【类】，继承父类Dog【类】</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">Bark</span>(<span class="params">self</span>):</span>  <span class="comment"># 重写父类方法</span></span><br><span class="line">        print(<span class="string">&#x27;嗷嗷嗷...&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">kj = Keji()  <span class="comment"># 创建实例对象</span></span><br><span class="line">kj.Bark()  <span class="comment"># 调用之类中法重写后的Bark方法</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/02/4d88cc44acf23ab371dc5a53b42cdd3b.png" width="80%"/></li><li><p>案例2：在父类方法基础上进行修改，以在init中添加实例属性为例</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dog</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, name, color</span>):</span>  <span class="comment"># 父类方法中原有2个参数 </span></span><br><span class="line">        self.name = name</span><br><span class="line">        self.color = color</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Keji</span>(<span class="params">Dog</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, name, color, height</span>):</span>  <span class="comment"># 在父类方法的基础上填加1个新的参数</span></span><br><span class="line">        <span class="built_in">super</span>().__init__(name, color)  <span class="comment"># 自动找到父类中的init方法，法1</span></span><br><span class="line">        <span class="comment"># 法2：Dog.__init__(self, name, color)  注意self不能省略</span></span><br><span class="line">        self.height = height</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;【&#123;&#125;】 的颜色是：&#123;&#125; 身高是：&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(self.name, self.color, self.height)</span><br><span class="line"></span><br><span class="line">kj = Keji(<span class="string">&#x27;路由器&#x27;</span>, <span class="string">&#x27;black&#x27;</span>, <span class="string">&#x27;10&#x27;</span>)</span><br><span class="line">print(kj)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/02/6e04b544f430645afae29dffcc73148f.png" width="80%"/></li><li><p>案例3：在父类方法基础上进行修改，以普通方法为例</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dog</span>:</span>  <span class="comment"># 父类Dog【类】</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, name, color</span>):</span></span><br><span class="line">        self.name = name</span><br><span class="line">        self.color = color</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">Bark</span>(<span class="params">self</span>):</span>  <span class="comment"># 父类方法</span></span><br><span class="line">        print(<span class="string">&#x27;汪汪汪...&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Keji</span>(<span class="params">Dog</span>):</span>  <span class="comment"># 子类Keji【类】，继承父类Dog【类】</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, name, color, height</span>):</span></span><br><span class="line">        <span class="built_in">super</span>().__init__(name, color)</span><br><span class="line">        <span class="comment"># Dog.__init__(self, name, color)</span></span><br><span class="line">        self.height = height</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;【&#123;&#125;】 的颜色是：&#123;&#125; 身高是：&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(self.name, self.color, self.height)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">Bark</span>(<span class="params">self</span>):</span>  <span class="comment"># 重写父类方法</span></span><br><span class="line">        <span class="built_in">super</span>().Bark()</span><br><span class="line">        print(<span class="string">&#x27;嗷嗷嗷...&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">kj = Keji(<span class="string">&#x27;路由器&#x27;</span>, <span class="string">&#x27;black&#x27;</span>, <span class="string">&#x27;10&#x27;</span>)  <span class="comment"># 创建实例对象</span></span><br><span class="line">print(kj)</span><br><span class="line">kj.Bark()</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/02/b00c529d04acf76a27cd44cebea81a91.png" width="80%"/></li></ol><h1 id="类、实例属性"><a href="#类、实例属性" class="headerlink" title="类、实例属性"></a>类、实例属性</h1><h2 id="创建和使用"><a href="#创建和使用" class="headerlink" title="创建和使用"></a>创建和使用</h2><ol><li><p>类属性：就是类对象所拥有的属性，它被所有类对象的实例对象所共有，类对象和实例对象均可以访问</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span>:</span></span><br><span class="line">    name = <span class="string">&#x27;路由&#x27;</span>  <span class="comment"># 类属性</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">test = Test()  <span class="comment"># 创建实例变量</span></span><br><span class="line">print(test.name)  <span class="comment"># 通过实例变量访问类属性</span></span><br><span class="line">print(Test.name)  <span class="comment"># 通过类变量访问类属性</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/05/306db1a8bb12113eb21ce339ff0e152f.png" width="80%"/></li><li><p>实例属性：实例对象所拥有的属性，只能通过实例对象访问</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span>:</span></span><br><span class="line">    name = <span class="string">&#x27;路由&#x27;</span>  <span class="comment"># 类属性</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, age</span>):</span>  <span class="comment"># 使用init方法定义实例属性</span></span><br><span class="line">        self.age = age</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">test = Test(<span class="number">10</span>)  <span class="comment"># 创建实例变量</span></span><br><span class="line">print(test.age)  <span class="comment"># 通过实例变量访问实例属性</span></span><br><span class="line">print(Test.age)  <span class="comment"># 通过类变量访问实例属性（错误）</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/05/abc9aa05072272230522243627dba9d2.png" width="80%"/></li></ol><h2 id="属性的修改"><a href="#属性的修改" class="headerlink" title="属性的修改"></a>属性的修改</h2><ol><li><p>类属性的修改：</p><ul><li><p>错误方法：通过实例对象修改类属性</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span>:</span></span><br><span class="line">    name = <span class="string">&#x27;路由&#x27;</span>  <span class="comment"># 类属性</span></span><br><span class="line"></span><br><span class="line">test = Test()  <span class="comment"># 创建实例对象</span></span><br><span class="line">print(test.name)  <span class="comment"># 打印类属性</span></span><br><span class="line">test.name = <span class="string">&#x27;湘湘&#x27;</span>  <span class="comment"># 通过实例对象修改类属性</span></span><br><span class="line">print(Test.name)  <span class="comment"># 再次打印类属性</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/05/fb644c0737266cf86d9743b88d6398e5.png" width="80%"/><p>注意：根据运行结果可知，通过实例对象修改类属性是行不通的，上面的做法只是新创建了一个实例属性。</p></li><li><p>正确方法：通过类对象修改类属性</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span>:</span></span><br><span class="line">    name = <span class="string">&#x27;路由&#x27;</span>  <span class="comment"># 类属性</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">test = Test()  <span class="comment"># 创建实例对象</span></span><br><span class="line">print(test.name)  <span class="comment"># 打印类属性</span></span><br><span class="line">Test.name = <span class="string">&#x27;湘湘&#x27;</span>  <span class="comment"># 通过实例对象修改类属性的值</span></span><br><span class="line">print(Test.name)  <span class="comment"># 再次打印类属性</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/05/6c64cd814becd7adc41b551f01c5cf39.png" width="80%"/></li><li><p>总结：实例对象只拥有类属性的使用权，而修改权归类对象所有。</p></li></ul></li><li><p>实例属性的修改：</p><blockquote><p>实例属性只能通过实例对象访问，修改肯定也只能通过实例对象修改</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span>:</span></span><br><span class="line">    name = <span class="string">&#x27;路由&#x27;</span>  <span class="comment"># 类属性</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, age</span>):</span></span><br><span class="line">        self.age = age  <span class="comment"># 实例属性</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">test = Test(<span class="number">2</span>)  <span class="comment"># 创建实例对象</span></span><br><span class="line">print(test.age)  <span class="comment"># 打印实例属性</span></span><br><span class="line">test.age = <span class="number">2.5</span></span><br><span class="line">print(test.age)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/05/c1fc2d2d2f099a67b51545f5dacd305e.png" width="80%"/></li></ol><h1 id="类、静态方法"><a href="#类、静态方法" class="headerlink" title="类、静态方法"></a>类、静态方法</h1><h2 id="类方法"><a href="#类方法" class="headerlink" title="类方法"></a>类方法</h2><ol><li><p>区别实例方法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">People</span>:</span></span><br><span class="line">    name = <span class="string">&#x27;湘湘&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 实例方法</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">printData</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> self.name</span><br><span class="line"> </span><br><span class="line">    <span class="comment"># 实例方法</span></span><br><span class="line"><span class="meta">    @classmethod  # 区别1：类方法前面需要添加@classmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">printData</span>(<span class="params">cls</span>):</span>  <span class="comment"># 区别2：类方法，默认参数为cls（可修改但不可省略）</span></span><br><span class="line">        <span class="keyword">return</span> cls.name</span><br></pre></td></tr></table></figure></li><li><p>创建、使用：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">People</span>:</span></span><br><span class="line">    name = <span class="string">&#x27;湘湘&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">printData</span>(<span class="params">cls</span>):</span></span><br><span class="line">        <span class="keyword">return</span> cls.name  <span class="comment"># 返回类属性</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(People.printData())  <span class="comment"># 通过类对象调用类方法</span></span><br><span class="line">p1 = People()</span><br><span class="line">print(p1.printData())  <span class="comment"># 通过实例对象调用类方法</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/05/41ba8c6d5927413933082ba7b9b965b2.png" width="80%"/></li><li><p>使用类方法修改类属性：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">People</span>:</span></span><br><span class="line">    name = <span class="string">&#x27;湘湘&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">printData</span>(<span class="params">cls</span>):</span></span><br><span class="line">        <span class="keyword">return</span> cls.name  <span class="comment"># 返回类属性</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">changName</span>(<span class="params">cls, data</span>):</span></span><br><span class="line">        cls.name = data  <span class="comment"># 通过类对象修改类属性</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(People.printData())</span><br><span class="line">People.changName(<span class="string">&#x27;路由&#x27;</span>)</span><br><span class="line">print(People.printData())</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/05/f80f039b72b2f5b2cc19a2b8e7ec8083.png" width="80%"/></li></ol><h2 id="静态方法"><a href="#静态方法" class="headerlink" title="静态方法"></a>静态方法</h2><ol><li><p>区别实例方法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">People</span>:</span></span><br><span class="line">    name = <span class="string">&#x27;湘湘&#x27;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 实例方法</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">printData</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> self.name</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 静态方法</span></span><br><span class="line"><span class="meta">    @staticmethod  # 区别1：静态方法前面需要添加@staticmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getdata</span>():</span>  <span class="comment"># 区别2：静态方法无默认参数</span></span><br><span class="line">        <span class="keyword">return</span> People.name</span><br></pre></td></tr></table></figure></li><li><p>创建、使用：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">People</span>:</span></span><br><span class="line">    name = <span class="string">&#x27;湘湘&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getdata</span>():</span></span><br><span class="line">        <span class="keyword">return</span> People.name</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(People.getdata())  <span class="comment"># 通过类对象访问静态变量</span></span><br><span class="line">p1 = People()</span><br><span class="line">print(p1.getdata())  <span class="comment"># 通过实例对象访问静态变量</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/05/d0b17a6a4b92db688e662144d3b668c3.png" width="80%"/><p>注意：一般情况下是不会通过实例对象去调用静态方法的。</p></li><li><p>为什么使用静态方法？</p><ul><li>主要用来存放逻辑性的代码，和类以及实例对象没有交互</li><li>因为可以直接通过类对象调用，从而避免了因创建实例对象而消耗的内存和空间</li></ul></li><li><p>案例：返回系统时间</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time  <span class="comment"># 导入第三方的包</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Time</span>:</span>  <span class="comment"># 时间类</span></span><br><span class="line"><span class="meta">    @staticmethod  # 返回当前时间的静态方法</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getTime</span>():</span></span><br><span class="line">        <span class="keyword">return</span> time.strftime(<span class="string">&#x27;%H:%M:%S&#x27;</span>, time.localtime())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(Time.getTime())  <span class="comment"># 通过类变量调用静态方法</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/05/46150628921e2b5c9c0bf9c6bef6dee3.png" width="80%"/><h2 id="实例、类、静态方法"><a href="#实例、类、静态方法" class="headerlink" title="实例、类、静态方法"></a>实例、类、静态方法</h2><ul><li>实例方法：第一个参数是self（默认，可修改但不可省略），通过self可引用类属性或实例属性。若同时存在类属性和实例属性，实例属性优先级更高。</li><li>类方法：第一个参数是cls（默认，可修改但不可省略），通过cls可引用类对象的属性和方法。</li><li>静态方法：无默认参数，使用时必须通过类对象调用。</li></ul></li></ol><h1 id="多态"><a href="#多态" class="headerlink" title="多态"></a>多态</h1><h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><ol><li><p>含义：</p><p>定义时的类型和使用时的类型不一样，此时就成为多态【同一种行为对于不同的子类对象有不同的行为表现】。</p></li><li><p>必须要遵守的条件：</p><ul><li>继承：多态必须发生在子类和父类之间</li><li>重写：子类重写父类的方法</li></ul></li></ol><h2 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h2><ol><li><p>案例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Animal</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">showData</span>(<span class="params">self</span>):</span></span><br><span class="line">        print(<span class="string">&#x27;这是个动物类！&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Duck</span>(<span class="params">Animal</span>):</span>  <span class="comment"># 有继承</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">showData</span>(<span class="params">self</span>):</span>  <span class="comment"># 有重写</span></span><br><span class="line">        print(<span class="string">&#x27;这是个鸭子类！&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">duck = Duck()</span><br><span class="line">duck.showData()</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/06/6ace88bbe10286f34e4e7d4995c98537.png" width="80%"/><p>总结：有继承和重写就是多态【个人看法】</p></li><li><p>优点：</p><ul><li>增加程序的灵活性</li><li>增加程序的拓展性</li></ul></li></ol><h2 id="鸭子类型"><a href="#鸭子类型" class="headerlink" title="鸭子类型"></a>鸭子类型</h2><blockquote><p>当看到一只鸟，走起路来像鸭子，游起泳来像鸭子，叫起来像鸭子，那么就可以把这只鸟承做鸭子。</p></blockquote><ol><li><p>案例（本案例与多态无关）：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Animal</span>:</span>  <span class="comment"># 动物类</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">showData</span>(<span class="params">self</span>):</span></span><br><span class="line">        print(<span class="string">&#x27;这是个动物类！&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">People</span>:</span>  <span class="comment"># 人类</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">showData</span>(<span class="params">self</span>):</span></span><br><span class="line">        print(<span class="string">&#x27;这是个人类！&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Func</span>(<span class="params">obj</span>):</span>  <span class="comment"># 调用传入对象的showData方法</span></span><br><span class="line">    obj.showData()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">listA = [Animal(), People()]  <span class="comment"># 创建两个实例对象</span></span><br><span class="line"><span class="keyword">for</span> obj <span class="keyword">in</span> listA:  <span class="comment"># 枚举列表中的每个实例对象</span></span><br><span class="line">    Func(obj)  <span class="comment"># 将枚举的对象作为参数传入Func函数中</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/06/38da6b01d3be4cf57999d47ee860b17a.png" width="80%"/></li><li><p>总结：上面案例中obj就是鸭子类型的参数，因为无论该参数是哪个对象的实例只要其包含showData方法，就能成功调用。</p></li></ol><hr><p>不足之处，欢迎留言，会及时回复，及时更正！</p><p>创作不易，感谢支持！</p>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Day07 面向对象基础（上）</title>
      <link href="64309.html"/>
      <url>64309.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>本文章最初发布在 <a href="https://plushine.cn">XJHui’s Blog</a>，未经允许，任何人禁止转载！</p><p><font color="red" style="font-weight:700">注意：</font>最新修改版本已发布在 <a href="https://plushine.cn/64309.html">这里</a>，点击前往查看！</p><h1 id="编程思想"><a href="#编程思想" class="headerlink" title="编程思想"></a>编程思想</h1><ol><li>面向过程：根据业务逻辑从上到下写代码</li><li>函数式：封装到函数中便于以后调用，对比面向过程减少了代码量</li><li>面向对象（oop）：采用对象的概念建立模型</li></ol><h1 id="类和类的对象"><a href="#类和类的对象" class="headerlink" title="类和类的对象"></a>类和类的对象</h1><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><ol><li>类：是具有一组相同特征【属性】和行为【方法】的对象集合</li><li>对象：是实实在在的东西，也是类的实例化，具体化</li></ol><h2 id="关系"><a href="#关系" class="headerlink" title="关系"></a>关系</h2><p>类是对象的抽象化，对象是类的一个实例</p><h2 id="类的抽象"><a href="#类的抽象" class="headerlink" title="类的抽象"></a>类的抽象</h2><blockquote><p>案例1：小明开着宝马车去逛街</p></blockquote><ul><li>小明 -&gt; 人【类】<ul><li>类名：人</li><li>属性：年龄、身高等</li><li>方法：吃饭、睡觉等</li></ul></li><li>宝马车 -&gt; 车【类】<ul><li>类名：车</li><li>属性：颜色、排量等</li><li>方法：前进、倒车、加速等</li></ul></li></ul><blockquote><p>案例2：坦克大战中的类</p></blockquote><ul><li>坦克【类】<ul><li>类名：坦克</li><li>属性：血量</li><li>方法：发射子弹、移动等</li></ul></li><li>墙【类】<ul><li>类名：墙</li><li>属性：血量、类型</li><li>行为：阻挡</li></ul></li><li>子弹【类】<ul><li>类名：子弹</li><li>属性：威力</li><li>行为：移动</li></ul></li></ul><h1 id="定义类、创建对象"><a href="#定义类、创建对象" class="headerlink" title="定义类、创建对象"></a>定义类、创建对象</h1><h2 id="定义类"><a href="#定义类" class="headerlink" title="定义类"></a>定义类</h2><ol><li><p>格式</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> 类名:</span> <span class="comment"># 注意：类名使用大驼峰命名法（首字母大写），可以不加括号，后面会详细写</span></span><br><span class="line">属性</span><br><span class="line">方法 <span class="comment">#属性、方法的个数非定值，根据具体情况确定</span></span><br></pre></td></tr></table></figure></li><li><p>案例：定义人【类】</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>:</span> <span class="comment"># 类名</span></span><br><span class="line">    name = <span class="string">&#x27;小张&#x27;</span> <span class="comment"># 属性</span></span><br><span class="line">    age = <span class="number">18</span></span><br><span class="line">    pos = <span class="string">&#x27;山东省&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">eat</span>(<span class="params">self</span>):</span>  <span class="comment"># 方法</span></span><br><span class="line">        print(<span class="string">&#x27;在吃饭呢！&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span>(<span class="params">self</span>):</span></span><br><span class="line">        print(<span class="string">&#x27;在跑步呢！&#x27;</span>)</span><br></pre></td></tr></table></figure></li></ol><h2 id="创建对象"><a href="#创建对象" class="headerlink" title="创建对象"></a>创建对象</h2><ol><li><p>格式：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">对象名 = 类名()</span><br></pre></td></tr></table></figure></li><li><p>案例：创建一个人【类】的对象</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">perA = Person()</span><br></pre></td></tr></table></figure><ul><li><p>使用（pycharm工具下）：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/30/4f4239993b51eda3d6a9a489a4f6aca9.png" width="80%"/></li><li><p>调用类方法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">perA.eat()  <span class="comment"># 调用Person类中的eat方法</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/30/474555b7de65effc5acccbba6b3d0284.png" width="80%"/></li><li><p>打印类属性：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">&quot;&#123;&#125;的年龄是：&#123;&#125;，住在：&#123;&#125;&quot;</span>.<span class="built_in">format</span>(perA.name, perA.age, perA.pos))  <span class="comment"># 输出类属性的值</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/30/5988faa46e1a2e2771271eb790e0a99d.png" width="80%"/></li></ul></li></ol><h1 id="实例方法、属性"><a href="#实例方法、属性" class="headerlink" title="实例方法、属性"></a>实例方法、属性</h1><h2 id="区别普通方法"><a href="#区别普通方法" class="headerlink" title="区别普通方法"></a>区别普通方法</h2><ol><li><p>普通方法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Func</span>():</span>  <span class="comment"># 普通方法</span></span><br><span class="line">    print(<span class="string">&#x27;这是普通方法！&#x27;</span>)</span><br></pre></td></tr></table></figure></li><li><p>实例方法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>:</span></span><br><span class="line">    name = <span class="string">&#x27;小张&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">eat</span>(<span class="params">self</span>):</span>  <span class="comment"># 实例方法，定义在class中且有默认的参数self</span></span><br><span class="line">        print(<span class="string">&#x27;在吃饭呢！&#x27;</span>)</span><br></pre></td></tr></table></figure></li><li><p>总结：</p><ul><li>【相同点】均使用def关键字定义</li><li>普通方法在class外部，实例方法在内部</li><li>实例方法默认参数为self可更改但不可省略</li><li>实例方法归属实例对象</li></ul></li></ol><h2 id="区别类属性"><a href="#区别类属性" class="headerlink" title="区别类属性"></a>区别类属性</h2><ol><li><p>类属性：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>:</span></span><br><span class="line">    name = <span class="string">&#x27;小张&#x27;</span>  <span class="comment"># 类属性</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">eat</span>(<span class="params">self</span>):</span></span><br><span class="line">        print(<span class="string">&#x27;在吃饭呢！&#x27;</span>)</span><br></pre></td></tr></table></figure></li><li><p>实例属性：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>:</span></span><br><span class="line">    name = <span class="string">&#x27;小张&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">eat</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.color = <span class="string">&#x27;yellow&#x27;</span>  <span class="comment"># 实例属性，注意要用self引用</span></span><br><span class="line">        print(<span class="string">&#x27;皮肤颜色为&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(self.color))</span><br></pre></td></tr></table></figure></li><li><p>总结：</p><ul><li>都是定义在class内部</li><li>定义在实例方法里面的是实例属性，定义在实例方法外面的是类属性</li><li>定义实例属性时要用self引用（self.变量名，具体看2nd）</li></ul></li></ol><h1 id="init-方法"><a href="#init-方法" class="headerlink" title="__init__方法"></a>__init__方法</h1><h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><ul><li>python自带的内置函数具有特殊含义，使用双下划线包起来，又称【魔术方法】</li><li>是初始化方法，用来【定义实例属性】和【初始化数据】，在创建的时候自动调用（类似java中构造方法）</li><li>利用其【传参机制】可以使对象的创建更加简单、方便</li></ul><h2 id="init的使用"><a href="#init的使用" class="headerlink" title="init的使用"></a>init的使用</h2><ol><li><p>定义实例属性</p><ul><li><p>一般方法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">perB = Person()</span><br><span class="line">perB.age = <span class="number">19</span>  <span class="comment"># 添加实例属性</span></span><br></pre></td></tr></table></figure></li><li><p>__init__：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>:</span></span><br><span class="line">    name = <span class="string">&#x27;小张&#x27;</span>  <span class="comment"># 类属性</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span>  <span class="comment"># 定义实例属性</span></span><br><span class="line">        self.age = <span class="number">19</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">eat</span>(<span class="params">self</span>):</span></span><br><span class="line">        print(<span class="string">&#x27;在吃饭呢！&#x27;</span>)</span><br></pre></td></tr></table></figure></li><li><p>总结：</p><ul><li>可以在创建对象后使用【类名.实例属性名】</li><li>也可以在 _<em>init_</em> 方法中使用【self.实例变量名】来定义实例属性</li></ul></li></ul></li><li><p>初始化数据</p><blockquote><p>可以用来初始化类属性的值</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>:</span></span><br><span class="line">    name = <span class="string">&#x27;&#x27;</span>  <span class="comment"># 类属性</span></span><br><span class="line">    age = <span class="number">0</span></span><br><span class="line">    pos = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span>  <span class="comment"># 定义实例属性</span></span><br><span class="line">        self.name = <span class="string">&#x27;小李&#x27;</span></span><br><span class="line">        self.age = <span class="number">20</span></span><br><span class="line">        self.pos = <span class="string">&#x27;河南省&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">perB = Person()</span><br><span class="line">print(perB.age)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/30/238efa33d8188b9cabe89d9906eb255b.png" width="80%"/></li><li><p>传参机制</p><blockquote><p>通过传参实现在创建对象时给类属性赋值</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>:</span></span><br><span class="line">    name = <span class="string">&#x27;小李&#x27;</span>  <span class="comment"># 类属性</span></span><br><span class="line">    age = <span class="number">20</span></span><br><span class="line">    pos = <span class="string">&#x27;河南省&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, name, age, pos</span>):</span>  <span class="comment"># 传参数</span></span><br><span class="line">        self.name = name</span><br><span class="line">        self.age = age</span><br><span class="line">        self.pos = pos</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">perB = Person(<span class="string">&#x27;小张&#x27;</span>, <span class="number">17</span>, <span class="string">&#x27;北京市&#x27;</span>)  <span class="comment"># 创建对象时将数据作为参数传递</span></span><br><span class="line">print(<span class="string">&#x27;&#123;&#125;的年龄是：&#123;&#125;，住在：&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(perB.name, perB.age, perB.pos))</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/30/3a4271db4bb04fd9d1cbfe3b693a68c3.png" width="80%"/></li></ol><h1 id="理解self"><a href="#理解self" class="headerlink" title="理解self"></a>理解self</h1><blockquote><p>实例方法都有一个默认参数self，其名称可更改</p></blockquote><h2 id="相关概念"><a href="#相关概念" class="headerlink" title="相关概念"></a>相关概念</h2><ul><li>self和实例对象指向同一个内存地址</li><li>self只有在定义实例方法的时候才有意义</li></ul><h2 id="实例对象传参"><a href="#实例对象传参" class="headerlink" title="实例对象传参"></a>实例对象传参</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>:</span></span><br><span class="line">    name = <span class="string">&#x27;小李&#x27;</span>  <span class="comment"># 类属性</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">showInfo</span>(<span class="params">self, sex</span>):</span></span><br><span class="line">        print(<span class="string">&#x27;&#123;&#125;的性别是：&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(self.name, sex))  <span class="comment"># 注意：使用self引导的是类属性，不加self的是实例方法的参数</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">perB = Person()</span><br><span class="line">perB.showInfo(<span class="string">&#x27;男&#x27;</span>)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/30/f60c49fb46f575d89b223a6cf8e75b1b.png" width="80%"/><h1 id="魔术方法"><a href="#魔术方法" class="headerlink" title="魔术方法"></a>魔术方法</h1><h2 id="str"><a href="#str" class="headerlink" title="_str_"></a>_<em>str_</em></h2><blockquote><p>格式化输出对象信息</p></blockquote><ol><li><p>默认输出对象信息的格式：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>:</span></span><br><span class="line">    name = <span class="string">&#x27;小李&#x27;</span>  <span class="comment"># 类属性</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">eat</span>(<span class="params">self</span>):</span></span><br><span class="line">        print(<span class="string">&#x27;在吃饭呀！&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">perB = Person()</span><br><span class="line">print(perB)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/08/04/9b5af186bae4d149dbc97fb3db79cbbf.png" width="80%"/></li><li><p>使用__str__输出对象信息：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>:</span></span><br><span class="line">    name = <span class="string">&#x27;小李&#x27;</span>  <span class="comment"># 类属性</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;我的名字叫：&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(self.name)  <span class="comment"># 注意要通过return返回要打印的内容</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">eat</span>(<span class="params">self</span>):</span></span><br><span class="line">        print(<span class="string">&#x27;在吃饭呀！&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">perB = Person()</span><br><span class="line">print(perB)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/31/86b919abe79c13c1b2a8594308ba719a.png" width="80%"/></li></ol><h2 id="new"><a href="#new" class="headerlink" title="_new_"></a>_<em>new_</em></h2><blockquote><p>创建实例化对象</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>:</span></span><br><span class="line">    name = <span class="string">&#x27;&#x27;</span>  <span class="comment"># 类属性</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.name = <span class="string">&#x27;小张&#x27;</span></span><br><span class="line">        print(<span class="string">&#x27;执行---init---&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__new__</span>(<span class="params">cls, *args, **kwargs</span>):</span>  <span class="comment"># cls是class的缩写，但不需要人为传参</span></span><br><span class="line">        print(<span class="string">&#x27;执行---new---&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">object</span>.__new__(cls)  <span class="comment"># 一定要有返回值</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">perB = Person()</span><br><span class="line">print(<span class="string">&#x27;我是名字是：&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(perB.name))</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/31/142864fa7af98411be0fa71a7df7f5d8.png" width="80%"/><p>注意：</p><ul><li>new方法是创建实例对象必须要包含的，但若创建对象时不存在new方法，则会使用默认的new方法</li><li>创建实例对象时new方法通过【return】将创建的实例对象返回给init方法，所以【new方法】执行时间是早于【init方法】的</li></ul><h2 id="new和init区别"><a href="#new和init区别" class="headerlink" title="new和init区别"></a>new和init区别</h2><ul><li>new方法：类的实例化方法，使用时要【return】实例对象</li><li>init方法：定义实例属性、类属性的初始化</li><li>new方法执行时间早于init方法</li></ul><h1 id="双人对战游戏"><a href="#双人对战游戏" class="headerlink" title="双人对战游戏"></a>双人对战游戏</h1><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><ol><li><p>有两个人物：西门吹雪、叶孤城</p></li><li><p>属性:</p><ul><li><p>用户名：name</p></li><li><p>血量：hp</p></li></ul></li><li><p>方法：</p><ul><li>tong()：捅对方一刀,对方掉血10滴</li><li>kanren()：砍对方- 刀，对方掉血15滴</li><li>chiyao()：吃一颗药，补血10滴</li></ul></li><li><p>要求：每走一步打印一次人物状态</p></li></ol><h2 id="问题分析"><a href="#问题分析" class="headerlink" title="问题分析"></a>问题分析</h2><ol><li>两个人物可以抽象出一个【玩家类】创建两个【实例对象】</li><li>属性、方法</li><li>通过随机数来确定走哪一步</li></ol><h2 id="游戏代码"><a href="#游戏代码" class="headerlink" title="游戏代码"></a>游戏代码</h2><p>代码在 <a href="https://pasteme.cn/46142">这里</a>，感谢 <a href="https://pasteme.cn/">PasteMe</a>！</p><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/31/c6e9c481b00d90fa8deecbe0ddf8cf4f.png" width="80%"/><hr><p>不足之处，欢迎留言，会及时回复！</p><p>创作不易，感谢支持！</p>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Day06 内置函数</title>
      <link href="26153.html"/>
      <url>26153.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>本文章最初发布在 <a href="https://plushine.cn">XJHui’s Blog</a>，未经允许，任何人禁止转载！</p><p><font color="red" style="font-weight:700">注意：</font>最新修改版本已发布在 <a href="https://plushine.cn/26153.html">这里</a>，点击前往查看！</p><h1 id="内置函数"><a href="#内置函数" class="headerlink" title="内置函数"></a>内置函数</h1><ol><li><p>是什么？</p><p>为便于我们使用，python自带的一些函数（print …）</p></li><li><p>有什么？</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/19/efb260f938cb711be9f81f916fab3825.png" width="50%"/></li></ol><p>注意：更多内容可以到 <a href="https://docs.python.org/3/library/functions.html">这里</a> 查看！</p><h1 id="数学运算"><a href="#数学运算" class="headerlink" title="数学运算"></a>数学运算</h1><ol><li><p>绝对值函数（abs）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="built_in">abs</span>(<span class="number">-10</span>), <span class="built_in">abs</span>(<span class="number">10</span>))</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/19/3544944f19a378be58934a83a0c5bf8f.png" width="80%"/></li><li><p>取近似值（round）</p><ul><li><p>无位数限定：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="built_in">round</span>(<span class="number">3.5</span>))</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/19/b7d120b1895351d54db49d6e7bcaca57.png" width="80%"/><p>注意：无位数限定时默认取整。</p></li><li><p>位数限定：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="built_in">round</span>(<span class="number">3.555</span>, <span class="number">2</span>))</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/19/a22087f72c990061de064e06b5039706.png" width="80%"/></li></ul></li><li><p>求次幂（pow）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="built_in">pow</span>(<span class="number">2</span>, <span class="number">3</span>)) <span class="comment">#方法一</span></span><br><span class="line">print(<span class="number">2</span> ** <span class="number">3</span>) <span class="comment">#放法二</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/19/af2a3b3cf78b0d9f4fefb4c501abe5cf.png" width="80%"/></li><li><p>求最大、小值（max、min）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="built_in">max</span>([<span class="number">10</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">5</span>])) <span class="comment">#从单个列表中选出最大值</span></span><br><span class="line">print(<span class="built_in">max</span>(<span class="number">10</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">5</span>)) <span class="comment">#从多个数中选出最大值</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/19/aae0f6a9a0237226412c8dee453f2e16.png" width="80%"/><p>如果是多个列表怎么比较？</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="built_in">max</span>([<span class="number">10</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">5</span>], [<span class="number">10</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">5</span>])) <span class="comment">#min同理</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/27/1810b7aa226f8898ab7d7c35924fa4ee.png" width="80%"/><p>说明：多个列表如何比较？</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/19/f7837bc93241ba491ad0cc10c1c7b578.png" width="80%"/></li><li><p>求和（sum）</p><ul><li><p>多值、可迭代对象：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="built_in">sum</span>(<span class="built_in">range</span>(<span class="number">4</span>)))</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/19/8fd52e6d0c4840318d0ed0e9f0e03d86.png" width="80%"/></li><li><p>设置参数：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="built_in">sum</span>(<span class="built_in">range</span>(<span class="number">4</span>), <span class="number">4</span>)) <span class="comment">#先求和再与参数相加</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/19/07dc6703f1b00da099e77425d4ac8ca7.png" width="80%"/></li></ul></li><li><p>eval函数</p><p>不做讲解，点击 <a href="https://blog.csdn.net/liuchunming033/article/details/87643041">这里</a> 查看详细说明</p></li></ol><h1 id="类型转换"><a href="#类型转换" class="headerlink" title="类型转换"></a>类型转换</h1><ol><li><p>int()、float()、str()</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">strA = <span class="string">&#x27;10&#x27;</span>  <span class="comment"># 定义字符型的变量</span></span><br><span class="line">print(<span class="built_in">type</span>(strA))  <span class="comment"># 打印变量类型</span></span><br><span class="line">intA = <span class="built_in">int</span>(strA)  <span class="comment"># 使用类型转换函数 int()</span></span><br><span class="line">print(intA, <span class="built_in">type</span>(intA))  <span class="comment"># 输出转换后的变量值与类型</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/27/786893c10318260480a1ba1daf541c23.png" width="80%"/><p>注意：其余类型转换函数使用方法相似，不再赘述。</p></li><li><p>bin()、hex()</p><blockquote><p>分别获取对应值的二、十六进制</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="built_in">bin</span>(<span class="number">10</span>)) <span class="comment"># 二进制为例，十六进制同理</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/27/b89ecaf75d9bac5c18d2a070f4ee1cd5.png" width="80%"/><p>验证正确性：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/27/5b27603759ce8efae2609a4a6ec2be07.png" width="80%"/><p>注意：十六进制以0x开头</p></li><li><p>list()、tuple()</p><blockquote><p>元组与列表互相转换</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tupleA = (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)  <span class="comment"># 定义一个元组</span></span><br><span class="line">print(tupleA, <span class="built_in">type</span>(tupleA))  <span class="comment"># 打印元组及其类型</span></span><br><span class="line">listA = <span class="built_in">list</span>(tupleA)  <span class="comment"># 使用list()将元组转换为列表类型</span></span><br><span class="line">print(listA, <span class="built_in">type</span>(listA))  <span class="comment"># 打印转换后的变量值和类型</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/27/20c6ef3dbce52d13ce8075fc6d5e6337.png" width="80%"/><p>注意：tuple()的使用方法类似，不在赘述。</p></li><li><p>dict()</p><blockquote><p>生成字典（有特定的生成规则）</p></blockquote><ul><li><p>创建一个空字典</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">dictA = <span class="built_in">dict</span>()</span><br><span class="line">print(<span class="built_in">type</span>(dictA))</span><br><span class="line">dictA[<span class="string">&#x27;name&#x27;</span>] = <span class="string">&#x27;小明&#x27;</span></span><br><span class="line">dictA[<span class="string">&#x27;age&#x27;</span>] = <span class="number">18</span></span><br><span class="line">print(dictA)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/27/3a7773e3422dd72246214e78e3068edd.png" width="80%"/></li><li><p>创建一个带有键值对的字典：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dictA = <span class="built_in">dict</span>(name=<span class="string">&#x27;小明&#x27;</span>, age=<span class="number">18</span>)</span><br><span class="line">print(dictA, <span class="built_in">type</span>(dictA))</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/27/3769afc13862cac252551db4dfd0f56f.png" width="80%"/></li></ul></li><li><p>bytes()</p><blockquote><p>转换为字节数组</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="built_in">bytes</span>(<span class="string">&#x27;你好呀！&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>))</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/27/63d48ab16ee424ebaf40b4629e391f92.png" width="80%"/></li></ol><h1 id="序列操作"><a href="#序列操作" class="headerlink" title="序列操作"></a>序列操作</h1><blockquote><p>对字符串、元组、列表的操作</p></blockquote><ol><li><p>all()</p><blockquote><p>当元组、列表中仅包含True值时返回True，否则返回False（包含0、空、False），类似逻辑运算符中的 and</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="built_in">all</span>([]), <span class="built_in">all</span>(()))  <span class="comment"># 判断空列表、元组</span></span><br><span class="line">print(<span class="built_in">all</span>([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="literal">True</span>]), <span class="built_in">all</span>((<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="literal">True</span>)))  <span class="comment"># 不包含0、空、False</span></span><br><span class="line">print(<span class="built_in">all</span>([<span class="number">1</span>, <span class="number">2</span>, <span class="number">0</span>]), <span class="built_in">all</span>([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="literal">False</span>]))  <span class="comment"># 列表中包含0、空、False</span></span><br><span class="line">print(<span class="built_in">all</span>((<span class="number">1</span>, <span class="number">2</span>, <span class="number">0</span>)), <span class="built_in">all</span>((<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="literal">False</span>)))  <span class="comment"># 元组中包含0、空、False</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/28/8451eaf241f28503ea70ec2a573dd2f5.png" width="80%"/><p>注意：当元组、列表为空时使用all()返回值均为True。</p></li><li><p>any()</p><blockquote><p>当元组、列表中包含任一True值时返回True，否则返回False（包含0、空、False），类似逻辑运算符中的 or</p></blockquote><p>具体内容与all()的使用类似，不在赘述</p></li><li><p>sorted()</p><blockquote><p>对所有可迭代对象排序</p></blockquote><ul><li><p>区别sort()：</p><ul><li>sort仅适用与列表，sorted使用与所有可迭代对象</li><li>sort是在原列表基础上进行的排序，sorted会新建一个</li><li>sorted无论排序哪种类型的变量，返回值均为list</li></ul></li><li><p>使用：</p><ul><li><p>sort()：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">listA = [<span class="number">4</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">14</span>, <span class="number">324</span>, <span class="number">3</span>]</span><br><span class="line">listA.sort()  <span class="comment"># 默认升序排列，使用reverse=True可实现降序排列</span></span><br><span class="line">print(listA)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/28/ca6c9cc24655796a4dd0ebbb542c64f6.png" width="80%"/><p>注意：可以看出sort()是在原列表的基础上实现的</p></li><li><p>sorted()：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">listA = [<span class="number">4</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">14</span>, <span class="number">324</span>, <span class="number">3</span>]</span><br><span class="line">listB = <span class="built_in">sorted</span>(listA, reverse=<span class="literal">True</span>)  <span class="comment"># reverse默认等于False（升序），使用reverse=True可实现降序排列</span></span><br><span class="line">print(listB)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/28/6fc3aedee6bd39f3fb6822978345a803.png" width="80%"/><p>注意：可以看出sorted()是在新列表上实现的，元组类型的数据使用方法类似，不在赘述</p></li></ul></li></ul></li><li><p>reverse()</p><blockquote><p>对列表中的数据进行反转操作</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">listA = [<span class="number">4</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">14</span>, <span class="number">324</span>, <span class="number">3</span>]</span><br><span class="line">listA.reverse()</span><br><span class="line">print(listA)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/28/31027e3d1f33c756f5b52bafd9770066.png" width="80%"/></li><li><p>range()</p><blockquote><p>创建一个整数列表，一般用在for循环中</p></blockquote><p>参数：</p><ul><li>start：起点值</li><li>stop：终点值（不包含）</li><li>step：步长，默认为1</li></ul><p>案例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">10</span>, <span class="number">2</span>): <span class="comment">#range(start,stop,step)</span></span><br><span class="line">    print(i, end=<span class="string">&#x27; &#x27;</span>)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/28/11c1804f6599f7f0c4fcac956570bfb7.png" width="80%"/></li><li><p>zip()</p><blockquote><p>压缩多个可迭代对象</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">listA = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]  <span class="comment"># 定义两初始数组</span></span><br><span class="line">listB = [<span class="string">&#x27;小明&#x27;</span>, <span class="string">&#x27;男&#x27;</span>, <span class="number">19</span>]</span><br><span class="line">zipA = <span class="built_in">zip</span>(listA, listB)  <span class="comment"># 使用zip压缩，列表个数任意</span></span><br><span class="line">print(zipA)  <span class="comment"># 直接打印压缩后生成的可迭代对象</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> zipA:  <span class="comment"># 使用for循环输出可迭代对象的值</span></span><br><span class="line">    print(i, end=<span class="string">&#x27; &#x27;</span>)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/28/0bf26cdf0ad939bf7fcab897404ebbb4.png" width="80%"/><p>注意：</p><ul><li><p>原始列表压缩后生成一个可迭代对象</p></li><li><p>该对象包含多个元组，每个元组均由原始列表中的值构造而成</p></li><li><p>构造方法为如下图：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/28/5be2143238bb51338adacd4984973c3e.png" width="50%"/></li><li><p>假设两个列表中元素数目分别为num1、num2，则压缩后的元组数目为min(num1,num2)，多个列表时类似</p></li></ul><p>案例：创建函数实现书本信息（编号、书名、位置）的录入</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">addInfo</span>():</span></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    录入书本信息（id、name、pos）</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="built_in">id</span> = <span class="built_in">input</span>(<span class="string">&#x27;id：&#x27;</span>)  <span class="comment"># 书本编号</span></span><br><span class="line">    name = <span class="built_in">input</span>(<span class="string">&#x27;name：&#x27;</span>)  <span class="comment"># 书本名称</span></span><br><span class="line">    pos = <span class="built_in">input</span>(<span class="string">&#x27;pos：&#x27;</span>)  <span class="comment"># 书本存放位置</span></span><br><span class="line"></span><br><span class="line">    idList = <span class="built_in">id</span>.split(<span class="string">&#x27; &#x27;</span>)  <span class="comment"># 通过split函数将数据拆分后存入列表便于zip压缩</span></span><br><span class="line">    nameList = name.split(<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">    posList = pos.split(<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"></span><br><span class="line">    bookZip = <span class="built_in">zip</span>(idList, nameList, posList)  <span class="comment"># 多个列表数据纵向合并用到zip</span></span><br><span class="line"></span><br><span class="line">    bookList = []  <span class="comment"># 存放书本信息</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> bookItem <span class="keyword">in</span> bookZip:  <span class="comment"># 遍历压缩后的数据</span></span><br><span class="line">        bookDict = &#123;<span class="string">&#x27;id&#x27;</span>: bookItem[<span class="number">0</span>], <span class="string">&#x27;name&#x27;</span>: bookItem[<span class="number">1</span>], <span class="string">&#x27;pos&#x27;</span>: bookItem[<span class="number">2</span>]&#125;  <span class="comment"># 初始化字典并将获取的信息存入（初始化字典时key要使用引号）</span></span><br><span class="line">        bookList.append(bookDict)  <span class="comment"># 每个字典都是一本书的信息，将这些信息全部存入bookList中</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> bookList:  <span class="comment"># 打印所有书本信息</span></span><br><span class="line">        print(i)</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">addInfo()</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/28/5cb30b850e82ff929a8da5e8535e1972.png" width="80%"/><p>知识点：</p><ul><li>列表数据纵向合并用到zip</li><li>字典创建时可赋值，赋值时key要加引号</li><li>列表嵌套字典，展示数据更清晰</li></ul></li><li><p>enumerate()</p><blockquote><p>添加下标（列表、字典等），可自定义起始值</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">listA = [<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>]</span><br><span class="line">print(<span class="built_in">list</span>(<span class="built_in">enumerate</span>(listA, <span class="number">6</span>)))</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/28/ce7a06b2165a2a42b387a35c6cda7c01.png" width="80%"/></li></ol><h1 id="Set集合"><a href="#Set集合" class="headerlink" title="Set集合"></a>Set集合</h1><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><ol><li>是什么？无序且不重复的元素集合</li><li>特点：<ul><li>无序、互异</li><li>不支持切片、索引</li><li>类似于字典但仅有key无value</li></ul></li></ol><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><ol><li><p>创建集合</p><ul><li><p>方法1：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">setA = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;</span><br><span class="line">print(<span class="built_in">type</span>(setA))</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/29/c38255845aba2b81db519e06b4f95aa0.png" width="80%"/></li><li><p>方法2：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">listA = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">setA = <span class="built_in">set</span>(listA)</span><br><span class="line">print(setA, <span class="built_in">type</span>(setA))</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/29/dd5717250e28fa6a52d244b161a74e52.png" width="80%"/><p>注意：可以通过对list进行强制转换来创建一个集合。</p></li></ul></li><li><p>添加操作：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">setA = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;</span><br><span class="line">setA.add(<span class="string">&#x27;hello&#x27;</span>)</span><br><span class="line">print(setA)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/29/31fba6825b1c249b4b91d2bceaa12a0d.png" width="80%"/></li><li><p>清空操作：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">setA = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;</span><br><span class="line">setA.clear()</span><br><span class="line">print(setA)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/29/c4a185d4f8e1ea88e75160cfd2e77b92.png" width="80%"/></li><li><p>差、并、交集</p><p>概念：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/29/44485742f8c7fdeb76ad8af0c4576978.png" width="80%"/><p>案例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">setA = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;</span><br><span class="line">setB = &#123;<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>&#125;</span><br><span class="line">print(setA - setB, setA.difference(setB))  <span class="comment"># 差集</span></span><br><span class="line">print(setA &amp; setB, setA.intersection(setB))  <span class="comment"># 交集</span></span><br><span class="line">print(setA | setB, setA.union(setB))  <span class="comment"># 并集</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/29/0b3d5add9a493e3559f0127dda11b2ee.png" width="80%"/></li><li><p>移除指定元素：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">setA = &#123;<span class="number">4</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">1</span>&#125;</span><br><span class="line">setA.discard(<span class="number">4</span>)</span><br><span class="line">print(setA)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/29/a9014d9d28618ef7c0d9a002dd6d0ffe.png" width="80%"/></li><li><p>合并集合：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">setA = &#123;<span class="number">4</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">1</span>&#125;</span><br><span class="line">setB = &#123;<span class="number">1</span>, <span class="number">6</span>&#125;</span><br><span class="line">setA.update(setB)</span><br><span class="line">print(setA)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/29/b9ac58d6f7562e73c3f1c4fbecb3a58e.png" width="80%"/><p>注意：集合合并会自动去重</p></li></ol><h1 id="思路补充"><a href="#思路补充" class="headerlink" title="思路补充"></a>思路补充</h1><blockquote><p>做题时遇到的好的想法和思路</p></blockquote><ol><li><p>函数很方便</p></li><li><p>函数返回元组或其它类型的数据</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> (<span class="built_in">sum</span>,<span class="number">1</span>+<span class="built_in">sum</span>) <span class="comment">#再根据下标使用</span></span><br></pre></td></tr></table></figure></li><li><p>列表移除指定元素：.remove()</p></li><li><p>判断是否在列表中 in / not in</p></li></ol><hr><p>不足之处，欢迎留言，会及时回复！</p><p>创作不易，感谢支持！</p>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Day05 函数（中）</title>
      <link href="17857.html"/>
      <url>17857.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h1><h2 id="局部变量"><a href="#局部变量" class="headerlink" title="局部变量"></a>局部变量</h2><ol><li><p>简单使用：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">setName</span>():</span></span><br><span class="line">    name = <span class="string">&#x27;peter&#x27;</span> <span class="comment">#局部变量</span></span><br><span class="line">    print(name)</span><br><span class="line"></span><br><span class="line">setName() <span class="comment">#调用函数</span></span><br></pre></td></tr></table></figure></li><li><p>作用：临时保存数据，需要在函数中定义来进行存储。</p></li><li><p>特点：</p><ul><li><p>在函数内部定义的变量，作用域仅局限在函数内部</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">setName</span>():</span></span><br><span class="line">    name = <span class="string">&#x27;peter&#x27;</span> <span class="comment">#局部变量</span></span><br><span class="line"></span><br><span class="line">print(name) <span class="comment">#打印name</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/18/659ecb83e9c842ad37a63121d56a7665.png" width="80%"/></li><li><p>不同的函数可以定义相同名称的局部变量，不会产生影响</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">setName1</span>():</span></span><br><span class="line">    name = <span class="string">&#x27;peter&#x27;</span></span><br><span class="line">    print(name)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">setName2</span>():</span></span><br><span class="line">    name = <span class="string">&#x27;Bob&#x27;</span></span><br><span class="line">    print(name)</span><br><span class="line"></span><br><span class="line">setName1()</span><br><span class="line">setName2()</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/18/1de1e861824f9189e6e9fca1b7e350c2.png" width="80%"/></li></ul></li></ol><h2 id="全局变量"><a href="#全局变量" class="headerlink" title="全局变量"></a>全局变量</h2><ol><li><p>使用：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">age = <span class="number">10</span> <span class="comment">#全局变量</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">setName1</span>():</span></span><br><span class="line">    print(age)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">setName2</span>():</span></span><br><span class="line">    print(age)</span><br><span class="line"></span><br><span class="line">setName1()</span><br><span class="line">setName2()</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/18/8f8e498c4dc6f4caa13aa80c0c9609ea.png" width="80%"/></li><li><p>区别局部变量：作用域的范围不同，全局变量在整个文件当中均可使用</p></li><li><p>易错：</p><ul><li><p>冲突时：局部变量优先级高于全局变量</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">age = <span class="number">10</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">setName1</span>():</span></span><br><span class="line">    age = <span class="number">9</span></span><br><span class="line">    print(age)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">setName2</span>():</span></span><br><span class="line">    print(age)</span><br><span class="line"></span><br><span class="line">setName1()</span><br><span class="line">setName2()</span><br></pre></td></tr></table></figure><p>  运行结果：</p>  <img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/18/9815571d00cf1b2b3a94867da8c58996.png" width="80%"/></li><li><p>函数中修改全局变量：</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">age = <span class="number">10</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">setAge</span>():</span></span><br><span class="line">    age = <span class="number">5</span> <span class="comment">#错误做法，这样只是定义了一个局部变量</span></span><br><span class="line"></span><br><span class="line">setAge()</span><br><span class="line">print(age)</span><br></pre></td></tr></table></figure><p>  运行结果：</p>  <img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/18/44c6b901d2f9cb5b9b1a54703f0ca04e.png" width="80%"/>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">age = <span class="number">10</span> </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">setAge</span>():</span></span><br><span class="line">    <span class="keyword">global</span> age <span class="comment">#一定要先定义后赋值，具体原因不知</span></span><br><span class="line">    age = <span class="number">5</span></span><br><span class="line"></span><br><span class="line">setAge()</span><br><span class="line">print(age)</span><br></pre></td></tr></table></figure><p>  运行结果：</p>  <img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/18/d83274bc28389b1f5beea5a428e3dc68.png" width="80%"/><p>  注意：</p><ul><li>若写成 <code>global age = 5</code> 是错误的，一定要先定义后赋值，具体原因不知</li><li>上面的代码把最开始的age=10去掉也能成功运行</li></ul></li></ul></li></ol><h1 id="引用传值"><a href="#引用传值" class="headerlink" title="引用传值"></a>引用传值</h1><h2 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h2><ol><li>不可变数据：整型、字符串、元组</li><li>可变数据：列表、字典</li></ol><h2 id="传不可变值"><a href="#传不可变值" class="headerlink" title="传不可变值"></a>传不可变值</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">age = <span class="number">5</span> </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fonc</span>(<span class="params">age</span>):</span> <span class="comment">#传不可变数据类型的值</span></span><br><span class="line">    age = <span class="number">4</span></span><br><span class="line"></span><br><span class="line">fonc(age)</span><br><span class="line">print(age)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/18/024dfb6479fdb1c5fbb17dd933a292c1.png" width="80%"/><h2 id="传可变值"><a href="#传可变值" class="headerlink" title="传可变值"></a>传可变值</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">list</span> = []</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fonc</span>(<span class="params"><span class="built_in">list</span></span>):</span></span><br><span class="line">    <span class="built_in">list</span>.append(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">fonc(<span class="built_in">list</span>)</span><br><span class="line">print(<span class="built_in">list</span>)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/18/e1c471b437ab8d80579a35410e330047.png" width="80%"/><h1 id="匿名函数"><a href="#匿名函数" class="headerlink" title="匿名函数"></a>匿名函数</h1><h2 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h2><ol><li>语法：<code>lambda 参数1,参数2:表达式</code></li><li>特点：<ul><li>与标准函数相比，使用起来更加简洁</li><li>自带return，返回的就是表达式的结果</li></ul></li><li>缺点：<ul><li>复杂逻辑无法实现</li></ul></li></ol><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><ol><li><p>求和运算</p><p>匿名函数：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Sum = <span class="keyword">lambda</span> x, y: x + y</span><br><span class="line">print(Sum(<span class="number">1</span>, <span class="number">2</span>))</span><br></pre></td></tr></table></figure><p>标准函数：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Sum</span>(<span class="params">x, y</span>):</span></span><br><span class="line">    <span class="keyword">return</span> x + y</span><br><span class="line"></span><br><span class="line">print(Sum(<span class="number">1</span>, <span class="number">2</span>))</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/18/e8f9f6296b4d153b8f3c037b735dbd5c.png" width="80%"/><p>注意：上面代码可以更简洁为 <code>print((lambda x, y: x + y)(1, 2))</code></p></li><li><p>简单判断：</p><p>补充： <code>print(&#39;左边大&#39; if 3 &gt; 2 else &#39;右边大&#39;)</code></p><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/18/9d81f95edc44cc7e2a0e58403dc70811.png" width="80%"/><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Judge = <span class="keyword">lambda</span> x, y: <span class="string">&#x27;左边大&#x27;</span> <span class="keyword">if</span> x &gt; y <span class="keyword">else</span> <span class="string">&#x27;右边大&#x27;</span></span><br><span class="line">print(Judge(<span class="number">1</span>, <span class="number">2</span>))</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/18/7622932b76672dc00ee4f00603da8480.png" width="80%"/><p>同样可以简写为：<code>print((lambda x, y: &#39;左边大&#39; if x &gt; y else &#39;右边大&#39;)(1, 2))</code></p></li></ol><h1 id="递归函数"><a href="#递归函数" class="headerlink" title="递归函数"></a>递归函数</h1><ol><li><p>特点：</p><ul><li>有递归结束判断</li><li>自己调用自己</li></ul></li><li><p>使用：</p><ul><li><p>普通求阶乘：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">diGui</span>(<span class="params">x</span>):</span></span><br><span class="line">    res = <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, x + <span class="number">1</span>):</span><br><span class="line">        res *= i</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line">print(diGui(<span class="number">5</span>))</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/18/66ea38335fbbfa6a59c70259847cb9e9.png" width="80%"/></li><li><p>递归求阶乘：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">diGui</span>(<span class="params">x</span>):</span></span><br><span class="line">    <span class="keyword">if</span> x == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> x * diGui(x - <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">print(diGui(<span class="number">5</span>))</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/18/5718656bf1b08866e80cba7454e80487.png" width="80%"/></li><li><p>递归输出给定目录子文件名称：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">findFile</span>(<span class="params">file_path</span>):</span>  <span class="comment"># 输出给定路径下所有文件名称</span></span><br><span class="line">    lists = os.listdir(file_path)  <span class="comment"># 将所有文件（夹）名称存入列表</span></span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> lists:</span><br><span class="line">        full_path = os.path.join(file_path, item)  <span class="comment"># 获取完整路径名称</span></span><br><span class="line">        <span class="keyword">if</span> os.path.isdir(full_path):  <span class="comment"># 判断</span></span><br><span class="line">            findFile(full_path)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(item)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">findFile(<span class="string">&#x27;D:\\code&#x27;</span>)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/18/d39f563befc7f5ce9a11d3629a9ef610.png" width="80%"/></li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Day04 函数（上）</title>
      <link href="54935.html"/>
      <url>54935.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="初始函数"><a href="#初始函数" class="headerlink" title="初始函数"></a>初始函数</h1><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><ol><li><p>是什么？</p><p>一系列python语句的组合，可以在程序中运行一次或多次，完成具体、独立的功能。</p></li><li><p>为什么？</p><p>整体结构清晰，代码复用最大化，代码冗余最小化，问题局部化。</p></li></ol><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><ol><li><p>语法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> 函数名():</span></span><br><span class="line">    函数体</span><br></pre></td></tr></table></figure></li><li><p>案例：输出小明的信息</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">printInfo</span>():</span></span><br><span class="line">    print(<span class="string">&#x27;姓名：&#123;&#125;，性别：&#123;&#125;，年龄：&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(<span class="string">&quot;小明&quot;</span>, <span class="string">&quot;男&quot;</span>, <span class="string">&quot;20&quot;</span>))</span><br></pre></td></tr></table></figure></li></ol><h2 id="调用"><a href="#调用" class="headerlink" title="调用"></a>调用</h2><ol><li><p>语法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">函数名()</span><br></pre></td></tr></table></figure></li><li><p>案例：调用上例中创建的printInfo函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">printInfo</span>():</span></span><br><span class="line">    print(<span class="string">&#x27;姓名：&#123;&#125;，性别：&#123;&#125;，年龄：&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(<span class="string">&quot;小明&quot;</span>, <span class="string">&quot;男&quot;</span>, <span class="string">&quot;20&quot;</span>))</span><br><span class="line">printInfo() <span class="comment">#调用已创建的 printInfo 函数</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/7c2b955bf534f6c673fa3be6c25d444c.png" width="60%"/><p>注意：</p><ul><li><p>函数必须先定义才能被调用</p></li><li><p>函数注释的写法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">printInfo</span>():</span></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    输出小明的信息</span></span><br><span class="line"><span class="string">    :return: </span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    print(<span class="string">&#x27;姓名：&#123;&#125;，性别：&#123;&#125;，年龄：&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(<span class="string">&quot;小明&quot;</span>, <span class="string">&quot;男&quot;</span>, <span class="string">&quot;20&quot;</span>))</span><br></pre></td></tr></table></figure><p>调用函数时，按下ctrl并把鼠标放在函数名上会有如下提示：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/a7828489bf08beb76151474be6fc7ab3.png" width="60%"/></li></ul></li></ol><h1 id="函数参数"><a href="#函数参数" class="headerlink" title="函数参数"></a>函数参数</h1><h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><ul><li>必选参数</li><li>默认参数</li><li>不定长参数</li><li>关键字参数</li></ul><h2 id="必选参数"><a href="#必选参数" class="headerlink" title="必选参数"></a>必选参数</h2><blockquote><p>调用时必须要给参数值</p></blockquote><p>案例：编写两数求和函数，输出运算结果</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getSum</span>(<span class="params">numA, numB</span>):</span></span><br><span class="line">    print(numA + numB)</span><br></pre></td></tr></table></figure><ul><li><p>传参调用：</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">getSum(<span class="number">3</span>, <span class="number">5</span>)</span><br></pre></td></tr></table></figure><p>  运行结果：</p>  <img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/d6dc88cc519abca4fe390f531fe1aba4.png" width="60%"/></li><li><p>不传参调用：</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">getSum()</span><br></pre></td></tr></table></figure><p>  运行结果：</p>  <img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/d1fce89a621e1483286eafd097cab16f.png" width="60%"/></li></ul><h2 id="默认参数"><a href="#默认参数" class="headerlink" title="默认参数"></a>默认参数</h2><blockquote><p>缺省参数，无参数时使用默认值</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getSum</span>(<span class="params">a=<span class="number">10</span>, b=<span class="number">20</span></span>):</span></span><br><span class="line">    print(a + b)</span><br></pre></td></tr></table></figure><ul><li><p>不传参调用：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">getSum()</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/9d5ec3bbc772ecb17a8cf0b977304c21.png" width="60%"/></li><li><p>传参数调用：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">getSum(<span class="number">1</span>, <span class="number">2</span>)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/4050da669fad59be36bafa9b5053cec7.png" width="60%"/></li><li><p>易错案例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getSum</span>(<span class="params">a=<span class="number">20</span>, b</span>):</span></span><br><span class="line">    print(a + b)</span><br><span class="line"></span><br><span class="line">getSum(<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/49c4e77821c2899f75e2413c9a26350a.png" width="60%"/><p>分析：实参个数&lt;形参个数时，参数会从左向右依次分配，所以 a=1，但由于 b 没有默认值所以会报错。</p></li></ul><p>注意：从上面的案例也能看出，默认（缺省）参数始终存在于参数列表中的尾部，否则没意义。</p><h2 id="不定长参数"><a href="#不定长参数" class="headerlink" title="不定长参数"></a>不定长参数</h2><blockquote><p>当参数个数不确定时使用</p></blockquote><ul><li><p>输出单个参数：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getResult</span>(<span class="params">*args</span>):</span></span><br><span class="line">    print(args)</span><br><span class="line">    </span><br><span class="line">getResult(<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/137149fb826365f7051f8d24b98de6a8.png" width="60%"/></li><li><p>多个参数求和：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getResult</span>(<span class="params">*args</span>):</span></span><br><span class="line">    <span class="built_in">sum</span> = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> args:</span><br><span class="line">        <span class="built_in">sum</span> += item</span><br><span class="line">    print(<span class="built_in">sum</span>)</span><br><span class="line"></span><br><span class="line">getResult(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/af6ab58298a6c2bd4022a3e9ea99c9d8.png" width="60%"/></li></ul><h2 id="关键字参数"><a href="#关键字参数" class="headerlink" title="关键字参数"></a>关键字参数</h2><blockquote><p>接受字典类型的参数</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">info</span>(<span class="params">**kwargs</span>):</span></span><br><span class="line">    print(kwargs)</span><br></pre></td></tr></table></figure><ul><li><p>传参方法1：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dictA = &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;xiaoming&#x27;</span>&#125;</span><br><span class="line">info(**dictA) <span class="comment"># 注意 **</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/505faaf5cbcc957ba2de73b9af59dd9f.png" width="60%"/></li><li><p>传参方法2：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">info(name=<span class="string">&quot;xiaoming&quot;</span>) <span class="comment"># 注意：key不可以加引号，否则报错</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/418c15f8b33462e93791a996b03e0069.png" width="60%"/></li></ul><h1 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h1><blockquote><p>函数执行完以后会返回一个对象，使用return即可实现，否则返回none</p></blockquote><p>注意：</p><ul><li>在一个函数体中可以出现多个return，但只能选择一个返回</li><li>只要执行了return，则其后面的代码均不再执行</li></ul><h2 id="单个数据"><a href="#单个数据" class="headerlink" title="单个数据"></a>单个数据</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Sum</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    <span class="built_in">sum</span> = a + b</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sum</span></span><br><span class="line"></span><br><span class="line">num = Sum(<span class="number">1</span>, <span class="number">2</span>) <span class="comment">#num接受返回值</span></span><br><span class="line">print(num)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/4460c4f40aa029d22fc71866f52fe061.png" width="60%"/><h2 id="多个数据"><a href="#多个数据" class="headerlink" title="多个数据"></a>多个数据</h2><blockquote><p>返回列表、元组、字典</p></blockquote><ol><li><p>返回列表：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Sum</span>():</span></span><br><span class="line">    <span class="keyword">return</span> [<span class="string">&#x27;sda&#x27;</span>, <span class="number">1</span>, <span class="number">0.5</span>] <span class="comment">#返回列表类型的数据</span></span><br><span class="line"></span><br><span class="line">num = Sum()  <span class="comment"># num接受返回值</span></span><br><span class="line">print(<span class="built_in">type</span>(num))</span><br><span class="line">print(num)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/901f2ed79641e274da9966aa9470b0eb.png" width="60%"/></li><li><p>返回元组：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Sum</span>():</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span> <span class="comment">#返回元组类型的数据</span></span><br><span class="line"></span><br><span class="line">num = Sum()  <span class="comment"># num接受返回值</span></span><br><span class="line">print(<span class="built_in">type</span>(num))</span><br><span class="line">print(num)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/a36e12568343db11dc9d490145cf900a.png" width="60%"/></li><li><p>返回字典：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Sum</span>():</span></span><br><span class="line">    <span class="keyword">return</span> &#123;<span class="string">&quot;name&quot;</span>:<span class="string">&quot;菜徐坤&quot;</span>&#125; <span class="comment">#返回字典类型的数据</span></span><br><span class="line"></span><br><span class="line">num = Sum()  <span class="comment"># num接受返回值</span></span><br><span class="line">print(<span class="built_in">type</span>(num))</span><br><span class="line">print(num)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/7245b1596d1eb34a9e14a1849512b183.png" width="60%"/></li></ol><h1 id="嵌套调用"><a href="#嵌套调用" class="headerlink" title="嵌套调用"></a>嵌套调用</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ddd1</span>():</span></span><br><span class="line">    print(<span class="string">&quot;---------ddd1 start------&quot;</span>)</span><br><span class="line">    print(<span class="string">&quot;---------在执行代码------&quot;</span>)</span><br><span class="line">    print(<span class="string">&quot;---------ddd1 end------&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ddd2</span>():</span></span><br><span class="line">    print(<span class="string">&quot;---------ddd2 start------&quot;</span>)</span><br><span class="line">    ddd1()</span><br><span class="line">    print(<span class="string">&quot;---------ddd2 end------&quot;</span>)</span><br><span class="line"></span><br><span class="line">ddd2()</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/84607d57c8ecbc6de11860c297888bb5.png" width="60%"/><p>注意：函数一定要先定义再调用</p>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Day03 高级数据类型</title>
      <link href="49231.html"/>
      <url>49231.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="序列类型"><a href="#序列类型" class="headerlink" title="序列类型"></a>序列类型</h1><ol><li><p>定义：在python中，序列就是一组按照顺序排序的值【数据集合】</p></li><li><p>python内置的序列类型：</p><ul><li>字符串</li><li>列表</li><li>元组</li></ul></li><li><p>特点：支持索引、切片操作</p><ul><li><p>索引：正负表示方向，从0开始</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/16/87a8c71fb11d066687c426acb6611619.png" width="60%"/></li><li><p>切片：截取字符串的部分内容，[start​ : end : ​step]</p><ul><li>start：起点下标</li><li>end：终点下标</li><li>step：步长，默认为1</li></ul></li></ul></li></ol><h2 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h2><blockquote><p>不可变数据类型</p></blockquote><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><ol><li><p>定义：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">str</span> = <span class="string">&#x27;hello world&#x27;</span></span><br><span class="line">print(<span class="built_in">type</span>(<span class="built_in">str</span>))</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/16/586c9bcebb2d19593164f2bcda6c78bc.png" width="60%"/></li><li><p>获取下标对应内容：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="built_in">str</span>[<span class="number">0</span>])</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/16/fc026e667b82568c70bd4daa5066eb56.png" width="60%"/></li><li><p>遍历：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">str</span>:</span><br><span class="line">    print(i, end=<span class="string">&#x27; &#x27;</span>) <span class="comment"># end=&#x27; &#x27;的作用是：不换行输出</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/16/1656bd9bdb3307957a4535855a5a5aad.png" width="60%"/></li></ol><h3 id="常用方法"><a href="#常用方法" class="headerlink" title="常用方法"></a>常用方法</h3><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/16/ac9df2f0038adfce5eb14f02b18f5b58.png" width="60%"/><ol><li><p>获取字符串长度：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">str</span> = <span class="string">&#x27;I Love Python&#x27;</span></span><br><span class="line">print(<span class="built_in">len</span>(<span class="built_in">str</span>))</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/16/85839c14c4361afa944bc8b431a71473.png" width="60%"/></li><li><p>首字母变大写：    </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">name = <span class="string">&#x27;bob&#x27;</span></span><br><span class="line">print(name.capitalize())</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/16/d86a20ab395f19da92a8dbbfb40a9abf.png" width="60%"/><p>使用占位符输出：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">&#x27;首字母大写后：%s&#x27;</span> % name.capitalize()) <span class="comment">#会使用format亦可</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/16/317dbdd213978b7d7e2be6263f68c239.png" width="60%"/></li><li><p>去除前后空格：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">str</span> = <span class="string">&#x27;  hello world  &#x27;</span></span><br><span class="line">print(<span class="built_in">str</span>.strip())</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/16/0d75140c16e59749151e0c43be0e2c00.png" width="60%"/><p>去除字符串左（右）边的空格：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="built_in">str</span>.lstrip()) <span class="comment">#去除左边的空格，右边同理</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/16/6e5847be3b8135ee2cd2aaf2527fcf4a.png" width="60%"/><p>注意：该方法仅能将字符串前后的空格去除，中间空格无效果。</p></li><li><p>复制字符串：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="string">&#x27;Bob&#x27;</span></span><br><span class="line">b = a</span><br><span class="line">print(b)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/16/42f53bc6610b209c27f5216d13a44d53.png" width="60%"/><p>查看内存地址：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="built_in">id</span>(a))</span><br><span class="line">print(<span class="built_in">id</span>(b))</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/16/dad83274bfced5b04df5d8eb13d82485.png" width="60%"/><p>上图内存地址相同说明前面的 <code>=</code> 为复制操作。</p></li><li><p>查找操作：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">str</span> = <span class="string">&#x27;I Love Python&#x27;</span></span><br><span class="line">print(<span class="built_in">str</span>.find(<span class="string">&#x27;o&#x27;</span>))</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/16/9555c36e0435569cbc41c3fb7086d7c5.png" width="60%"/><p>注意：</p><ul><li>该方法仅能返回该字符出现的第一个位置，若查询不到返回 -1</li><li>使用 index() 方法也可以获取字符下标，区别是index找不到下标时会报错</li></ul></li><li><p>判断是否以*开头/结尾：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">str</span> = <span class="string">&#x27;I Love Python&#x27;</span></span><br><span class="line">print(<span class="built_in">str</span>.startswith(<span class="string">&#x27;I&#x27;</span>)) <span class="comment">#开始</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/16/d2757e7070bca62d36e7ad881c9c04e5.png" width="60%"/></li><li><p>转换大/小写：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">str</span> = <span class="string">&#x27;I Love Python&#x27;</span></span><br><span class="line">print(<span class="built_in">str</span>.upper()) <span class="comment">#大写</span></span><br><span class="line">print(<span class="built_in">str</span>.lower()) <span class="comment">#小写</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/16/93f158e6f1552cee70e0d6d1c9672f31.png" width="60%"/></li></ol><h3 id="切片操作"><a href="#切片操作" class="headerlink" title="切片操作"></a>切片操作</h3><ol><li><p>输出 2-5 之间的字符串：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">str</span> = <span class="string">&#x27;I Love Python&#x27;</span></span><br><span class="line">print(<span class="built_in">str</span>[<span class="number">2</span>:<span class="number">5</span>])</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/16/6b489ef1986a9a02750a2bf030a2842f.png" width="60%"/></li><li><p>从 2 开始到最后：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">str</span> = <span class="string">&#x27;I Love Python&#x27;</span></span><br><span class="line">print(<span class="built_in">str</span>[<span class="number">2</span>:])</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/16/0c4026a02d00f64489486f99464d9f62.png" width="60%"/><p>注意：开始（0）、结束可省略不写。</p></li><li><p>倒序输出：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">str</span> = <span class="string">&#x27;I Love Python&#x27;</span></span><br><span class="line">print(<span class="built_in">str</span>[::<span class="number">-1</span>])</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/16/f7cac62f31b44238b79495622e47c197.png" width="60%"/></li></ol><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><h3 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h3><ol><li><p>定义：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">list</span> = []</span><br><span class="line">print(<span class="built_in">type</span>(<span class="built_in">list</span>))</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/16/fddb0f4e3e74d2a6ab7f43e5a2e02d7a.png" width="60%"/></li><li><p>特点：</p><ul><li>支持增删查改</li><li>列表中的数据可变化（内存地址不会改变）</li><li>使用[]来表示列表类型，数据项（任何类型的数据）之间用逗号分隔</li><li>支持索引和切片操作</li></ul></li></ol><h3 id="常用方法-1"><a href="#常用方法-1" class="headerlink" title="常用方法"></a>常用方法</h3><ol><li><p>列表长度：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">list</span> = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>] </span><br><span class="line">print(<span class="built_in">len</span>(<span class="built_in">list</span>))</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/16/a638a7cc3383f587b000be65d4f762e2.png" width="60%"/></li><li><p>查找：</p><ul><li><p>输出第一项：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">list</span> = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line">print(<span class="built_in">list</span>[<span class="number">0</span>])</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/16/39ada2ebdf82b7f11a6f6c7f24e14460.png" width="60%"/></li><li><p>输出第二个及以后的项：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">list</span> = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line">print(<span class="built_in">list</span>[<span class="number">1</span>:]) <span class="comment">#切片操作</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/16/52f7f353ef115c14eb9123fcbac77138.png" width="60%"/></li><li><p>倒序输出列表项：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">list</span> = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line">print(<span class="built_in">list</span>[::<span class="number">-1</span>])</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/16/d96f101d14899d84551421a187826714.png" width="60%"/></li><li><p>多次输出：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">list</span> = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line">print(<span class="built_in">list</span> * <span class="number">3</span>)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/16/1ea3a68e3bcd063c7a2278e391a2c3de.png" width="60%"/></li><li><p>范围内查找（index）：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">listA = [<span class="string">&#x27;nihao&#x27;</span>, <span class="number">1</span>, <span class="number">0.2</span>, <span class="literal">True</span>]</span><br><span class="line">print(listA.index(<span class="number">0.2</span>, <span class="number">0</span>, <span class="number">3</span>)) <span class="comment">#返回该数据在列表中的下标，若不存在会报错</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/16/a3723fc8da3138ab5bbdbcb0466bae8f.png" width="60%"/><p>注意：index方法中三个参数分别是 查询的内容、起始下标、终止下标。</p></li></ul></li><li><p>增加：</p><ul><li><p>使用 <code>append</code> 追加：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">list</span> = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line"><span class="built_in">list</span>.append(<span class="string">&#x27;nihao&#x27;</span>)</span><br><span class="line">print(<span class="string">&#x27;追加后：&#x27;</span>, <span class="built_in">list</span>)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/16/80abbad644622bd88e7f5fcd12d34b7c.png" width="60%"/><p>注意：无论追加什么类型的数据，只占一个位置。</p></li><li><p>使用 <code>insert</code> 插入：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">list</span> = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line"><span class="built_in">list</span>.insert(<span class="number">1</span>, <span class="string">&#x27;aaa&#x27;</span>)</span><br><span class="line">print(<span class="built_in">list</span>)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/16/bd6ae7defb20c620be683768a516490d.png" width="60%"/><p>注意：</p><ul><li>insert方法有两个参数，分别为要插入的位置和数据项</li><li>上面提到的两种增加数据的方法均只能插入一个数据项</li></ul></li><li><p>批量增加 <code>extend</code>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">list</span> = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line">Range = <span class="built_in">list</span>(<span class="built_in">range</span>(<span class="number">10</span>))  <span class="comment"># 将range容器强转为list类型</span></span><br><span class="line">listA.extend(Range)</span><br><span class="line">print(listA)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/16/8c6144e3051fc6b1e50f9c3754981a74.png" width="60%"/><p>注意：extend方法的作用是将两个list中的数据合并为一个list，所以下面的代码亦能实现该操作：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">list</span> = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line">listA.extend([<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>])</span><br><span class="line">print(listA)</span><br></pre></td></tr></table></figure></li></ul></li><li><p>修改：</p><p>通过下标操作：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">list</span> = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line">listA[<span class="number">0</span>] = <span class="string">&#x27;enen&#x27;</span></span><br><span class="line">print(listA)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/16/a15f39774e37b96813fa18f82b6650e0.png" width="60%"/></li><li><p>删除：</p><ul><li><p>删除单个数据（del关键字+下标实现）：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">list</span> = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line"><span class="keyword">del</span> listA[<span class="number">0</span>]</span><br><span class="line">print(listA)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/16/c229f0e73d2acc193e344da9ff34113c.png" width="60%"/><p>注意：这种删除方法适用于删除单个数据项。</p></li><li><p>批量删除数据（切片操作实现）：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">list</span> = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line"><span class="keyword">del</span> listA[<span class="number">1</span>:<span class="number">2</span>]</span><br><span class="line">print(listA)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/16/07b08bd40a4c65c8e48a59615e85b95b.png" width="60%"/></li><li><p>移除指定的数据（remove）：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">listA = [<span class="string">&#x27;nihao&#x27;</span>, <span class="number">1</span>, <span class="number">0.2</span>, <span class="literal">True</span>]</span><br><span class="line">listA.remove(<span class="number">0.2</span>)</span><br><span class="line">print(listA)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/16/2bef726ff50f7320fe1ecdf3b7d11092.png" width="60%"/></li><li><p>移除指定下标的数据（pop）：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">listA = [<span class="string">&#x27;nihao&#x27;</span>, <span class="number">1</span>, <span class="number">0.2</span>, <span class="literal">True</span>]</span><br><span class="line">listA.pop(<span class="number">1</span>)</span><br><span class="line">print(listA)</span><br></pre></td></tr></table></figure><p>运行结果：</p><p>注意：要区分 <code>remove</code> 和 <code>pop</code> 的区别</p><ul><li>remove：移除指定内容的数据项</li><li>pop：移除指定下标的数据项</li></ul></li></ul></li></ol><h2 id="元组"><a href="#元组" class="headerlink" title="元组"></a>元组</h2><blockquote><p>是一种不可变的序列，创建之后不能做任何修改</p></blockquote><h3 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h3><ol><li><p>定义：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tupleA = (<span class="number">1</span>, <span class="number">2.001</span>, <span class="literal">True</span>, [<span class="string">&#x27;nihao&#x27;</span>, <span class="string">&#x27;python&#x27;</span>])</span><br><span class="line">print(tupleA)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/16/d00bef7282c5ecc3671e7aba1d879f4a.png" width="60%"/></li><li><p>特点：</p><ul><li><p>创建后数据值不能修改</p></li><li><p>使用 ( ) 来定义一个元组，数据之间使用逗号分隔</p></li><li><p>元组中的数据可以是任意类型的数据</p></li><li><p>当元组中只有一个数据时要加上逗号，否则解释器会当做整型来处理</p></li><li><p>支持切片操作</p></li></ul></li></ol><h3 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h3><ol><li><p>下标：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tupleA = (<span class="number">1</span>, <span class="number">2.001</span>, <span class="literal">True</span>, [<span class="string">&#x27;nihao&#x27;</span>, <span class="string">&#x27;python&#x27;</span>])</span><br><span class="line">print(tupleA[<span class="number">3</span>])</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/16/46818aba840003c53a43d9103346d0fd.png" width="60%"/></li><li><p>循环遍历：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tupleA = (<span class="number">1</span>, <span class="number">2.001</span>, <span class="literal">True</span>, [<span class="string">&#x27;nihao&#x27;</span>, <span class="string">&#x27;python&#x27;</span>])</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> tupleA:</span><br><span class="line">    print(i,end=<span class="string">&#x27; &#x27;</span>)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/16/c0c8e7fb060c32d4666e9ffd1aadc939.png" width="60%"/></li><li><p>切片操作：</p><ul><li><p>切片正序输出：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tupleA = (<span class="number">1</span>, <span class="number">2.001</span>, <span class="literal">True</span>, [<span class="string">&#x27;nihao&#x27;</span>, <span class="string">&#x27;python&#x27;</span>])</span><br><span class="line">print(tupleA[::])</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/16/8b6c8165becd38a777cbcb3d4e24809b.png" width="60%"/></li><li><p>切片倒序输出：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tupleA = (<span class="number">1</span>, <span class="number">2.001</span>, <span class="literal">True</span>, [<span class="string">&#x27;nihao&#x27;</span>, <span class="string">&#x27;python&#x27;</span>])</span><br><span class="line">print(tupleA[::<span class="number">-1</span>])</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/16/4918c88f32c6d087616f14374a922d4b.png" width="60%"/></li><li><p>易错：</p><ul><li><p>步长：</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">      tupleA = (<span class="number">1</span>, <span class="number">2.001</span>, <span class="literal">True</span>, [<span class="string">&#x27;nihao&#x27;</span>, <span class="string">&#x27;python&#x27;</span>])</span><br><span class="line">print(tupleA[::<span class="number">-2</span>]) <span class="comment">#步长为2，隔一个取一个</span></span><br></pre></td></tr></table></figure><p>  运行结果：</p>  <img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/16/e431289fb871972701c3f2c565be738e.png" width="60%"/></li><li><p>切片方向：</p> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tupleA = (<span class="number">1</span>, <span class="number">2.001</span>, <span class="literal">True</span>, [<span class="string">&#x27;nihao&#x27;</span>, <span class="string">&#x27;python&#x27;</span>])</span><br><span class="line">print(tupleA[<span class="number">-2</span>:<span class="number">-1</span>:]) <span class="comment">#从左向右，从-2位置到-1位置连续取</span></span><br></pre></td></tr></table></figure><p> 运行结果：</p> <img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/16/afdb2b3cf3da322605c6ffd9045ed908.png" width="60%"/><p> 注意：根据上图可知，当元组只有一个数据时要添加一个逗号避免被解释器当做整型</p></li><li><p>验证元组不可变：</p><pre><code><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tupleA = ()</span><br><span class="line">print(<span class="built_in">id</span>(tupleA))</span><br><span class="line">tupleA = (<span class="string">&#x27;nihao&#x27;</span>,)</span><br><span class="line">print(<span class="built_in">id</span>(tupleA))</span><br></pre></td></tr></table></figure></code></pre><p> 运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/16/8909f460d278e8ad27c5463896a02910.png" width="60%"/><p>注意：据上图可知，相同名称的元组再次被赋值后内存地址会发生改变，以此可验证元组数据不可修改的特性</p></li></ul></li></ul></li></ol><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><ul><li><p>尽管元组数据不能修改但元组中列表的数据可修改</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tupleA = (<span class="number">1</span>, <span class="number">2.001</span>, <span class="literal">True</span>, [<span class="string">&#x27;nihao&#x27;</span>, <span class="string">&#x27;python&#x27;</span>])</span><br><span class="line">tupleA[<span class="number">3</span>][<span class="number">0</span>] = <span class="string">&#x27;haha&#x27;</span></span><br><span class="line">print(tupleA)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/16/8e271bf90f8d3279a46e47af1bebcbad.png" width="60%"/></li><li><p>强制类型转换</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tupleC=<span class="built_in">tuple</span>(<span class="built_in">range</span>(<span class="number">10</span>))</span><br><span class="line">print(<span class="built_in">type</span>(tupleC))</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/16/9950654a7376a2fd64fa5b983dd28f42.png" width="60%"/></li><li><p>统计数据出现的次数：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tupleC=<span class="built_in">tuple</span>(<span class="built_in">range</span>(<span class="number">10</span>))</span><br><span class="line">print(tupleC.count(<span class="number">1</span>))</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/16/11b652b287e48a770425a1190c1f4fcf.png" width="60%"/></li></ul><h1 id="字典"><a href="#字典" class="headerlink" title="字典"></a>字典</h1><blockquote><p>python中重要的数据类型，以键值对形式创建并用大括号包裹</p></blockquote><h2 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h2><ol><li><p>定义：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dictA = &#123;&#125;</span><br><span class="line">print(<span class="built_in">type</span>(dictA))</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/16/c5e9fb03a0de7f50b6203390f81e069b.png" width="60%"/></li><li><p>特点：</p><ul><li>不属于序列类型（无序），没有下标概念</li><li>用{}来表示字典对象，键值对之间使用逗号分隔</li><li>键是不可变的的类型（元组、字符串），值可以是任意类型</li><li>键要唯一，否则后者覆盖前者</li></ul></li></ol><h2 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h2><ol><li><p>增加：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dictA = &#123;&#125;</span><br><span class="line">dictA[<span class="string">&#x27;name&#x27;</span>] = <span class="string">&#x27;菜徐坤&#x27;</span></span><br><span class="line">print(dictA)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/16/16476fd475fcdc5703a29f17abf02f98.png" width="60%"/></li><li><p>查询：</p><ul><li><p>查询值：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dictA = &#123;&#125;</span><br><span class="line">dictA[<span class="string">&#x27;name&#x27;</span>] = <span class="string">&#x27;菜徐坤&#x27;</span></span><br><span class="line">print(dictA[<span class="string">&#x27;name&#x27;</span>])</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/16/b285430cdccfa425f67291b1b4c3f2fb.png" width="60%"/></li><li><p>查询所有的键：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dictA = &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;菜徐坤&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">30</span>, <span class="string">&#x27;school&#x27;</span>: <span class="string">&#x27;北京电影学院&#x27;</span>&#125;</span><br><span class="line">print(dictA.keys())</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/16/cbbbd563efaf9d590e5ff28f6aa65031.png" width="60%"/></li><li><p>查询所有的值：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dictA = &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;菜徐坤&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">30</span>, <span class="string">&#x27;school&#x27;</span>: <span class="string">&#x27;北京电影学院&#x27;</span>&#125;</span><br><span class="line">print(dictA.values())</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/16/a86f231d99a3dbb469ff180c4a617647.png" width="60%"/></li><li><p>查询所有的键值对：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dictA = &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;菜徐坤&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">30</span>, <span class="string">&#x27;school&#x27;</span>: <span class="string">&#x27;北京电影学院&#x27;</span>&#125;</span><br><span class="line">print(dictA.items())</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/16/4bca89370d29ca0b8107030e8287c160.png" width="60%"/></li><li><p>遍历字典：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">dictA = &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;菜徐坤&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">30</span>, <span class="string">&#x27;school&#x27;</span>: <span class="string">&#x27;北京电影学院&#x27;</span>&#125;</span><br><span class="line"><span class="keyword">for</span> key,values <span class="keyword">in</span> dictA.items(): <span class="comment">#第一种遍历方法</span></span><br><span class="line">    print(<span class="string">&#x27;&#123;&#125;:&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(key,values)) </span><br><span class="line"><span class="comment">#for item in dictA.items(): #第二种遍历方法</span></span><br><span class="line"><span class="comment">#    print(item, end=&#x27; &#x27;)</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/16/db68d8db3ea33792a8f45ddbe8a647ca.png" width="60%"/></li></ul></li><li><p>修改：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">dictA = &#123;&#125;</span><br><span class="line">dictA[<span class="string">&#x27;name&#x27;</span>] = <span class="string">&#x27;菜徐坤&#x27;</span></span><br><span class="line">print(dictA)</span><br><span class="line">dictA[<span class="string">&#x27;name&#x27;</span>] = <span class="string">&#x27;肖战&#x27;</span></span><br><span class="line">print(dictA)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/16/766677ffb739cb20dec1f13dee565a85.png" width="60%"/></li><li><p>删除：</p><ul><li><p>del关键字：</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dictA = &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;菜徐坤&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">30</span>, <span class="string">&#x27;school&#x27;</span>: <span class="string">&#x27;北京电影学院&#x27;</span>&#125;</span><br><span class="line"><span class="keyword">del</span> dictA[<span class="string">&#x27;name&#x27;</span>]</span><br><span class="line">print(dictA)</span><br></pre></td></tr></table></figure><p>  运行结果：</p>  <img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/16/b8447f1721f617bfd72ea9801716a2ca.png" width="60%"/></li><li><p>pop方法：</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dictA = &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;菜徐坤&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">30</span>, <span class="string">&#x27;school&#x27;</span>: <span class="string">&#x27;北京电影学院&#x27;</span>&#125;</span><br><span class="line">dictA.pop(<span class="string">&#x27;name&#x27;</span>)</span><br><span class="line">print(dictA)</span><br></pre></td></tr></table></figure><p>  运行结果：</p>  <img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/16/222c52066c17ee6f49c9f9d64f6fe66a.png" width="60%"/></li></ul></li></ol><h1 id="公用方法"><a href="#公用方法" class="headerlink" title="公用方法"></a>公用方法</h1><h2 id="合并（-）"><a href="#合并（-）" class="headerlink" title="合并（+）"></a>合并（+）</h2><blockquote><p>使用于字符串、列表、元组</p></blockquote><ol><li><p>字符串：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">strA = <span class="string">&#x27;hello &#x27;</span></span><br><span class="line">strB = <span class="string">&#x27;python&#x27;</span></span><br><span class="line">print(strA + strB)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/8692155278de08125ee068862c1ef1aa.png" width="60%"/></li><li><p>列表：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">listA = [<span class="string">&#x27;hello&#x27;</span>]</span><br><span class="line">listB = [<span class="string">&#x27;python&#x27;</span>]</span><br><span class="line">print(listA + listB)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/47d5a0343573667eef97c8734538117a.png" width="60%"/></li><li><p>元组：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tupleA = (<span class="string">&#x27;hello&#x27;</span>,)</span><br><span class="line">tupleB = (<span class="string">&#x27;python&#x27;</span>,)</span><br><span class="line">print(tupleA + tupleB)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/53fe95b9ee7db6351022b3a67f132620.png" width="60%"/></li></ol><h2 id="复制（-）"><a href="#复制（-）" class="headerlink" title="复制（*）"></a>复制（*）</h2><blockquote><p>适用于字符串、列表、元组</p></blockquote><ol><li><p>字符串：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">strB = <span class="string">&#x27;python&#x27;</span></span><br><span class="line">print(strB * <span class="number">3</span>)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/57892190fbf05165e2a91078e409adcb.png" width="60%"/></li><li><p>列表：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">listB = [<span class="string">&#x27;python&#x27;</span>]</span><br><span class="line">print(listB * <span class="number">3</span>)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/882de3e628be30ceef01400577c88c11.png" width="60%"/></li><li><p>元组：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tupleB = (<span class="string">&#x27;python&#x27;</span>,)</span><br><span class="line">print(tupleB * <span class="number">3</span>)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/65c84b4f86deed929a2156cc3e7dd845.png" width="60%"/></li></ol><h2 id="判断（in）"><a href="#判断（in）" class="headerlink" title="判断（in）"></a>判断（in）</h2><blockquote><p>适用于字符串、列表、元组、字典</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">strA=<span class="string">&#x27;hello python&#x27;</span></span><br><span class="line">print(<span class="string">&#x27;e&#x27;</span> <span class="keyword">in</span> strA)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/ae8012392cd437fb38ba34dd1531a2bc.png" width="60%"/><p>注意：</p><ul><li>返回值为 Bool 类型</li><li>当字典类型的数据使用 in 做判断时，通常判断的是 key 而不是 value</li></ul>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Day02 流程控制结构</title>
      <link href="29585.html"/>
      <url>29585.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>本文章最初发表在<a href="https://plushine.cn">XJHui’s Blog</a>，未经允许，任何人禁止转载！</p><p>为使您获得最好的阅读体验，强烈建议您点击 <a href="https://plushine.cn/29585.html">这里</a> 前往 XJHui’s Blog 查看！</p><h1 id="引入"><a href="#引入" class="headerlink" title="引入"></a>引入</h1><p>Day1 学了怎么输入、输出一些东西，但这些完全不能满足编程的需要。</p><ul><li><p>案例1：判断互不相等的两个数的大小并输出较大的那个数。</p><p>很显然，简单的输入输出是实现不了的，这里要用到 <code>选择流程控制</code>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a, b = <span class="number">1</span>, <span class="number">2</span></span><br><span class="line"><span class="keyword">if</span> a &gt; b:</span><br><span class="line">    print(a)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(b)</span><br></pre></td></tr></table></figure></li><li><p>案例2：输出0到10。</p><p>你心里想：简单，看我的代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">&quot;1 2 3 4 5 6 7 8 9 10&quot;</span>)</span><br></pre></td></tr></table></figure><p>这是输出1-10，那要是改成1-100000？上面那样输出岂不是要类似！</p><p>这里要用到 <code>循环流程控制</code>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">11</span>):</span><br><span class="line">    print(i)</span><br></pre></td></tr></table></figure></li></ul><p>注意：上面代码是让你意识到 <code>流程控制结构</code> 在编程中的 <code>重要性</code> 和 <code>便利性</code>，具体用法见下面的讲解。</p><h1 id="选择流程"><a href="#选择流程" class="headerlink" title="选择流程"></a>选择流程</h1><h2 id="单分支"><a href="#单分支" class="headerlink" title="单分支"></a>单分支</h2><ol><li><p>语法结构：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> 条件表达式:</span><br><span class="line">    代码指令</span><br></pre></td></tr></table></figure><p>注意：</p><ul><li><p>条件表达式可以是 <code>比较运算符</code>、<code>逻辑运算符</code>、<code>两者混合形式</code></p></li><li><p>python代码要严格遵守缩进规则，正确缩进：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/15/077ff04c528c080577e388aa5ddb1cb2.png" width="80%"/><p>错误缩进：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/15/bd39decefb9c7aca962a400f909ed124.png" width="80%"/><p>Pycharm会自动缩进哦！</p></li></ul></li><li><p>案例：键盘读取成绩，如果成绩&gt;=60分，输出“成绩合格！”，否则不做输出。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">score = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入成绩：&quot;</span>))</span><br><span class="line"><span class="keyword">if</span> score &gt;= <span class="number">60</span>:</span><br><span class="line">    print(<span class="string">&quot;成绩合格！&quot;</span>)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/15/9fd6eb0defc6bb57a7b2b0d48c25b2c9.png" width="80%"/><p>小窍门：上gif吧，默认回车后会自动缩进，加pass后自动取消缩进，看不懂可以忽略。</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/15/f73f6107915e407b96f48b54347cc502.png" width="80%"/></li></ol><h2 id="双分支"><a href="#双分支" class="headerlink" title="双分支"></a>双分支</h2><ol><li><p>区别：成绩&gt;=60时输出一句话单分支可以实现，如果还想&lt;60时输出另一句话那就用到双分支。</p></li><li><p>语法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> 条件表达式:</span><br><span class="line">    代码指令</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    代码指令</span><br></pre></td></tr></table></figure></li><li><p>案例：键盘读取成绩，如果成绩&gt;=60分，输出“成绩合格！”，否则输出“成绩不合格！”。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">score = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入成绩：&quot;</span>))</span><br><span class="line"><span class="keyword">if</span> score &gt;= <span class="number">60</span>:</span><br><span class="line">    print(<span class="string">&quot;成绩合格！&quot;</span>)</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">&quot;成绩不合格！&quot;</span>)</span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/15/1734780a2be7f9a40c3a8eb29127c10c.png" width="80%"/><p>注意：代码中的pass可以不加！</p></li></ol><h2 id="多分支"><a href="#多分支" class="headerlink" title="多分支"></a>多分支</h2><ol><li><p>区别：原来基础上加一条成绩=100输出“真优秀！”，就要用到多分支。</p></li><li><p>语法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> 条件表达式:</span><br><span class="line">    代码指令</span><br><span class="line"><span class="keyword">elif</span>:</span><br><span class="line">    代码指令</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    代码指令</span><br></pre></td></tr></table></figure></li><li><p>案例：简单读取成绩，如果成绩=100分，输出“真优秀！”，如果成绩&gt;=60分&lt;100分，输出“成绩合格！”，否则输出“成绩不合格！”。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">score = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入成绩：&quot;</span>))</span><br><span class="line"><span class="keyword">if</span> score == <span class="number">100</span>:</span><br><span class="line">    print(<span class="string">&quot;真优秀！&quot;</span>)</span><br><span class="line"><span class="keyword">elif</span> score &gt;= <span class="number">60</span>:</span><br><span class="line">    print(<span class="string">&quot;成绩合格！&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">&quot;成绩不合格！&quot;</span>)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/15/9a8d5ae9b6f7ad3ce34aecd7ae97ae1f.png" width="80%"/></li></ol><h1 id="循环流程"><a href="#循环流程" class="headerlink" title="循环流程"></a>循环流程</h1><h2 id="while"><a href="#while" class="headerlink" title="while"></a>while</h2><blockquote><p>循环次数不确定时使用</p></blockquote><ol><li><p>语法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> 条件表达式:</span><br><span class="line">    代码指令</span><br></pre></td></tr></table></figure></li><li><p>要素：</p><ul><li>初始值</li><li>条件表达式</li><li>计数变量的变化</li></ul></li><li><p>案例：输出30以内2的倍数。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cnt = <span class="number">1</span>  <span class="comment"># 初始值</span></span><br><span class="line"><span class="keyword">while</span> cnt * <span class="number">2</span> &lt;= <span class="number">30</span>:  <span class="comment"># 条件表达式</span></span><br><span class="line">    print(<span class="built_in">str</span>(cnt * <span class="number">2</span>), end=<span class="string">&#x27; &#x27;</span>) <span class="comment"># end=&#x27;&#x27;，不换行输出</span></span><br><span class="line">    cnt += <span class="number">1</span>  <span class="comment"># 计数变量的变化</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/15/ed47667f08219572262a32fc42ffdfe0.png" width="80%"/></li></ol><h2 id="for"><a href="#for" class="headerlink" title="for"></a>for</h2><blockquote><p>循环次数确定时使用</p></blockquote><ol><li><p>语法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> 变量 <span class="keyword">in</span> 容器:</span><br><span class="line">    代码指令</span><br></pre></td></tr></table></figure></li><li><p>要素：</p><ul><li>变量</li><li>容器（集合、列表。。）</li></ul></li><li><p>案例：遍历字符串“大家好，我是练习生菜徐坤！”。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">str</span> = <span class="string">&quot;大家好，我是练习生菜徐坤！&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">str</span>:</span><br><span class="line">    print(i)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/15/d4ea3a20e6df798a6aed979492767399.png" width="80%"/><p>注意：上例说明字符串也是一个集合（字符串类型的集合）</p></li><li><p>拓展range函数：生成一个数据集合列表</p><ul><li><p>语法：range(起始值，结束值+1，步长)</p></li><li><p>注意：步长不能为0且上述范围为 <code>左闭右开区间</code></p></li><li><p>案例：遍历1到10并输出。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">11</span>):  <span class="comment"># 步长默认为1</span></span><br><span class="line">    print(i, end=<span class="string">&#x27; &#x27;</span>)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/15/609cd1c15153151cb0b188906d0349f6.png" width="80%"/></li></ul></li></ol><h2 id="break-continue"><a href="#break-continue" class="headerlink" title="break/continue"></a>break/continue</h2><ol><li><p>含义：</p><ul><li>break：跳出循环</li><li>continue：跳过本次循环</li></ul></li><li><p>案例1：输出所有小于10的正整数：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">100</span>): <span class="comment"># 遍历1-99</span></span><br><span class="line">    <span class="keyword">if</span> i &gt;= <span class="number">10</span>:</span><br><span class="line">        <span class="keyword">break</span>  <span class="comment"># &gt;=10时，跳出循环</span></span><br><span class="line">    print(i, end=<span class="string">&#x27; &#x27;</span>)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/15/04980c90350e6d40c72ada908d75653a.png" width="80%"/></li><li><p>案例2：输出所有&lt;10的偶正整数。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">11</span>):</span><br><span class="line">    <span class="keyword">if</span> i % <span class="number">2</span> != <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    print(i, end=<span class="string">&#x27; &#x27;</span>)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/15/a82e7ec4345d3f0f5b7d626fc79fc3cf.png" width="80%"/></li></ol><hr/><p>不足之处，欢迎留言，会及时回复，及时更正！</p><p>创作不易，感谢支持！</p>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Day01 python基础语法</title>
      <link href="59885.html"/>
      <url>59885.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>本文章最初发表在<a href="https://plushine.cn">XJHui’s Blog</a>，未经允许，任何人禁止转载！</p><p>为使您获得最好的阅读体验，强烈建议您点击 <a href="https://plushine.cn/59885.html">这里</a> 前往 XJHui’s Blog 查看！</p><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>从来没接触过人工智能，语言用的是python。</p><p>趁机可以补补python，其实大一的时候已经学过，但当时没认真学有点可惜呀。</p><p>尽管对python基础的东西还有点印象，还是决定尽量把笔记写的详细一些也便于复习。</p><p>学习平台：<a href="https://www.bilibili.com/video/BV1vA411b7Rn?p=1">b站</a> ，感谢up主，也欢迎小伙伴们和我学习一起呀！</p><p>由于课程还没有更新完，也不清楚up主能否免费把 99天 的课程全部更新，但至少更1天课程我写一天笔记。</p><h1 id="hello-world"><a href="#hello-world" class="headerlink" title="hello world"></a>hello world</h1><h2 id="安装和验证"><a href="#安装和验证" class="headerlink" title="安装和验证"></a>安装和验证</h2><ol><li><p>点击 <a href="https://www.python.org/">这里</a> 进入python官网，点击download选择电脑对应版本下载（windows为例）：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/12/cd5211dc03eeb4c230cd1d6e8c6e8985.png" width="70%"/></li><li><p>下载完成后，开始安装</p><ul><li><p>共两个选项，分别表示默认安装和自定义安装，选择第二个：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/12/b3a62be58dc766072282dc2a102ab551.png" width="70%"/><p>原因：默认的安装路径很复杂，安装后很难找到其位置。</p></li><li><p>选择 <code>next</code>：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/12/14c4045175badcc85d2b322750b329d4.png" width="70%"/></li><li><p>勾选 “加入环境变量”，修改安装路径后开始安装：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/12/94491da99d2207468470e476dc96517c.png" width="70%"/></li></ul></li><li><p>验证安装</p><ul><li><p>快捷键 <code>win+R</code> ，输入 <code>cmd</code>：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/12/b160a47c11829d2a84c450b4803421f6.png" width="70%"/></li><li><p>命令行输入 <code>python</code>：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/12/206a2c95364e0db1b43ad3980c15719b.png" width="70%"/><p>如果出现上图 <code>&gt;&gt;&gt;</code> 字样，表示安装成功。</p></li></ul></li></ol><h2 id="命令行输出"><a href="#命令行输出" class="headerlink" title="命令行输出"></a>命令行输出</h2><ol><li><p>按照上面的步骤，在 <code>&gt;&gt;&gt;</code> 后输入代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">&quot;hello world&quot;</span>)</span><br></pre></td></tr></table></figure></li><li><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/12/35ca808ce4776dbb96658e2b615f564e.png" width="70%"/></li></ol><h2 id="运行py文件"><a href="#运行py文件" class="headerlink" title="运行py文件"></a>运行py文件</h2><ol><li><p>任意位置新建 <code>test.txt</code> 文件：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/12/5eda97757b93e90c137872d753aad6a3.png" width="70%"/><p>注意：如果不显示txt后缀，可按下图设置：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/12/d628d5855413cd0bfa096e4224a8d560.png" width="70%"/></li><li><p>记事本打开并编辑内容为：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/12/0827d314cf37c70cfc8c547378742454.png" width="70%"/></li><li><p>修改后缀为 <code>.py</code>：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/12/4bf6002644e8a145662c38372d62494e.png" width="70%"/></li><li><p>地址栏输入 <code>cmd</code> ，回车：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/12/d6c9925ea2fb67ffe4677085a0c307d6.png" width="70%"/><p>输入代码：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python test.py</span><br></pre></td></tr></table></figure></li><li><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/12/a64e53fabb8a4a790de0ee27528d51a0.png" width="70%"/></li></ol><h2 id="方法总结"><a href="#方法总结" class="headerlink" title="方法总结"></a>方法总结</h2><p>上面介绍了两种输出 <code>hello world</code> 的方法，都有各自的局限性，以后会使用工具（pycharm），会简单一些：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/12/659ff247d8766036ca33de467c731efa.png" width="80%"/><h1 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h1><h2 id="含义"><a href="#含义" class="headerlink" title="含义"></a>含义</h2><ol><li><p>作用：提高代码可读性，便于代码调试和以后参考、修改。</p></li><li><p>必要性：比较下面两端代码，你喜欢哪个？（有注释/无注释）</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/12/1aad5c0223fde1b31cb5f21d0924108e.png" width="80%"/><p>上图中注释的作用是 <code>解释代码含义</code> ，除此之外注释作用还有 <code>作者信息</code>..</p></li></ol><h2 id="具体分类"><a href="#具体分类" class="headerlink" title="具体分类"></a>具体分类</h2><ol><li><p>单行注释：使用一个<code>#</code>，来表示单行注释</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 输出hello world</span></span><br><span class="line">print(<span class="string">&quot;hello world&quot;</span>)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/12/f0d4cdcb40bcaf3d1a20d3eea7282f49.png" width="80%"/><p>注意：从上图可以看出注释中的内容不会被解释器解释！</p></li><li><p>多行注释：使用 <code>&#39;&#39;&#39;</code> 或 <code>&quot;&quot;&quot;</code> 并讲要注释的部分加载其之间：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">输出hello world</span></span><br><span class="line"><span class="string">这里是注释</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line">print(<span class="string">&quot;hello world&quot;</span>)</span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">输出hello world</span></span><br><span class="line"><span class="string">这里是注释</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">print(<span class="string">&quot;hello world&quot;</span>)</span><br></pre></td></tr></table></figure></li><li><p>特殊注释：一般放在代码最前面</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"><span class="comment">#-- coding=utf-8 --</span></span><br></pre></td></tr></table></figure><p>分表指定 <code>python解释器的路径</code> 和 <code>编码格式</code></p><p>注意：python2默认采用ASCII编码，python3默认采用utf-8编码，所以上述注释在python2中常见。</p></li></ol><h1 id="Pycharm"><a href="#Pycharm" class="headerlink" title="Pycharm"></a>Pycharm</h1><p>适用于专业开发人员的 <code>Python IDE</code>，对提高代码质量、整洁度提供很大方便。</p><p>官网链接 <a href="https://www.jetbrains.com/pycharm/download/#section=windows">在这</a>，提供专业版、社区版（免费）供下载。</p><p>安装方法不再赘述。</p><h2 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h2><ol><li><p>选择 <code>创建新项目</code>：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/12/94c689507d1cbfbce9980a58a513a748.png" width="80%"/></li><li><p>确定 <code>项目路径</code> 和 <code>python环境</code>：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/12/6ba3f1240975eed6d512548955f78cf3.png" width="80%"/></li></ol><h2 id="创建文件"><a href="#创建文件" class="headerlink" title="创建文件"></a>创建文件</h2><ol><li><p>在创建的项目上 <code>右键</code>，选择 <code>new</code>，<code>Python File</code>：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/12/652a64296559743de301a026f0f22546.png" width="80%"/></li><li><p>输入文件名：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/12/271d68774a4aa2c6ae62123865a6cec5.png" width="50%"/></li></ol><h2 id="hello-world-1"><a href="#hello-world-1" class="headerlink" title="hello world"></a>hello world</h2><ol><li><p>在创建的python文件中，输入代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">&quot;hello world&quot;</span>)</span><br></pre></td></tr></table></figure></li><li><p>点击运行按钮：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/12/f833dd73414b8f7a3cb2d9776b2b8920.png" width="50%"/></li><li><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/12/db2a3b64d17b678749c435184951d183.png" width="50%"/></li></ol><h2 id="快捷键和设置"><a href="#快捷键和设置" class="headerlink" title="快捷键和设置"></a>快捷键和设置</h2><p>占位，待更新…</p><h1 id="变量和数据类型"><a href="#变量和数据类型" class="headerlink" title="变量和数据类型"></a>变量和数据类型</h1><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><h3 id="是什么？"><a href="#是什么？" class="headerlink" title="是什么？"></a>是什么？</h3><ol><li><p>举个例子解释什么是变量？</p><p>方程式应该都知道，例如：y=x+5；其中 y、x都是变量，可以赋任意值。</p></li><li><p>定义：变量是程序中临时存放数据的场所。</p></li></ol><h3 id="如何定义？"><a href="#如何定义？" class="headerlink" title="如何定义？"></a>如何定义？</h3><ol><li><p>语法：变量名 = 数据</p></li><li><p>案例：定义一个变量，名为a，值为10：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/12/9bdef5a17626afa16e85a6b9666b4a8d.png" width="30%"/></li></ol><h3 id="使用变量"><a href="#使用变量" class="headerlink" title="使用变量"></a>使用变量</h3><p>直接输出：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">10</span></span><br><span class="line">print(a)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/12/7c7034df838a68c87258bfe99b7de2fc.png" width="70%"/><p>注意：</p><ul><li><p>赋值时不需要指定数据类型</p></li><li><p>变量需要先定义才能使用，否则报错</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">print(a)</span><br><span class="line">a = <span class="number">10</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/12/7b26359e700d9d6af351cf5dcce652fc.png" width="70%"/></li><li><p>变量的值可以发生改变，例如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">10</span></span><br><span class="line">a = <span class="number">99</span> <span class="comment">#同种类型</span></span><br><span class="line">print(a)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/12/62931497198e86d59c91c83bc1d472a6.png" width="70%"/><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">10</span></span><br><span class="line">a = <span class="string">&#x27;菜徐坤&#x27;</span> <span class="comment">#非同种类型</span></span><br><span class="line">print(a)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/12/a2c928fcc685c23894d7e98939a04d78.png" width="70%"/></li></ul><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/12/83b5bf5a336d9cd2907e4b8559a3ab99.png" width="80%"/><h3 id="基本数据类型"><a href="#基本数据类型" class="headerlink" title="基本数据类型"></a>基本数据类型</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">10</span> <span class="comment">#整型</span></span><br><span class="line">print(<span class="built_in">type</span>(a))</span><br><span class="line">b = <span class="number">4.4</span> <span class="comment">#浮点型</span></span><br><span class="line">print(<span class="built_in">type</span>(b))</span><br><span class="line">c = <span class="literal">True</span> <span class="comment">#布尔型</span></span><br><span class="line">print(<span class="built_in">type</span>(c))</span><br><span class="line">d = <span class="string">&#x27;菜徐坤&#x27;</span> <span class="comment">#字符串</span></span><br><span class="line">print(<span class="built_in">type</span>(d))</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/12/6c06cb5e251f28a0061b97d70e0d5cbb.png" width="70%"/><h3 id="高级数据类型"><a href="#高级数据类型" class="headerlink" title="高级数据类型"></a>高级数据类型</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">a = [] <span class="comment">#列表类型</span></span><br><span class="line">print(<span class="built_in">type</span>(a))</span><br><span class="line">b = () <span class="comment">#元组类型</span></span><br><span class="line">print(<span class="built_in">type</span>(b))</span><br><span class="line">c = &#123;&#125; <span class="comment">#字典类型</span></span><br><span class="line">print(<span class="built_in">type</span>(c))</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/12/c90a212f978dc6c2de0c087d52667304.png" width="70%"/><h2 id="变量命名"><a href="#变量命名" class="headerlink" title="变量命名"></a>变量命名</h2><h3 id="规则"><a href="#规则" class="headerlink" title="规则"></a>规则</h3><ol><li>开头必须是字母（a-z、A-Z）或下划线（_）。</li><li>其他位置可以时字母、数字、下划线</li><li>变量区分大小写</li><li>Python关键字不能用作变量名</li></ol><h3 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h3><ol><li><p>开头规则：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">num = <span class="number">1</span>  <span class="comment"># 小写字母开头</span></span><br><span class="line">Num = <span class="number">2</span>  <span class="comment"># 大写字母开头</span></span><br><span class="line">_num = <span class="number">3</span>  <span class="comment"># 下划线开头</span></span><br><span class="line"></span><br><span class="line">print(num, Num, _num)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/12/763baa1651dea8cdb7f82b63e6a14cc7.png" width="70%"/><p>错误示范：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>num = <span class="number">10</span></span><br><span class="line">print(<span class="number">1</span>num)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/13/bd8ad8283d6a03d4907f1b7c1966d7e0.png" width="70%"/></li><li><p>命名规范：</p><ul><li>见名知意：例如 <code>password</code> 用作密码、<code>username</code> 用作用户名。</li><li>驼峰命名法：小驼峰：<code>passWord</code> 、大驼峰：<code>PassWord</code></li><li>下划线命名法：<code>pass_word</code></li></ul></li></ol><h1 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h1><h2 id="算数运算符"><a href="#算数运算符" class="headerlink" title="算数运算符"></a>算数运算符</h2><ol><li><p>种类：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/13/ed0e3fcae50ce0d1dfa6420285e4d373.png" width="80%"/></li><li><p>简单使用：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">4</span></span><br><span class="line">b = <span class="number">2</span></span><br><span class="line">print(a + b)</span><br><span class="line">print(a - b)</span><br><span class="line">print(a * b)</span><br><span class="line">print(a ** b)  <span class="comment"># 指数</span></span><br><span class="line">print(a % b)  <span class="comment"># 取模</span></span><br><span class="line">print(a / b)</span><br><span class="line">print(a // b)  <span class="comment"># 相除后取整数部分</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/13/de08774a300a109e7a4e32d9d5b3ff66.png" width="80%"/></li><li><p>案例：计算下式结果：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">4</span></span><br><span class="line">b = <span class="number">2</span></span><br><span class="line">c = <span class="number">3</span></span><br><span class="line">print(a + b * c)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/13/96f1734c795cb82a91f1fa1d4ff52c98.png" width="80%"/><p>总结：当有多个变量时，优先级与数学中相同（先乘除后加减..）</p></li></ol><h2 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a>比较运算符</h2><ol><li><p>种类：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/13/575eaf4071f539c78d7a52c53a001157.png" width="80%"/></li><li><p>简单使用：</p><p>补充：bool类型，只有True和False。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a, b = <span class="number">3</span>, <span class="number">4</span>  <span class="comment"># 分别将3、4赋值给a、b</span></span><br><span class="line">print(<span class="number">3</span> &gt; <span class="number">4</span>)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/13/7b26f065aca28ae87cc2e1b8d0d4ab2f.png" width="80%"/><p>总结：比较运算符返回值为bool类型。</p></li><li><p>案例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a, b = <span class="number">3</span>, <span class="number">4</span>  <span class="comment"># 分别将3、4赋值给a、b</span></span><br><span class="line">print(<span class="number">3</span> != <span class="number">4</span>) <span class="comment"># !表示不</span></span><br><span class="line">print(<span class="number">3</span> &gt;= <span class="number">4</span>) </span><br><span class="line">print(<span class="number">3</span> == <span class="number">4</span>) <span class="comment"># 要区分==和=，=是赋值，==是判断是否相等</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/13/fb0411c81cbfe76ecb680e4f556a35f5.png" width="80%"/></li></ol><h2 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h2><ol><li><p>种类：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/13/6bcf9b3c0a715b6f8de268ffdc9c4602.png" width="80%"/></li><li><p>and的使用</p><p>规则：</p><ul><li>and两边均为True结果才为True</li><li>否则为False</li></ul><p>案例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a, b, c, d = <span class="number">1</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">4</span></span><br><span class="line">print((a == b) <span class="keyword">and</span> (c == d))</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/13/42f6f61c46ad2a61247593aeb8928f4d.png" width="80%"/><p>解释：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/13/6834ab019bafb3f97989acc562ddf5d4.png" width="50%"/></li><li><p>or的使用</p><p>规则：</p><ul><li>有一边为True即为True</li><li>否则为False</li></ul><p>案例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a, b, c, d = <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span></span><br><span class="line">print((a == b) <span class="keyword">or</span> (c == d))</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/13/38ae643c3283e2c1604e102372d2c82e.png" width="80%"/></li><li><p>not的使用</p><p>规则：取反，真变假、假变真</p><p>使用：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a, b = <span class="number">1</span>, <span class="number">1</span></span><br><span class="line">print(<span class="keyword">not</span> (a == b))</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/13/42f6f61c46ad2a61247593aeb8928f4d.png" width="80%"/></li><li><p>优先级</p><p>规则：<code>() &gt; not &gt; and &gt; or</code></p><p>案例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="number">2</span> &gt; <span class="number">1</span> <span class="keyword">and</span> <span class="number">1</span> &lt; <span class="number">4</span> <span class="keyword">or</span> <span class="number">2</span> &lt; <span class="number">3</span> <span class="keyword">and</span> <span class="number">9</span> &gt; <span class="number">6</span> <span class="keyword">or</span> <span class="number">2</span> &lt; <span class="number">4</span> <span class="keyword">and</span> <span class="number">3</span> &lt; <span class="number">2</span>)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/13/f226ae9487bcb0e767b0e69aa5607f49.png" width="80%"/><p>步骤：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/13/73b02060942724b7388ad3ad7407dc63.png" width="80%"/></li></ol><h2 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h2><ol><li><p>种类：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/14/5b65c14160735daf6908bed54a04cfd1.png" width="80%"/><p>注意：上图第三栏有详细结果描述，不再赘述。</p></li><li><p>案例：判断两次输出a的结果是否相等？</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">a, b = <span class="number">3</span>, <span class="number">6</span></span><br><span class="line">a = a + b</span><br><span class="line">print(a)</span><br><span class="line">a, b = <span class="number">3</span>, <span class="number">6</span></span><br><span class="line">a += b</span><br><span class="line">print(a)</span><br></pre></td></tr></table></figure><p>此案例也可验证 <code>a=a+b</code> 与 <code>a+=b</code> 等效，其它赋值运算符用法与本案例相似。</p></li></ol><h1 id="输入与输出"><a href="#输入与输出" class="headerlink" title="输入与输出"></a>输入与输出</h1><h2 id="格式化输出"><a href="#格式化输出" class="headerlink" title="格式化输出"></a>格式化输出</h2><h3 id="占位符"><a href="#占位符" class="headerlink" title="占位符%"></a>占位符%</h3><ol><li><p>占位符%</p><p>分类：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/14/98a5d9463efb5e471e9ba04c1657003a.png" width="80%"/><p>案例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">name = <span class="string">&#x27;菜徐坤&#x27;</span></span><br><span class="line">age = <span class="number">2.000000</span></span><br><span class="line">like = <span class="string">&#x27;唱、跳、rap！&#x27;</span></span><br><span class="line">print(<span class="string">&quot;我叫%s,年龄%f,爱好%s&quot;</span> % (name, age, like))</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/14/2f36390ff07008f98c1b5b01dbdbfcf6.png" width="80%"/></li><li><p>.format（填充）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">name = <span class="string">&#x27;菜徐坤&#x27;</span></span><br><span class="line">age = <span class="number">2</span></span><br><span class="line">like = <span class="string">&#x27;唱、跳、rap！&#x27;</span></span><br><span class="line">print(<span class="string">&quot;我叫&#123;&#125;,年龄&#123;&#125;,爱好&#123;&#125;&quot;</span>.<span class="built_in">format</span>(name, age, like))</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/14/99453188295c7c0ff0b68cec9e976b2f.png" width="80%"/></li></ol><h3 id="换行符-n"><a href="#换行符-n" class="headerlink" title="换行符\n"></a>换行符\n</h3><ol><li><p>默认换行：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="number">1</span> + <span class="number">1</span>)</span><br><span class="line">print(<span class="number">2</span> + <span class="number">2</span>)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/14/0a2f996d5b1ab9c2b7aaf022ea61f616.png" width="80%"/></li><li><p>使用换行符\n：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/14/c5dc167c04afd2584b503475cdd90488.png" width="80%"/><p>注意：任意位置均可插入 <code>\n</code> 代表换行。</p></li></ol><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><ol><li><p><code>input()</code> 输入</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="built_in">input</span>()</span><br><span class="line">print(a)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/14/83d5c1d89f98e8b2b472cdd2e9a14cc7.png" width="80%"/></li><li><p>判断input输入的数据类型：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="built_in">input</span>()</span><br><span class="line">print(<span class="built_in">type</span>(a))</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/14/aee2f654df2b866e1ca43f78cae74a25.png" width="80%"/><p>你肯定疑惑，输入的10明明是整型啊，为什么字符串？别急耐心往下看！</p></li><li><p>输入特定类型的数据（类型转换）</p><p>案例：输入一个整型的数值a</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line">print(<span class="built_in">type</span>(a))</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/14/048e96494e02f5280f265f6136b6abeb.png" width="80%"/><p>注意：不仅仅只有整型，其它类型也可以这样用（float…）</p></li><li><p>带有提示的input输入：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="built_in">input</span>(<span class="string">&quot;输入姓名：&quot;</span>)</span><br><span class="line">print(a)</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/14/8503c68e288092b859b6074623c303d9.png" width="80%"/><p>注意：这种输入方式在交互式系统上很常用哦！</p></li></ol><hr/><p>不足之处，欢迎留言，会及时回复，及时更正！</p><p>创作不易，感谢支持！</p>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>给你看看小白博主开发的打赏系统</title>
      <link href="34430.html"/>
      <url>34430.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>本文章最初发表在<a href="https://plushine.cn">XJHui’s Blog</a>，未经允许，任何人禁止转载！</p><p>为使您获得最好的阅读体验，强烈建议您点击 <a href="https://plushine.cn/34430.html">这里</a> 前往 XJHui’s Blog 查看！</p><h1 id="Hexo-Donate"><a href="#Hexo-Donate" class="headerlink" title="Hexo-Donate"></a>Hexo-Donate</h1><blockquote><p>本文档内容已于2020.09.11更新</p></blockquote><p>❤打赏系统；打赏作者并填写打赏信息后可展示在打赏列表中；</p><p>GitHub项目地址：<a href="https://github.com/xingjiahui/Hexo-Donate">https://github.com/xingjiahui/Hexo-Donate</a></p><h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><ol><li><p>作者是大二软工学生，在 <code>代码规范</code> 、<code>系统强壮性</code> 等方面肯定存在欠缺，但也在努力提升自己。</p></li><li><p>自己的 <a href="https://plushine.cn">个人博客</a> 搭建好后，又用之前学的 Web前端知识写了打赏页面，思路是：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/03/a3891ccdace5c9d86ecdb27ed64cdf27.png" width="80%"/><p>给 <a href="https://www.iamzlt.com/">IamZLT</a> 体验后，也是觉得不太友善（从 <code>填写问卷</code> 到看到 <code>自己的打赏信息</code> 需要等待的时间太长）</p><p>决定改版，从确定思路到验证思路可行性，再从测试版发布到逐渐功能完善差不多一周的时间，最终有了此打赏系统。</p><p>新版本思路：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/03/64ca8c6d546f91ddb1e5366c7c7c998e.png" width="80%"/></li><li><p>系统用到的 <code>数据库</code>、<code>PHP</code> 等方面知识我还是个 <code>小白</code>，但能凭自己能力把它 <code>实现出来</code> 就已经 <code>很满意</code> 了。</p></li><li><p>问题或不足欢迎开 <a href="https://github.com/xingjiahui/Hexo-Donate/issues">issues</a> 或到 <a href="https://plushine.cn">XJHui’s Blog</a> 留言。</p></li></ol><h2 id="关于系统"><a href="#关于系统" class="headerlink" title="关于系统"></a>关于系统</h2><p>理论上不管你是什么博客框架，只要有一个空白页面就能安排上…</p><p>打赏列表<code>demo</code>：<a href="https://plushine.cn/donate">https://plushine.cn/donate</a></p><p>问卷页面<code>demo</code>：<a href="https://donate.plushine.cn">https://donate.plushine.cn</a></p><p>后台管理暂时需要在phpMyAdmin中操作，如有必要以后可以添加 <code>管理员页面</code></p><h2 id="已支持的功能"><a href="#已支持的功能" class="headerlink" title="已支持的功能"></a>已支持的功能</h2><ol><li>打赏列表可统计 <code>总打赏人数</code> 、<code>打赏金额</code></li><li>不同打赏方式字体 <code>显示颜色</code> 不同</li><li>填写打赏问卷并成功上传，可在打赏列表中 <code>显示</code> 填写的信息</li><li>数据上传成功后，博主会收到 <code>QQ消息</code> 提醒</li></ol><h2 id="待更新内容"><a href="#待更新内容" class="headerlink" title="待更新内容"></a>待更新内容</h2><ol><li>区分<code>已核实</code>、<code>未核实</code>金额（在做）</li><li>丰富 <code>QQ消息</code> 提醒内容（在做）</li><li>接入<code>微信</code>推送（未开始）</li><li>使用github action替代虚拟主机（未开始）</li><li>使用官方接口，实现 <code>自动</code> 审核（放弃）</li></ol><h2 id="系统界面图"><a href="#系统界面图" class="headerlink" title="系统界面图"></a>系统界面图</h2><ol><li><p>打赏列表：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/03/ac47e36e68e2278a8fc8736b24353405.png" width="80%"/><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/03/eab12c5a3751c338918fc1d7fbea33cf.png" width="80%"/></li><li><p>问卷页面：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/03/bf0b6e623ab00f0f62c64347b4c2b385.png" width="80%"/><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/03/5ab30519993983dfd77dc29b05f81e0a.png" width="80%"/></li><li><p>操作GIF实录：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/03/f955737bc0ab1ba07b7ee726a51fd6b6.png" width="80%"/></li></ol><h2 id="安装系统要求"><a href="#安装系统要求" class="headerlink" title="安装系统要求"></a>安装系统要求</h2><ol><li><p>虚拟主机（有教程（免费））</p></li><li><p>准备页面、域名：</p><ul><li><p>显示打赏列表的页面</p></li><li><p>打赏问卷页面域名（二级域名即可，并为其申请证书）</p></li></ul></li></ol><h1 id="使用该系统"><a href="#使用该系统" class="headerlink" title="使用该系统"></a>使用该系统</h1><blockquote><p>教程中的虚拟主机会定期维护，维护前我会发布在 <a href="https://plushine.cn/log/">博主动态</a> 页面</p></blockquote><h2 id="虚拟主机"><a href="#虚拟主机" class="headerlink" title="虚拟主机"></a>虚拟主机</h2><blockquote><p>因为爱网云更换了官网框架，但购买免费主机步骤相似</p></blockquote><p>购买教程在这篇 <a href="[https://plushine.cn/38834.html#%E8%99%9A%E6%8B%9F%E4%B8%BB%E6%9C%BA](https://plushine.cn/38834.html#虚拟主机)">文章</a> 已经写过，不在赘述！</p><h2 id="下载并上传"><a href="#下载并上传" class="headerlink" title="下载并上传"></a>下载并上传</h2><ol><li><p>到 <a href="https://github.com/xingjiahui/Hexo-Donate">项目页</a> 选择 <code>clone or download</code> 选择 <code>Download ZIP</code>：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/04/9c8d0268c1504c90aefffcd6ff212b71.png" width="80%"/></li><li><p>在虚拟主机 <code>控制面板</code> 选择 <code>在线文件管理器</code> 并进入 <code>www</code> 目录下：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/04/0f4144a35dbddfd6d2db848ae0afa960.png" width="80%"/><p>解压后如图：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/04/96a7dbb54ef0408c6358f29ffdd306ea.png" width="80%"/><p>框选出的 <code>文件/文件夹</code> 可删除。</p></li></ol><h2 id="导入数据库"><a href="#导入数据库" class="headerlink" title="导入数据库"></a>导入数据库</h2><p>点击 <code>donate_info.sql</code> 文件后的 <code>导入</code> ，提示输入 <code>数据库密码</code> ：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/04/bedfd6547e488be84648b139334fa047.png" width="50%"/><p>数据库密码在下图位置，复制后填入上图位置：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/11/9824fa78754002d5a1efdcfcab85c8c2.png" width="50%"/><p>填入密码，点击导入即可：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/04/ffe729a5131d3577fbe2d0a80f87464f.png" width="80%"/><p>注意：</p><ul><li><p>导入后若非上图结果，请检查一下填写的 <code>数据库密码</code> 是否正确</p></li><li><p>为了便于测试，导入的数据库中自带了两条数据：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/04/e15b74b8224d99106ebcf2c6459908ab.png" width="80%"/><p>测试结束后，可自行删除！</p></li></ul><h2 id="搭建问卷网站"><a href="#搭建问卷网站" class="headerlink" title="搭建问卷网站"></a>搭建问卷网站</h2><p>其实，将项目文件导入后，网站已经搭建完成：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/04/611b8463e1513d64c9972825a124e040.png" width="80%"/><p>但虚拟主机自带的域名为（http），不能满足我们的需要，因此需要自定义域名（并开启https）！</p><h2 id="自定义域名"><a href="#自定义域名" class="headerlink" title="自定义域名"></a>自定义域名</h2><ol><li><p>登录主机面板首页点击 <code>域名绑定</code>，并按下图操作：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/11/43250f42afb6846ed12d9fe344b9ddb6.png" width="80%"/></li><li><p>域名解析记录添加方法如下图：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/11/d3802108d22a9f2d8882735ac4858e16.png" width="50%"/></li><li><p>申请ssl证书：可以在域名注册商那里申请，也可以自行百度（证书免费，不要去付费购买）</p></li><li><p>绑定ssl证书：</p><ul><li><p>将申请的ssl证书下载并解压（后缀必须是pem和key，否则代表下载的类型不对）：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/11/e29b94797d0130e3bbacbbbe0b6e5d46.png" width="80%"/></li><li><p>回到面板首页，点击SSL证书，按下图操作：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/11/8591a3685b0c0095a1d253ec51f4f923.png" width="80%"/></li></ul></li></ol><h2 id="配置虚拟主机"><a href="#配置虚拟主机" class="headerlink" title="配置虚拟主机"></a>配置虚拟主机</h2><blockquote><p>面板首页中点击 ‘在线文件’ 并进入www目录，完成下面的操作</p></blockquote><ol><li><p>配置 <code>getJsonData.php</code></p><p>点击 <code>编辑</code> ：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/04/5efe0631772f4f7e223e37b45f828eb2.png" width="80%"/><p>找到下图框选出的位置：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/04/b46e1c658538211281ec4426616fbfc3.png" width="80%"/><p>还记得 <code>主机信息</code> 么，将对应的信息替换。</p></li><li><p>配置 <code>regist.php</code></p><p>点击 <code>编辑</code>，找到下图框选出的位置：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/04/ebc6cebaf4f9938f220dcd41809dac5c.png" width="80%"/><p>下图位置也要修改：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/04/97264e75c20b6bf3dd33f419a1bfc5fe.png" width="80%"/></li><li><p>测试数据库是否配置成功</p><p>访问上面那个域名，填写上信息：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/04/2f10eb77aa042d76d595e3ccd5f1ad42.png" width="80%"/><p>上传，判断是否配置成功：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/04/718337aaee439cc63583142d20200c43.png" width="80%"/><p>​    注意：只要是提示 <code>错误/警告</code> 一定是操作问题，认真检查。</p></li><li><p>检查数据导出是否正常：</p><p>浏览器访问：<code>域名/getJsonData.php</code></p><p>查看能否导出数据库内容：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/10/8e58fde13914ac27e4850ea7351a2856.png" width="80%"/></li></ol><p>目前为止，<code>打赏页面</code> 和 <code>数据库</code> 已经配置好了，最后就是在 <code>前端</code> 把数据库中的数据展现出来。</p><h2 id="编辑前端页面"><a href="#编辑前端页面" class="headerlink" title="编辑前端页面"></a>编辑前端页面</h2><ol><li><p>fork  <a href="https://github.com/xingjiahui/Hexo-Donate">Hexo-Donate</a> 这个项目（喜欢就赏个star吧）：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/04/7d1b388716cc67f1f67785d0a01d6b07.png" width="80%"/></li><li><p>fork后，在自己仓库中的Hexo-Donate项目中编辑donateJS.js文件</p><p>点击下图位置可以在线修改文件：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/04/5216b2f9181afbaf4d974f72f900d1a3.png" width="80%"/><p>修改内容为：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/04/c5cdda70b98975708430b215ac906530.png" width="80%"/><p>注意：域名一定是完整的（包含https）。</p></li><li><p>编辑下面的代码并粘贴到前面准备的空白页面：</p><blockquote><p>Hexo框架下无论post（博客）还是page（页面）都是<code>markdown</code>格式，但<code>markdown</code>兼容<code>html</code>提供了很大的便利性。</p></blockquote><p>修改下图位置代码：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/04/4014fc76f26a02949d0bbc9a8dd86d96.png" width="80%"/><p>粘贴到空白页面（markdown/html均可）：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@master/Hexo/css/custom.min.css&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>截至 <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;inline-tag red&quot;</span>&gt;</span>nowDate<span class="tag">&lt;/<span class="name">span</span>&gt;</span>，共收到来自 <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;inline-tag red&quot;</span>&gt;</span>personNum<span class="tag">&lt;/<span class="name">span</span>&gt;</span>位小伙伴的打赏，金额为</span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;inline-tag red&quot;</span>&gt;</span>sumDonate<span class="tag">&lt;/<span class="name">span</span>&gt;</span> 元！<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span>用户名<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span>打赏方式<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span>打赏金额<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span>是否核实<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/jquery@latest/dist/jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/gh/改成你的github用户名/Hexo-donate@master/donateJS.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>注意：</p><ul><li>上面代码中引用css不符合规范，但暂时没有找到替代的方法。</li><li>粘贴该代码后，不要在其前面添加任何内容，否则会显示失败（已知bug，下版本更新）</li></ul></li><li><p>检查前端页面是否能够正常显示数据：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/04/3f2d26f4dcc1566c4ccc6ae2d363f61e.png" width="80%"/></li></ol><h2 id="提醒功能"><a href="#提醒功能" class="headerlink" title="提醒功能"></a>提醒功能</h2><ol><li><p>到 <a href="https://qmsg.zendee.cn/">Qmsg酱</a> 这里登陆并选择一个<code>Qmsg酱小姐姐</code>：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/04/9f6cececc214234cb6c20e7cb03e8721.png" width="50%"/></li><li><p>添加一个QQ号：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/04/2c052d848323f2d00ca1253a4e40c049.png" width="50%"/><p>注意：记得要添加小姐姐为好友呀，不然怎么给你发消息。</p></li><li><p>点击 <code>文档</code>，用接口地址替换下面代码中的<code>接口地址</code>：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/04/0e38a41c1dd4582dec5c749c850efdce.png" width="80%"/><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;script&gt;function Qmsg()&#123;var xhr=new XMLHttpRequest();url=&quot;接口地址?msg=收到新的打赏啦！&quot;;url=encodeURI(url);xhr.open(&quot;GET&quot;,url,true);xhr.send()&#125;Qmsg();&lt;/script&gt;&#x27;</span>;</span><br></pre></td></tr></table></figure></li><li><p>在<code>www</code>目录下编辑<code>regist.php</code>文件，将上面的代码粘贴在下图位置：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/04/167ff49d7ff04ce7b36fd5978958a272.png" width="80%"/></li></ol><h1 id="后期使用"><a href="#后期使用" class="headerlink" title="后期使用"></a>后期使用</h1><ol><li><p>填写打赏问卷后，点击 <code>返回打赏列表</code> 会跳转到作者的打赏列表：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/04/e4511abecd694a2baf0f6701da36c8f5.png" width="50%"/><p>想修改为自己的，可以修改虚拟主机 <code>www</code> 目录下的 <code>index.html</code> 文件：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/04/dfb592536c385770cc720c92026a294c.png" width="50%"/></li><li><p>后期维护：</p><p>当有人打赏后，根据填写的打赏方式去账户看有没有到账。</p><ul><li><p>收到打赏：将数据库中 <code>donate_confirm</code> 字段修改为 <code>YES</code></p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/04/0ebac5c74e1b186617efdd350df73009.png" width="80%"/></li><li><p>未收到打赏：在数据库中将该记录删除</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/04/c75f22ff5da7c527a9e536fa2eea20bf.png" width="80%"/></li></ul></li></ol><p>至此， <code>Hexo-Donate</code> 打赏系统全部安装完成！</p><h1 id="感谢"><a href="#感谢" class="headerlink" title="感谢"></a>感谢</h1><p><a href="https://host.iisat.cn/">爱网云</a>、<a href="https://www.jsdelivr.com/">JsDelivr</a>、<a href="https://qmsg.zendee.cn/">Qmsg酱</a>、<a href="https://my.oschina.net/zhangxuman/blog/504983">乱世中的单纯</a></p><p><a href="https://www.florin-pop.com/blog/2019/03/double-slider-sign-in-up-form/">FLORIN POP</a>、<a href="https://blog.csdn.net/stpeace/article/details/50757929">涛歌依旧</a>、<a href="https://www.cnblogs.com/yiven/p/6491019.html">Yiven</a>、<a href="https://jingyan.baidu.com/article/a3aad71a28c76cb1fb0096b5.html">程序小能手</a></p><p><a href="https://www.php.cn/php-weizijiaocheng-361604.html">怪我咯</a>、<a href="http://mishengqiang.com/sweetalert2/">SweetAlert2</a>、<a href="https://www.cnblogs.com/bigshow1949/p/7116797.html">BigShow</a>、<a href="https://jingyan.baidu.com/article/cdddd41c2bbde413ca00e16a.html">百度经验</a></p><hr/><p>不足之处，欢迎留言，会及时回复，及时更正！</p><p>创作不易，感谢支持！</p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
          <category> 打赏系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 打赏系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>哇！用github+jsDelivr搭建图床真香</title>
      <link href="38834.html"/>
      <url>38834.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>本文章最初发布在 <a href="https://plushine.cn">XJHui’s Blog</a>，未经允许，任何人禁止转载！</p><p><font color="red" style="font-weight:700">注意：</font>最新修改版本已发布在 <a href="https://plushine.cn/38834.html">这里 </a>，点击前往查看！</p><h1 id="最前言"><a href="#最前言" class="headerlink" title="最前言"></a>最前言</h1><blockquote><p>更新于 2020.10.18 20:57:23</p></blockquote><p>这篇博客分别介绍了简单、复杂两种GitHub图床 搭建方法。</p><p>原始的教程太过复杂而且前段时间特别不稳定，在多次经历虚拟主机维护、重装后，我终于忍不住去找了个简单的方法。</p><h2 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h2><ol><li><p>简单方法：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/25/e0a34e1569f3239eb9e131fcb8b665fc.png" width="80%"/></li><li><p>复杂方法：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/25/148ec5c3c80db3c57694b40882bf54b7.png" width="80%"/></li><li><p>PicGo上传工具：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/25/47e2be17ae0df3c95c6b12841e1ef6c3.png" width="80%"/></li></ol><h2 id="两种方法相同点"><a href="#两种方法相同点" class="headerlink" title="两种方法相同点"></a>两种方法相同点</h2><ul><li>速度快</li><li>浏览器上传（快捷复制按钮）</li><li>PicGo工具上传</li></ul><h2 id="两种方法区别"><a href="#两种方法区别" class="headerlink" title="两种方法区别"></a>两种方法区别</h2><h3 id="简单方法"><a href="#简单方法" class="headerlink" title="简单方法"></a>简单方法</h3><ul><li>配置简单</li><li>不需要任何计算机基础</li><li>超级稳定</li><li>浏览器图床样式不可自定义</li></ul><h3 id="复杂方法"><a href="#复杂方法" class="headerlink" title="复杂方法"></a>复杂方法</h3><ul><li><p>浏览器图床样式可自定义度极高</p></li><li><p>配置较复杂、锻炼动手、理解能力</p></li><li><p>帮助熟悉虚拟主机的配置和使用</p></li><li><p>稳定性差，需要定期检查、维护</p></li></ul><h2 id="博主建议"><a href="#博主建议" class="headerlink" title="博主建议"></a>博主建议</h2><h3 id="简单法适用人群"><a href="#简单法适用人群" class="headerlink" title="简单法适用人群"></a>简单法适用人群</h3><ul><li>小白</li><li>不使用浏览器图床，或者不在乎浏览器图床样式</li></ul><h3 id="复杂法适用人群"><a href="#复杂法适用人群" class="headerlink" title="复杂法适用人群"></a>复杂法适用人群</h3><ul><li>想锻炼自己动手能力</li><li>想熟悉虚拟主机的配置、使用方法</li><li>想自定义图床域名、图床界面</li></ul><p>因为要挂在博客上，所以我都弄了。平时用复杂的上传，出问题的时候拿简单的做备用。</p><h1 id="简单方法-1"><a href="#简单方法-1" class="headerlink" title="简单方法"></a>简单方法</h1><h2 id="须知！"><a href="#须知！" class="headerlink" title="须知！"></a>须知！</h2><ol><li>需要绑定GitHub账户</li><li>需要将token信息上传给后台（有风险，复杂方法可避免）</li></ol><h2 id="绑定GitHub"><a href="#绑定GitHub" class="headerlink" title="绑定GitHub"></a>绑定GitHub</h2><ol><li><p>点击 <a href="https://chuibi.cn/">这里</a> 进入下图页面，点击箭头位置图标登录：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/25/df73aaaabe9712b64dd157d0cb03bb70.png" width="80%"/></li><li><p>输入GitHub账户信息，选择Sign in：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/25/344b165c34c41b6641414aabf7025e41.png" width="80%"/><p>出现下图，稍等：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/25/6d57cc1d8d03d0bb887a68cd335dae7e.png" width="80%"/></li><li><p>会再次回到主界面，并显示了下图蓝框内容：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/25/c6651010eaba445832297a1b103e1bd5.png" width="80%"/></li></ol><h2 id="填写仓库信息"><a href="#填写仓库信息" class="headerlink" title="填写仓库信息"></a>填写仓库信息</h2><ol><li><p>获取token（在GitHub中操作）：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/25/73af184774df3678594d35ea2a2ec5a1.png" width="80%"/></li><li><p>点击下图位置图标：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/25/3ab515b7381db07e67110f4e7db8f33e.png" width="80%"/></li><li><p>输入以下信息：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/25/b74b6f0e43cc349b2be37d5e4ce8b1ad.png" width="80%"/></li><li><p>复制下图蓝框内容，进行 <a href="https://plushine.cn/38834.html#PicGo图床工具">这一步</a>：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/25/4a407b3112ff5eb3e5405777813a3c83.png" width="80%"/></li></ol><h1 id="复杂方法-1"><a href="#复杂方法-1" class="headerlink" title="复杂方法"></a>复杂方法</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>之前的这篇 <a href="https://plushine.cn/3726.html">图床安装使用</a> 教程中，我对典型的<code>几种错误</code>给出了解决方法，但好多用上<code>github图床</code>+<code>PicGo工具</code>的小伙伴都在吐槽上面的解决方法有时候也<code>会失效</code>，于是我想起了 <a href="https://www.antmoe.com">小康</a> 之前安利给我的 <a href="https://www.antmoe.com/posts/c9c6437b/index.html">这种方法</a>。</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/20/f77d2a7a9493658041796b38ff7f34d5.png" width="30%"/><p>会报各种错误的原因还是<code>github</code>在国内处于<code>半墙不墙</code>的状态，其它就不多说了。</p><p>我试了试那种方法，遇到了几个坑但最后也成功了，用上之后可以说是<code>真香</code>！</p><p>可以前往<code>demo</code>：<a href="https://img.plushine.cn">img.plushine.cn</a> 体验</p><p>因为小康的这篇博客没有 <code>虚拟主机</code> 操作的 <code>详细步骤</code> 劝退了很多小白。</p><p>我把那篇教程分享给小伙伴之后，他们也都没有成功，于是就有了<code>这篇博客</code>。</p><h2 id="虚拟主机"><a href="#虚拟主机" class="headerlink" title="虚拟主机"></a>虚拟主机</h2><p>这里的虚拟主机需要是<code>国外</code>的，一定是国外的!</p><p>别害怕，不是让你掏钱买虚拟主机，下面提供一个<code>免费虚拟主机</code>购买平台。</p><h3 id="注册账号"><a href="#注册账号" class="headerlink" title="注册账号"></a>注册账号</h3><ol><li><p>进入<a href="https://host.iisat.cn/">官网</a>，点击<code>注册</code>：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/20/d9d6eef1ac784a8629492b3c29e24623.png" width="80%"/></li><li><p>输入各种信息后<code>点击注册</code>：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/20/b007906d2d4588f1ba422287cc71dd7f.png" width="80%"/><p>会自动跳转到登陆页面，点击<code>登陆</code>：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/20/80365c61baf8501d23fb3fe261edf216.png" width="80%"/></li><li><p>依次选择：<code>免费主机</code>-&gt;<code>美国免费主机</code>-&gt;<code>立即购买</code>：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/20/311e543b9b6605539bc3e2fc93989df6.png" width="80%"/><p>确认订单并且完成订购：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/20/8dc24028cc1af7c9345d7535e3b947b1.png" width="80%"/></li><li><p>自动跳转到<code>我的订单</code>页面，点击<code>管理</code>：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/20/d742000a9dd134a83bedd316c038c708.png" width="80%"/><p>提示<code>需要验证邮箱</code>：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/20/de7a469e0b39550d84c358dddf201b7d.png" width="80%"/><p>点击<code>发送验证码</code>并将验证码填入<code>文本框</code>后选择<code>验证或修改邮箱</code>，再到<code>我的订单</code>页面重复此步骤后进入第5步。</p></li><li><p>复制下图中的<code>用户名</code>和<code>密码</code>：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/20/da63c452c3a05a435bf196fb2534be72.png" width="80%"/><p>注意：不要更改默认密码，不要更改默认密码，不要更改默认密码！</p></li></ol><h3 id="配置虚拟主机"><a href="#配置虚拟主机" class="headerlink" title="配置虚拟主机"></a>配置虚拟主机</h3><ol><li><p>登陆虚拟主机：点击<code>前往控制面板</code>，选择<code>管理控制面板地址</code>：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/20/38ef08e96e5df6457b1a156a08fa0b37.png" width="80%"/></li><li><p>输入前面获取的<code>用户名</code>和<code>密码</code>：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/20/3224a02db591116e825688491bc7f5f4.png" width="80%"/><p>进入<code>控制面板</code>：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/20/a7bd6cfaecefb2739f3e866663745b70.png" width="80%"/><p>说实话，我以为进去会是<code>windows系统</code>，哈哈…</p><p>现在你进入后是这样的：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/9ea73ccd21720c54b89d89a6feef12a9.png" width="80%"/><p>原因是<code>本教程</code>发布刚一天，<code>控制面板</code>改版了…</p><p>区别也不大，我们主要用的是<code>在线文件管理器</code>，位置是：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/15f3a456fcdc39965d9beee6aa8ce327.png" width="80%"/><p>具体的<code>文件操作</code>方式没变化</p><p>用到其它的自行寻找就好，不再重新截图…</p></li><li><p>点击<a href="https://ww.lanzous.com/ictl3qb">这里</a>将文件下载到本地（不是虚拟主机，是自己电脑），感谢蓝奏云。</p></li><li><p>将下载的文件上传到虚拟主机：</p><p>选择<code>在线文件</code>：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/20/e28eef470996b478c25d6243396f0291.png" width="80%"/><p>点击<code>上传文件</code>：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/20/ec89a2d9bd0e790f6c68fe42025ad1bf.png" width="80%"/><p>选择刚刚下载的文件，将其上传至<code>虚拟主机</code>。</p></li><li><p>解压上传的文件：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/20/9d818022e5ced2697d6a8fd7bc10d462.png" width="80%"/><p>弹窗：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/20/a0877c4a2aac665c112816b408a12f35.png" width="80%"/><p>解压后：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/20/ebe38470581a84e25c70a57034ca9c15.png" width="80%"/></li><li><p>复制文件到<code>www目录</code>下</p><p>进入上图框选出的文件夹，勾选全部文件并复制：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/20/cc8cf6895465776167f3d6c358732cf8.png" width="80%"/><p>点击上级目录，进入www目录选择粘贴：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/20/0c6437ce9065eead8f57b420b5f71415.png" width="80%"/></li><li><p>配置<code>up.php</code>文件</p><p>点击<code>编辑</code>，打开<code>up.php</code>文件：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/20/22b7df40bb3abb366a14817c77a96161.png" width="80%"/><p>找到下面的内容：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/20/e24b652540f7b62ac3abdab6506c4f86.png" width="80%"/><p>配置内容如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">define(<span class="string">&quot;REPO&quot;</span>,<span class="string">&quot;CDN&quot;</span>);<span class="comment">//存放图片的仓库名</span></span><br><span class="line">   define(<span class="string">&quot;USER&quot;</span>,<span class="string">&quot;xingjiahui&quot;</span>);<span class="comment">//GitHub用户名</span></span><br><span class="line">define(<span class="string">&quot;MAIL&quot;</span>,<span class="string">&quot;xjhui2000@qq.com&quot;</span>);<span class="comment">//github绑定的邮箱</span></span><br><span class="line">   define(<span class="string">&quot;TOKEN&quot;</span>,<span class="string">&quot;github_token&quot;</span>); <span class="comment">//github页面获取token,获取方法见下图</span></span><br><span class="line">   </span><br><span class="line">   <span class="comment">//数据库配置文件</span></span><br><span class="line">   $database = <span class="keyword">array</span>(</span><br><span class="line">           <span class="string">&#x27;dbname&#x27;</span> =&gt; <span class="string">&#x27;s9940968&#x27;</span>, <span class="comment">//虚拟主机用户名</span></span><br><span class="line">           <span class="string">&#x27;host&#x27;</span> =&gt; <span class="string">&#x27;localhost&#x27;</span>,</span><br><span class="line">           <span class="string">&#x27;port&#x27;</span> =&gt; <span class="number">3306</span>,</span><br><span class="line">           <span class="string">&#x27;user&#x27;</span> =&gt; <span class="string">&#x27;s9940968&#x27;</span>, <span class="comment">//虚拟主机用户名</span></span><br><span class="line">           <span class="string">&#x27;pass&#x27;</span> =&gt; <span class="string">&#x27;******&#x27;</span>, <span class="comment">//虚拟主机密码</span></span><br><span class="line">       );</span><br></pre></td></tr></table></figure><p>进入<code>github</code>后按下图获取<code>token</code>：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/image/img1/20200409192555.png" width="80%"/><p>将获取的<code>token</code>填到配置文件的指定位置。</p></li><li><p>导入数据库</p><p>进入<code>www/</code>目录：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/20/ef0ed74c53b4af4dda116070e5c714c6.png" width="80%"/><p>弹出框中输入<code>密码</code>（虚拟主机密码）：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/20/3fc672033d5ee277eda94bc276c115fd.png" width="80%"/></li></ol><h3 id="浏览器访问"><a href="#浏览器访问" class="headerlink" title="浏览器访问"></a>浏览器访问</h3><ol><li><p>查看绑定的<code>域名</code></p><p>点击<code>域名绑定</code>：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/20/c76712082e3357e6a3e2b7c20f73803c.png" width="80%"/><p>复制绑定的<code>域名</code>：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/20/950daad92727f18b719b3a6a036f31f8.png" width="80%"/></li><li><p>浏览器输入复制的域名：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/20/3595d2c1c9f1a11e76617a98d648c12b.png" width="80%"/></li><li><p>测试能否上传：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/20/d0d383f96bf5517b238881db38bae990.png" width="80%"/><ul><li><p>报错：<code>请求上传接口出现异常</code></p><p>解决方法：更改<code>php版本</code></p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/20/3582ae7424ece29fda6373384e4a429a.png" width="80%"/></li><li><p>图片无法显示：编辑up.php-&gt;搜索@latest 把latest 修改为main</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/10/18/cc56b7fd3cf49e187dd3fd24b82485fb.png" width="70%"/></li></ul></li><li><p>再次测试，上传成功：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/20/74fde4f474661d3c722826ceb79e1e7e.png" width="80%"/></li></ol><p>这样<code>网页版图床</code>就完成啦！</p><h1 id="PicGo图床工具"><a href="#PicGo图床工具" class="headerlink" title="PicGo图床工具"></a>PicGo图床工具</h1><blockquote><p>需要提前安装 <a href="http://nodejs.cn/download/">node.js</a> 否则插件会安装失败！更新于 2020.07.27 16:23:20</p></blockquote><p>上面的图床需要<code>打开浏览器</code>，如果你觉得很麻烦，那么推荐你使用<code>PicGo</code>这款开源的<code>图床工具</code>，既不需要打开浏览器又附带了写博客刚需的一些功能，例如相册：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/20/603af8188ce9bcf1ee20b837a6f26fee.png" width="80%"/><p>使用<code>PicGo</code>图床工具，务必先保证上面的<code>浏览器图床</code>测试正常！</p><h2 id="下载与安装"><a href="#下载与安装" class="headerlink" title="下载与安装"></a>下载与安装</h2><p><code>GitHub项目</code>地址在 <a href="https://github.com/Molunerfinn/PicGo">这里</a>，图床工具的下载链接可以在<code>README</code>中获取。</p><p>因为国内下载速度很慢，不限速链接在 <a href="https://ww.lanzous.com/ib5geof">这里</a>，感谢蓝奏云！</p><p>安装方法就不多说了。</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/20/e8d839bc54d109daa3927196940ba244.png" width="80%"/><h2 id="PicGo配置"><a href="#PicGo配置" class="headerlink" title="PicGo配置"></a>PicGo配置</h2><ol><li><p><code>插件设置</code>中搜索<code>web-uploader</code>并安装：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/20/a18e39c4b7506fd56542ab4b16e2c157.png" width="80%"/><p>​    安装后可以在<code>图床设置</code>中查看：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/20/0a2de6821fd9b0a06cfb679cb6578168.png" width="80%"/></li><li><p>配置插件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">API地址：http:&#x2F;&#x2F;虚拟主机用户名.m.awhost.cn&#x2F;up.php #简单方法填写获取的链接：https:&#x2F;&#x2F;chuibi.cn&#x2F;up.php?xxxxxx</span><br><span class="line">POST参数名：pic</span><br><span class="line">JSON路径：data.url</span><br></pre></td></tr></table></figure><p>如图：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/20/292655fae7b92c22f25ba9a2ecbd526c.png" width="80%"/></li><li><p>测试：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/20/84150c331e68ba4279f3f45c4f960555.png" width="80%"/><p>上传时间过长可能是因虚拟主机<code>网络原因</code>，属正常现象（但<code>很少</code>会出现该情况）。</p><p>上传后也可能在<code>相册</code>不显示，原因是<code>jsdelivr</code>现在被墙的厉害，原因是：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/4df229b80fb50ff75abd6609d6de16bb.png" width="80%"/><p>体谅下，等结束就好了！</p></li></ol><h2 id="PicGo常用功能"><a href="#PicGo常用功能" class="headerlink" title="PicGo常用功能"></a>PicGo常用功能</h2><ol><li><p>上传方式：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/20/2a262ff313cb8f08773a2f8f7d6baff7.png" width="80%"/><p>另外，点击虚线框内任意位置可以选择文件上传。</p></li><li><p>链接格式：在图片上传成功后会自动将你所选取的<code>链接格式</code>复制到剪切板。</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/21/75b2b8a2fe33fc441011b7ecb6c402cd.png" width="50%"/><ul><li><code>markdown</code>：markdown格式</li><li><code>html</code>：html代码</li><li><code>url</code>：url链接，粘贴到浏览器可直接访问</li><li><code>ubb</code>：没用过…</li><li><code>custom</code>：自定义链接（下面有讲解）</li></ul></li><li><p>自定义链接：</p><p>因为<code>markdown</code>语句添加的图片不支持修改<code>图片宽度</code>，但<code>markdown</code>兼容<code>html</code>，自定义链接：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;$url&quot;</span> <span class="attr">width</span>=<span class="string">&quot;80%&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>如下图：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/20/d4a75afb0f9a4ee24ccdafa6b8d77359.png" width="80%"/></li><li><p>相册的使用：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/20/ca22ef25c74643770040920582bc8664.png" width="80%"/><p>注意：<code>复制链接</code>也支持3中所列举的格式，但如何选择？其实是根据你所选择的<code>链接格式</code>确定的，例如：</p><p>​    选择的<code>链接格式</code>是<code>html</code>：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/20/b478dd9e67d2c62c7ec9fade58da11e4.png" width="80%"/><p> 在相册中点击<code>复制链接</code>按钮后所复制的<code>链接格式</code>就是<code>html</code>。</p></li><li><p>更新：如果你的图床绑定了<code>自己的域名</code>，一定要在<code>picGo</code>中将<code>API地址</code>修改成<code>绑定的域名</code>：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/23/bd4121d1409a4634c56e7bb750819e6f.png" width="80%"/><hr/><p>不足之处，欢迎留言，会及时回复，及时更正！</p><p>创作不易，感谢支持！</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
          <category> 图床 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图床搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>不会pjax？这篇博客教你如何搞定背景音乐</title>
      <link href="52527.html"/>
      <url>52527.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>本文章最初发表在<a href="https://xingjiahui.top">XJHui’s Blog</a>，未经允许，任何人禁止转载！</p><p>为使您获得最好的阅读体验，强烈建议您点击 <a href="https://plushine.cn/52527.html">这里</a> 前往 XJHui’s Blog 查看！</p><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><h2 id="初衷"><a href="#初衷" class="headerlink" title="初衷"></a>初衷</h2><p>之前写的<a href="https://plushine.cn/54808.html#音乐播放器">这篇文章</a>详细的介绍了如何使用<code>aplayer插件</code>给自己的博客添加<code>音乐播放器</code>，体验了一段时间后觉得该播放器应用在在<code>单一页面</code>中使用效果挺好。但如果想作为<code>博客背景音乐播放器</code>还是有很大的<code>局限性</code>，其中最重要的一点是因为博客<code>不支持pjax</code>导致每次切换页面后音乐都会<code>从头播放</code>体验很不好。</p><p>在<a href="https://www.shawnlin.cn/">Shawn</a>的推荐下，用上了下面这款<code>播放器</code>，可以前往我的<a href="https://plushine.cn">个人主页</a>体验。</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/17f9a3a32228d80e397756d498376b5a.png" width="70%"/><h2 id="声明"><a href="#声明" class="headerlink" title="声明"></a>声明</h2><ol><li><p>因为很多小伙伴在<code>配置</code>这款播放器过程中<code>遇到了问题</code>，为了少让你们跳些坑才有了<code>这篇博客</code>：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/9c2d9f4e75e09d8090f1357f43ba609f.png" width="70%"/></li><li><p>创作这篇博客无任何<code>利益驱动</code>，博主也仅为<code>播放器</code>普通用户。</p></li></ol><h1 id="播放器"><a href="#播放器" class="headerlink" title="播放器"></a>播放器</h1><h2 id="明月浩空音乐"><a href="#明月浩空音乐" class="headerlink" title="明月浩空音乐"></a>明月浩空音乐</h2><p>上面说<code>aplayer</code>用作<code>背景音乐</code>存在<code>局限性</code>，下面这款播放器解决该局限性的方法是<code>断点续播</code>。</p><p>点击进入播放器<a href="https://player.lmih.cn/">官网</a>，提供两种版本，分别是免费版和付费版：</p><ol><li><p>免费版：</p><ul><li><p>每三个月至少使用一次或登陆播放器后台否则<code>回收账号</code>。</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/e33e01b33adb6f12b072991ab0051be9.png" width="50%"/></li><li><p>功能受限（一个歌单，不可<code>批量导入</code>歌曲，<code>个性设置</code>受限（下图））</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/5d1e1dd340f746357be69d147d79f8f5.png" width="50%"/></li><li><p>存在<code>广告</code>，注意看下图：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/c4d927c706c3164dc95c0660f8056569.png" width="50%"/></li></ul></li><li><p>付费版：</p><ul><li><p>不存在上述<code>免费版本</code>限制</p></li><li><p>免费提供独立域名播放器：推荐点击<a href="https://music.plushine.cn">这里</a>体验。</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/79dc50170b2e3ab1f4921ab38f16f87b.png" width="80%"/></li><li><p>收费标准：自行前往<a href="https://player.lmih.cn/">官网</a>查看。</p></li></ul></li></ol><p>个人想法：我是花<code>一元</code>买的5000次播放量升级到<code>付费版本</code>，这些播放量对我这<code>小站</code>来说也是足够了，毕竟作者还要<code>为服务器买单</code>，总是<code>白嫖</code>也不好（我主要是想去广告…）。</p><h2 id="注册并登陆"><a href="#注册并登陆" class="headerlink" title="注册并登陆"></a>注册并登陆</h2><ol><li><p>点击<a href="https://player.lmih.cn/admin/user/register">这里</a>开始注册，输入<code>用户名</code>、<code>密码</code>等信息：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/3d6f55bee4c6ca3649e321921ecb0b39.png" width="50%"/><p>注意保护<code>个人隐私</code>安全！</p></li><li><p>点击<code>进入后台</code>：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/b82d55c457e7e16479c118f01ce37d65.png" width="50%"/></li><li><p>点击<code>确定</code>添加播放器，输入播放器名称：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/415dfe7feaf0c0f1876965322877c3ff.png" width="50%"/></li><li><p>创建成功，点击<code>下一步</code>：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/30350dd8120ab202c6f807e9bcde93ed.png" width="50%"/></li></ol><h2 id="配置播放器"><a href="#配置播放器" class="headerlink" title="配置播放器"></a>配置播放器</h2><ol><li><p>输入<code>授权域名</code>：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/3a606cbb84de42fdf577ed4287c521c4.png" width="80%"/><p>这个功能的目的是<code>防止盗取播放次数</code>，对于付费用户（特别<code>购买播放次数</code>的用户）如果别人盗取了你<code>播放器id</code>将其用于自己网站，那么你的播放次数就得不到<code>保障</code>。</p></li><li><p>创建歌单：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/5b2bd5b78033ac7d59af91d16ae06dd3.png" width="80%"/></li><li><p>为歌单<code>添加歌曲</code>：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/122fb7dfdddd539ba38d55e54d46dfbc.png" width="80%"/></li><li><p>将歌单<code>加入播放器</code>：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/4b879df06b221b802b0ff6bf9a9cddb1.png" width="80%"/><p>删除原有歌单的<code>原因</code>：免费用户只能<code>添加一个</code>歌单。</p></li></ol><h2 id="开始使用"><a href="#开始使用" class="headerlink" title="开始使用"></a>开始使用</h2><ol><li><p><code>测试</code>播放器：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/8216210ecffd2d0016f7241ada02d852.png" width="80%"/><p>如果没有该选项，尝试<code>刷新页面</code>解决。</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/dc7c93e053086c97a34d6c9898139b37.png" width="80%"/><p>看自己添加的歌曲是否在<code>歌曲列表</code>中出现。</p></li><li><p>获取<code>js</code>代码：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/04151a65990d96b6750e901e84c2050a.png" width="80%"/></li><li><p>在博客中使用（<code>butterfly主题</code>为例）：</p><p>查看自己主题的<code>版本号</code>：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/eb87c76308317862d95e5d9d1657acaa.png" width="60%"/><ul><li><p>若<code>&lt; v2.3.5</code>：</p><p>配置文件搜索<code>footer_custom_text:</code>，在后面添加上一步获取的js代码，如下图：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/f9871960e668e34f3434289b5aa4e077.png" width="80%"/><p>如果本地运行时提示：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/1eca8e556fe411cb8c675cb9e298cf73.png" width="60%"/><p>在刚刚添加的代码前面加上下面的代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;//lib.baomitu.com/jquery/3.3.1/jquery.min.js&quot;</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>添加后：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/19873f742ab80f260d3d233ed2bb5fff.png" width="80%"/></li><li><p>若<code>&gt;=v2.3.5</code>：</p><p>主题配置文件搜索<code>bottom</code>，将复制的js代码粘贴上去：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/50256c744cd1f7536c95c419fcd7445c.png" width="80%"/><p>注意<code>格式</code>与<code>上图</code>保持一致。</p></li></ul></li></ol><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><ol><li><p>使用<code>hexo s</code>命令本地测试时播放器<code>不能使用</code>，因为在前面步骤中播放器<code>绑定了安全域名</code>，而本地使用的域名是<code>localhost:4000</code>，导致<code>触发限制</code>，执行<code>hexo d</code>命令后将其推到<code>远程仓库</code>，即可在自己博客使用啦！</p></li><li><p>如果你想拥有<code>会员权限</code>但又<code>接受不了付费条件</code>的话，再推荐一款<code>完全免费</code>的播放器-<a href="https://music.m0x.cn/">梨花带雨</a>，具体教程不再给出请<code>自行钻研</code>（差别不大），在<code>hexo框架</code>下尤其是<code>butterfly主题</code>下能否正常使用博主未作测试。</p></li><li><p>博客最后贴上一张<code>猫猫</code>的懒照，哈哈：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/2f067fbc62cfc393eae695ba345a3ce9.png" width="60%"/></li></ol><hr><p>不足之处，欢迎留言，评论会及时回复，错误会及时更正！</p><p>创作不易，感谢支持！</p><p>最后的最后，欢迎访问我的个人博客<a href="https://plushine.cn">XJHui’s Blog</a>。</p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
          <category> 背景音乐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 音乐播放器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>给你的Zeit page自定义404页面</title>
      <link href="48516.html"/>
      <url>48516.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>本文章最初发表在<a href="https://xingjiahui.top">XJHui’s Blog</a>，未经允许，任何人禁止转载！</p><p>为使您获得最好的阅读体验，强烈建议您点击 <a href="https://xingjiahui.top/48516.html">这里</a> 前往 XJHui’s Blog 查看！</p><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>本教程仅适用于部署在Zeit.co的个人网站。</p><p>我的博客使用的是<code>Hexo框架</code>+<code>Butterfly主题</code>+<code>GitHub仓库</code>+<code>Zeit.co部署</code>+<code>又拍云CDN</code>（这不是在打广告，很认真的在写博客），主题配置文件中有404页面的具体设置：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/1ae25b6a8a36446cc7b6cb6cc98bd55f.png" width="100%"/><p>这样配置能渲染出404页面：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/ab2248aa5ab978969133d68db8bb6aa6.png" width="80%"/><p>但当你真正404时：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/bd8c981a8c1058106005a7e3af68445f.png" width="50%"/><p>配置好404后也没有测试过，一直以为我的404页面是正常的…</p><h1 id="踩坑经历"><a href="#踩坑经历" class="headerlink" title="踩坑经历"></a>踩坑经历</h1><p>这里记录踩坑经历，想跳过的可以直接传送到 <a href="https://plushine.cn/48516.html#解决404页面无法显示">这里</a> 。</p><ol><li><p>百度找到<a href="https://www.pearik.com/">Yavin</a>的<a href="https://www.pearik.com/archives/zeit-404-page/">这篇文章</a>中有说解决方法：</p><p> 创建<code>now.json</code>文件：</p> <figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;version&quot;</span>: <span class="number">2</span>,</span><br><span class="line">  <span class="attr">&quot;routes&quot;</span>: [</span><br><span class="line">    &#123; <span class="attr">&quot;handle&quot;</span>: <span class="string">&quot;filesystem&quot;</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">&quot;src&quot;</span>: <span class="string">&quot;/(.*)&quot;</span>, <span class="attr">&quot;status&quot;</span>: <span class="number">404</span>, <span class="attr">&quot;dest&quot;</span>: <span class="string">&quot;/404.html&quot;</span> &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> 并把它放到<code>根目录</code>（我当时认为是<code>Hexo的根目录</code>），<code>hexo g</code> 后自动在<code>/public</code>下生成<code>now.json</code>文件：</p> <img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/483e764ec0f661ac700c98a3066905bb.png" width="50%"/><p> 于是我兴奋的<code>hexo d</code>后发现提交至<code>Zeit.co仓库</code>失败了：</p> <img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/993b3abe5f3bae3ead67b23619a19b31.png" width="80%"/><p> 英文看不懂？就是说生成的<code>json文件</code>不符合规范（存在<code>语法错误</code>），仔细看上图会发现<code>json文件</code>中包含了JavaScript，至于为什么会这样至今我也不知道，如果您知道原因欢迎到<code>评论区</code>留言（失败）。</p></li><li><p>于时更换了<code>now.json</code>文件位置，把他放在了<code>主题</code>的根目录，结果发现hexo g后在/public文件夹下未生成now.json文件（失败）。</p></li><li><p>既然无法生成，那我就直接到GitHub仓库，创建<code>now.json</code>文件并把上面的<code>代码</code>沾了进去，再次提交竟然成功了，这才明白原来<a href="https://www.pearik.com/">Yavin</a>说的<code>根目录</code>是指<code>仓库根目录</code>，但这样做存在的问题是下次<code>hexo d</code>后<code>now.json</code>文件会直接被删掉（失败）。</p></li><li><p>我知道<code>hexo d</code>其实就是把<code>/public</code>中的文件上传到仓库。想把json文件放到仓库根目录其实就是先放到/public中，于时开始想哪里的文件<code>hexo g</code>后能直接生成在<code>/public</code>中，看了一眼仓库中的文件：</p> <img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/2e216096405f08125298a9d3d3c63ef5.png" width="80%"/><p> ​    有点熟悉呀，这三个文件夹不就是<code>主题根目录/source</code>（不是hexo根目录下的/source）中的三个文件夹？：</p> <img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/6ebcae35646e68fc9c95e2e6dba288b2.png" width="30%"/><p> ​        于时我很开心的把<code>now.json</code>文件放进了<code>/source</code>中</p><p> ​    哈哈，测试没问题，终于解决了。</p></li></ol><h1 id="解决404页面无法显示"><a href="#解决404页面无法显示" class="headerlink" title="解决404页面无法显示"></a>解决404页面无法显示</h1><blockquote><p>本博客提供的方法仅在Hexo博客框架下Butterfly主题测试，其余框架或主题可自行尝试。</p><p>若您的主题使用了页面压缩（gulp…），需要先排除掉<code>conf.json</code>这个文件。</p></blockquote><p>在主题根目录/source下新建now.json文件，粘贴下面的代码：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;version&quot;</span>: <span class="number">2</span>,</span><br><span class="line">  <span class="attr">&quot;routes&quot;</span>: [</span><br><span class="line">    &#123; <span class="attr">&quot;handle&quot;</span>: <span class="string">&quot;filesystem&quot;</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">&quot;src&quot;</span>: <span class="string">&quot;/(.*)&quot;</span>, <span class="attr">&quot;status&quot;</span>: <span class="number">404</span>, <span class="attr">&quot;dest&quot;</span>: <span class="string">&quot;/404.html&quot;</span> &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：该json文件会调用404.html，所以要保证仓库根目录有404.html文件，当然也可以写成其他文件（也为下面<code>自定义404页面</code>创造可能）。</p><p>感谢：<a href="https://www.pearik.com/">Yavin</a></p><h1 id="自定义404页面"><a href="#自定义404页面" class="headerlink" title="自定义404页面"></a>自定义404页面</h1><blockquote><p>主题<code>404页面</code>可配置项不多（仅支持<code>修改背景图片</code>），但你可以按照本教程让你的博客<code>拥有喜欢的404页面</code></p><p>当然你可以去修改<code>404的pug</code>文件，但我实在是不想动<code>源代码</code>（主要是怕<code>博客报错</code>，然后gg）</p></blockquote><p>先上gif，看看我的404页面：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/af56f72e8dce1452ad834ed91f6a9ca1.png" width="80%"/><p>404页面代码来自<a href="https://404.life/">CodePen</a>，感谢！</p><p>其实很简单，大致思路是新建<code>page页面</code> -&gt; <code>禁止渲染</code>该页面 -&gt; 修改<code>json.now</code>文件。</p><h2 id="新建page页面"><a href="#新建page页面" class="headerlink" title="新建page页面"></a>新建page页面</h2><p>怎么创建应该都会吧，这里以404为例：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page 404</span><br></pre></td></tr></table></figure><p>别担心这个<code>404</code>会渲染出<code>404.html</code>然后与原有的<code>404.html</code>冲突，因为page页渲染出来的是<code>/404/index.html</code></p><p>创建后的文件：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/a40203f8249c5982a4e1783ba7d00fbd.png" width="50%"/><h2 id="禁止渲染"><a href="#禁止渲染" class="headerlink" title="禁止渲染"></a>禁止渲染</h2><blockquote><p>为什么要禁止渲染？如果不禁止会像其他页面那样被加上顶部图、页脚…</p></blockquote><p>主要有两种方法，想具体学习的可以看<a href="https://blog.csdn.net/qq_36759224/article/details/90320295">这篇文章</a>，本篇教程指介绍一种我认为简单的：</p><ol><li><p>index.md中添加：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">layout: false</span><br></pre></td></tr></table></figure></li><li><p>插入html代码时，使用标签：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% raw %&#125;</span><br><span class="line">...</span><br><span class="line">html</span><br><span class="line">...</span><br><span class="line">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure></li></ol><p>例如：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/f7e0736e177974384712f0e1d03d2bfd.png" width="70%"/><p>如果喜欢我的404页面，可以使用下面的代码（太长了，使用<a href="https://pasteme.cn/">PasteMe</a>平台）：</p><p><a href="https://pasteme.cn/36643">点击查看代码</a>，点击该位置可以<code>直接复制</code>哦：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/73bf9ef57761ce065543eab90a052c2e.png" width="80%"/><p>说起<a href="(https://pasteme.cn/)">PasteMe</a>，又让我想起来<a href="https://blog.csdn.net/softwareldu/article/list/">iamzxf</a>，还是很感谢他…</p><h2 id="修改now-json文件"><a href="#修改now-json文件" class="headerlink" title="修改now.json文件"></a>修改<code>now.json</code>文件</h2><p>来到了最后一步，离成功又近了一步。</p><p>将原<code>now.json</code>文件中的：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;dest&quot;: &quot;/404.html&quot; </span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;dest&quot;: &quot;/404/&quot; </span><br></pre></td></tr></table></figure><p>至于为什么这样修改，应该很好理解，不多解释了。</p><hr><p>不足之处，欢迎留言，评论会及时回复，错误会及时更正！</p><p>创作不易，感谢支持！</p><p>最后的最后，欢迎访问我的个人博客<a href="https://plushine.cn">XJHui’s Blog</a>。</p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
          <category> Zeit.co </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Zeit </tag>
            
            <tag> 404 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>你真的该学学如何配置CDN了</title>
      <link href="14261.html"/>
      <url>14261.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>本文章最初发布在<a href="https://plushine.cn/14261.com">XJHui’s Blog</a>，未经允许不可转载。</p><p>本文参加<a href="https://www.upyun.com/tech/article/551/有奖征文｜又拍云原创技术征文大赛，FILCO键盘、小米手环、代金券等你来拿.html">又拍云原创技术</a>征文活动</p><h1 id="更新说明"><a href="#更新说明" class="headerlink" title="更新说明"></a>更新说明</h1><h2 id="更新内容"><a href="#更新内容" class="headerlink" title="更新内容"></a>更新内容</h2><blockquote><p>本文内容已于2020.09.12更新</p></blockquote><ol><li>新增百度云加速配置方法</li><li>删掉一些不必要的赘述</li></ol><h2 id="为什么使用CDN"><a href="#为什么使用CDN" class="headerlink" title="为什么使用CDN"></a>为什么使用CDN</h2><ol><li>提升访问速度</li><li>帮助百度收录部署在GitHub服务器上的网站</li><li>隐藏服务器ip（网站部署在自己服务器上）</li></ol><h2 id="如何选择合适的CDN"><a href="#如何选择合适的CDN" class="headerlink" title="如何选择合适的CDN"></a>如何选择合适的CDN</h2><blockquote><p>具体看下图吧，可能还会陆续更新其他品牌</p></blockquote><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/12/cf847d6328fca7c7f2a5f2f58fabb18a.png" width="90%"/><p>对上表内容的一些说明：</p><ul><li><p>Https：很重要的一个参数</p></li><li><p>默认开启防护：小白肯定会忽略配置这些，默认如果再不开启，网站万一被打后果很惨</p></li><li><p>配置速度：又拍云要加入又拍云联盟（审核期5天+），百度云当天就能配置完成</p></li><li><p>稳定度：又拍云没的说，群友反馈百度云不稳定（但我使用了近3个月没太注意到）</p></li><li><p>发放形式：</p><ul><li>代金券：一年的CDN额度转化成67元代金券</li><li>额度：每日发放额度</li></ul></li><li><p>超额：</p><ul><li>代金券超额：代金券扣完扣余额，一天一结算所以账户余额可能为负（跑路？？）</li><li>百度云超额：一天10GB，超额自动回源（余额不可能为负）</li></ul></li><li><p>额外加成：百度云对百度收录效果很明显，收录量提升很快</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/12/06e9ff616524df1ad30fb4ee1d5bf7dd.png" width="80%"/></li><li><p>接待客服：百度的机器人你们也懂，又拍云全部是人工客服（印象很好，解决问题速度很快）</p></li><li><p>注意：如果是动态博客，除非是为了隐藏ip，否则不建议使用CDN（别到时候告诉我速度没原来快了）</p></li></ul><h1 id="又拍云CDN"><a href="#又拍云CDN" class="headerlink" title="又拍云CDN"></a>又拍云CDN</h1><h2 id="又拍云联盟"><a href="#又拍云联盟" class="headerlink" title="又拍云联盟"></a>又拍云联盟</h2><blockquote><p>只有加入又拍云联盟才会给你CDN代金券</p></blockquote><h3 id="注册、认证账号"><a href="#注册、认证账号" class="headerlink" title="注册、认证账号"></a>注册、认证账号</h3><ol><li><p>点击 <a href="https://www.upyun.com/league">这里</a> 进入又拍云联盟官网：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/93542624d20f89a8e7cf4376085a51e8.png" width=80%/></li><li><p>下滑找到 <code>如何加入又拍云联盟</code> ，先去完成步骤1：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/37c4585031f158329e9fad313fd2f4c6.png" width=80%/></li><li><p>注册完成，别忘记实名认证呀！</p></li></ol><h3 id="添加页脚内容"><a href="#添加页脚内容" class="headerlink" title="添加页脚内容"></a>添加页脚内容</h3><ol><li><p>完成了步骤1，接下来是步骤2：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/1b0748846520c6a6306a6828f71c72f2.png" width=30%/></li><li><p>其实就是把它们的logo放在你博客主页，可以直接用我的代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.upyun.com/?utm_source=lianmeng<span class="symbol">&amp;amp;</span>utm_medium=referra&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/gh/xingjiahui/CDN/又拍云_logo.png&quot;</span><span class="attr">align</span>=<span class="string">&quot;absmiddle&quot;</span> <span class="attr">width</span>=<span class="string">&quot;59px&quot;</span> <span class="attr">height</span>=<span class="string">&quot;30px&quot;</span> /&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>提供加速服务<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>博客配置文件中会预留位置让你编辑页脚内容（如下图），可以把代码放到这里来（视自己主题而定）：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/1af74ce898a8a50e1e0ce1de4d7d1133.png" width=80%/><p>效果如下图：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/2dc475d4ff6b14c5a8c65a6b29046aed.png" width=80%/><p>当然您也可以自行编辑，但要实现点击logo会跳转到指定链接（否则在申请时会审核失败）。</p></li></ol><h3 id="填写网站信息"><a href="#填写网站信息" class="headerlink" title="填写网站信息"></a>填写网站信息</h3><blockquote><p>点击步骤3下的立即申请，正确填写信息耐心等待就可以啦！</p></blockquote><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/4d872eb3ccc1101150089664bf0ac4a1.png" width=40%/><ol><li><p>使用又拍云账号需要实名认证，域名需要备案！</p></li><li><p>网站一定要 <code>有内容</code> （多写几篇文章），不然肯定会申请失败。</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/717c73448d85d2cb4269127391010ad9.png" width=90%/></li><li><p>收到下面的邮件代表已经成功加入又拍云联盟，但还不能去用 <code>又拍云CDN</code> ，原因仔细看图：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/5e8a8ac99e70c77a31f5c69e3639b81c.png" width=90%/></li><li><p>上图邮件所提的代金券一般会在周五发放（发放时会发邮件），收到邮件后记得去查收一下，如果没有代金券，联系客服。</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/b3d53516c5a5b4eb645ef4d77e37b414.png" width=60%/></li></ol><h2 id="使用又拍云CDN"><a href="#使用又拍云CDN" class="headerlink" title="使用又拍云CDN"></a>使用又拍云CDN</h2><h3 id="又拍云CDN原理"><a href="#又拍云CDN原理" class="headerlink" title="又拍云CDN原理"></a>又拍云CDN原理</h3><blockquote><p>之前这一部分写的很乱，导致很多小伙伴看了之后更懵了</p></blockquote><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/12/0be6191c22e6b44680feb0bf7add242c.png" width="60%"/><p>注意：</p><ul><li>配置之前想好源站域名、加速域名</li><li>加速域名：以后想用哪个域名访问自己的网站，哪个域名就是加速域名（plushine.cn）</li><li>源站域名（根据使用CDN目的选择）：<ul><li>加速：任选一个二级域名（blog.plushine.cn、cdn.plushine.cn等）</li><li>隐藏服务器IP：选一个不要太容易被猜到的二级域名（sadfsa.plushine.cn等）</li></ul></li></ul><h3 id="创建CDN服务"><a href="#创建CDN服务" class="headerlink" title="创建CDN服务"></a>创建CDN服务</h3><blockquote><p>下文以源站域名：blog.xingjiahui.top 加速域名：xingjiahui.top 为例</p></blockquote><p>进行这一步的前提是你的 <code>又拍云联盟代金券</code> 已经发放！</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/23f474114bcd71a4a6d9c8aff46b6b78.png" width=80%/><ol><li><p>点击 <a href="https://console.upyun.com/services/create/cdn/">这里</a> 进入又拍云官网，点击 <code>控制台</code> 找到 <code>CDN</code> 选择 <code>立即使用</code>：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/12/9b811654ec05ca16a0f5446387794cdd.png" width="80%"/></li><li><p>点击 <code>创建服务</code>，按下图操作：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/1eb816806e31df7e34841b374efd0a57.png" width=80%/></li><li><p>源站设置：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/3e132a0d67e1a6da1c97b49680a7acaf.png" width=80%/></li><li><p>加速区域设置：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/e9fe92bee2ce55eb719da7ffe6ee7a7b.png" width=80%/></li></ol><h3 id="管理CDN服务"><a href="#管理CDN服务" class="headerlink" title="管理CDN服务"></a>管理CDN服务</h3><p>CDN服务创建完成后，点击箭头位置：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/8bab845cf2f6dc0931a0d9f8274eb395.png" width=80%/><p>跳转到服务管理页面：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/6ac77651e736adef52fd9f209933a14f.png" width=80%/><ol><li><p>点击 <code>配置</code> 选择域名添加-&gt;底部弹出框中输入 <code>加速域名</code>（不是源站域名）：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/8a4717962a946d250057b35bce1efcea.png" width=80%/></li><li><p>点击CDN加速域名对应的 <code>CNAME</code> ：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/b69aece2c7e729d98ead76f36e7eb8fe.png" width=80%/><p>复制弹出的记录值：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/f990520a82b5570a83d5b2b47c37cf9e.png" width=80%/></li><li><p>到域名解析平台 <code>添加解析记录</code>（阿里云为例）：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/a88aa8faf98e7f1deb545c02c1c5534b.png" width=50%/><p>上图 <code>主机记录</code> 填写规则：</p><ul><li><code>xingjiahui.top</code>             填写：@</li><li><code>www.xingjiahui.top</code>    填写：www</li><li><code>pan.xingjiahui.top</code>    填写：pan</li><li>…</li></ul></li><li><p>等待验证成功：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/07/ea63b44acd9ee15db7fca370f8d83fd3.png" width=50%/></li></ol><h3 id="配置CDN服务"><a href="#配置CDN服务" class="headerlink" title="配置CDN服务"></a>配置CDN服务</h3><h4 id="HTTPS"><a href="#HTTPS" class="headerlink" title="HTTPS"></a>HTTPS</h4><blockquote><p>强烈建议开启https，但需要一个SSL证书（又拍云提供免费SSL证书）</p></blockquote><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/f25ba943b04462b244731cf797fc9067.png" width=50%/><ol><li><p>已有SSL证书：点击HTTPS-&gt;HTTPS配置-&gt;添加自有证书：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/606477c9b9faadd427eb3c2a87d69c7c.png" width=80%/><p>点击后输入证书的 <code>pem</code> 和 <code>key</code> 点击保存后，按照上图打开 <code>HTTPS访问</code> 并打开 <code>强制HTTPS访问</code> 。</p></li><li><p>无SSL证书，需要申请：</p><p>a. 点击 <a href="https://console.upyun.com/toolbox/ssl/">链接</a> 选择 <code>申购证书</code>：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/d82bb4c411818b59b20fa90046413b1e.png" width=80%/><p>b. 选择要申请的证书并创建订单：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/8eef00978e57880d8dce050a743410e9.png" width=80%/><p>c. 点击<code>确认购买</code>-&gt;确认支付（短信验证码）-&gt;支付成功-&gt;立即前往：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/97141ffc55a3f969da565e1eeff0aec5.png" width=80%/><p>d.补全证书信息 </p><p>​    点击 <code>补全</code> ：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/fa3a61cbde2b4cf337c11a3971a668b9.png" width=80%/><p>​    按照下图 <code>输入证书信息</code> ：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/aa7c0513c557917e1f912807ca73640d.png" width=50%/><p>​    点击 <code>提交</code> ：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/ee032857debbdcb733a41d83ed966615.png" width=50%/><p>​    点击 <code>查看详情</code> 并复制里面 <code>给出的字符串</code>（只显示一次）：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/8ce4d37709ab4de7b1b8b3fd39bf714d.png" width=50%/><p>​    根据提示在 <code>DNS解析</code> 中添加一条 <code>TXT记录</code> ：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/e9175f49974e193f22f44a781eed4447.png" width=60%/><p>e. 等待审核-&gt;证书申请成功：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/a1d7b5a3250f4694499bbaf41eb7e8ad.png" width=80%/><p>f. 开启<code>HTTPS访问</code>和<code>强制HTTPS访问</code>：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/a1d7b5a3250f4694499bbaf41eb7e8ad.png" width=80%/></li></ol><h4 id="其他配置"><a href="#其他配置" class="headerlink" title="其他配置"></a>其他配置</h4><ol><li><p>前面提到的两个配置必须按照教程修改，其他配置可以看 <a href="https://help.upyun.com/docs/functional_configuration/">官方文档</a></p></li><li><p>至此，访问 <code>CDN加速域名</code> 就能看到自己的网站啦！</p></li><li><p>最后放上一张自己 <a href="https://xingjiahui.top">博客</a> 的截图，欢迎访问：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/12/1e5af72672c7a553718cbee6b7cea1b9.png" width="80%"/></li></ol><h2 id="重要更新"><a href="#重要更新" class="headerlink" title="重要更新"></a>重要更新</h2><blockquote><p>我的又拍云图床被攻击了！</p></blockquote><ol><li><p>连续两天收到了同样的 <code>短信提醒</code> ：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/e9b89e1d25a49a786a2b96cad9b92d30.png" width="50%"/><p>昨天没管它，以为代金券余额足得很，今天去又拍云后台看了下：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/fd4c76a6323760e62968810f90f7ad7c.png" width="90%"/><p>具体原因：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/a5b7d1d2ba686495ac42d0d549602a96.png" width="90%"/></li><li><p>反思：</p><ul><li><p>咨询客服，被告知攻击费用不可退还（能理解），建议 <code>拉黑ip</code>，开启 <code>ip访问限制</code>、<code>CC防护</code></p></li><li><p>我也已经向客服建议，新用户（特别是小白用户）建议强制开 启<code>ip访问限制</code> 和 <code>CC防护</code> </p></li><li><p>配置的 <code>具体教程</code> 不再给出，仅把我已经配置好的 <code>截图</code> 上传，希望你们 <code>能够重视</code> </p></li></ul></li></ol><h3 id="ip访问限制"><a href="#ip访问限制" class="headerlink" title="ip访问限制"></a>ip访问限制</h3><blockquote><p>访问控制-&gt;IP 访问限制：</p></blockquote><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/5d8fccd9c30b6b7dd4ac970bbb8ca91d.png" width="60%"/><h3 id="CC防护"><a href="#CC防护" class="headerlink" title="CC防护"></a>CC防护</h3><blockquote><p>访问控制-&gt;CC 防护：</p></blockquote><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/715f75b1ce5df76086b15ea86129620e.png" width="60%"/><h3 id="告攻击者"><a href="#告攻击者" class="headerlink" title="告攻击者"></a>告攻击者</h3><ol><li><p>本次遭受攻击持续时间2.0小时，请求次数近23.71次/s，详细信息见下图：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/905e642669c8116422f58c85bf18367b.png" width="80%"/></li><li><p>攻击者ip：已知但 <code>暂时保密</code></p></li></ol><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/4c7045a2a0daecb4896476ba2bb58d1f.png" width="80%"/><ol start="3"><li><p>黑客守则：<a href="[https://baike.baidu.com/item/%E9%BB%91%E5%AE%A2%E5%AE%88%E5%88%99/140228?fr=aladdin](https://baike.baidu.com/item/黑客守则/140228?fr=aladdin)">百度百科</a></p></li><li><p>最后：攻击很成功，你也达到了你的目的，我也暂时停用 <code>又拍云联盟</code>  提供的 <code>CDN</code> </p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/beade2ceb8f129fb02d51d55d1a29d6d.png" width="50%"/></li></ol><h1 id="百度云加速"><a href="#百度云加速" class="headerlink" title="百度云加速"></a>百度云加速</h1><h2 id="百度云加速原理"><a href="#百度云加速原理" class="headerlink" title="百度云加速原理"></a>百度云加速原理</h2><blockquote><p>把仓库提供的CNAME解析到百度云上，百度云会给你一个新的CNAME，把域名解析到这个新的CNAME上即可</p></blockquote><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/12/a336b97ec8ec7bdf7dd911f297671089.png" width="80%"/><h2 id="登录、认证"><a href="#登录、认证" class="headerlink" title="登录、认证"></a>登录、认证</h2><ol><li><p>点击 <a href="https://su.baidu.com/?ic=GV2h6f">这里</a> 进入官网，注册、登录不在赘述</p></li><li><p>登录后，点击箭头位置进入控制台：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/12/b0a99566c7e731b46981cbb966c15b27.png" width="80%"/></li><li><p>会看到需要实名认证的提示，点击 <code>立即接入</code> 后按要求操作即可：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/12/ec28ac3eec233d4fcafa976853201b46.png" width="50%"/><p>感谢：<a href="https://www.rncns.com/">LGSen’s Blog</a> 提供的图片</p></li></ol><h2 id="配置CDN"><a href="#配置CDN" class="headerlink" title="配置CDN"></a>配置CDN</h2><blockquote><p>以部署在GitHub上的网站为例，域名：xingjiahui.top</p></blockquote><ol><li><p>进入控制台，按下图操作选择 <code>添加网站</code>：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/12/59a5ad76fc078635f28582385773158b.png" width="80%"/></li><li><p>输入域名，并将接入方式切换到CNAME(默认为NS接入)，点击下一步：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/12/e0a2ed6f27f750bd72bdc38eebd4c73c.png" width="80%"/><p>提示验证域名中，稍等即可：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/12/08e2937d5519ae615563c820cfc447cd.png" width="50%"/></li><li><p>将域名解析内容迁移到百度云加速上：</p><ul><li><p>原域名解析内容（阿里云+GitHub为例）：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/12/eb43c38dbce06b20cc7733f7b3ad3a10.png" width="100%"/></li><li><p>将上面的内容迁移到百度云加速：</p><ul><li><p>点击 <code>添加子域名</code>，输入上图中的解析内容：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/12/e2f8d50fc0fc46c1c39cde3a625ce98e.png" width="80%"/></li><li><p>复制新的CNAME：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/12/2e83ec3b98108473c37b69fcdc987d27.png" width="80%"/><p>点击下一步，给出两条解析记录：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/12/4a35761a693030186803848d40d082dd.png" width="80%"/></li><li><p>域名DNS处添加一条CNAME解析记录（TXT记录不要添加）：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/12/c2c8fbc80d3d8b2227e29ec7d90d5ed2.png" width="80%"/></li><li><p>选择免费版，点击完成：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/12/7bb65181bc9975876b7c6eed798cf2c1.png" width="80%"/></li></ul></li></ul></li><li><p>测试：</p><p>win+r，输入cmd，回车，键入：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ping xingjiahui.top</span><br></pre></td></tr></table></figure><p>看蓝框中的内容是否为新生成的CNAME值：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/12/748bd8f5abe03b736c8b1f71381d46c4.png" width="80%"/><p>注意：添加解析记录需要等待一段时间（TTL，10分钟）才能ping成功</p></li></ol><h2 id="管理网站"><a href="#管理网站" class="headerlink" title="管理网站"></a>管理网站</h2><ol><li><p>如果在接入CDN之前开启了强制https，接入CDN后访问网站提示不安全：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/12/ea35b64484b9f7262f41467564c13e26.png" width="80%"/><p>按下图操作将https设置为半程加密：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/12/6161a4574b47982fd124be40a252a458.png" width="80%"/><p>并进入证书管理，上传或申请证书（方法不再赘述）：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/12/b9380d50c502fd602b19c975597d0f5e.png" width="80%"/><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/12/5e8b1031df4b230b34031b0a0dd2ccca.png" width="80%"/><p>配置完成后即可成功访问：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/12/debc71bfb29c229ce04c8b9e39c1787b.png" width="80%"/></li><li><p>网站安全（WAF、IP防火墙、ADS）：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/12/9748fc8964d6a35db6b671c391194cb7.png" width="80%"/><p>CC防护、DDoS防御默认已经开启，其余根据自己网站需求决定是否开启！</p></li><li><p>缓存配置：</p><blockquote><p>仅动态博客需要配置（WordPress等有登录后台），否则后台可能无法登录</p></blockquote><p>进去控制台，找到 <code>其他</code> 点击 <code>特定页面规则</code> 后按下图配置：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/09/14/110915da9397d1807e72926d3f5eeccf.png" width="80%"/></li></ol><h1 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h1><h2 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h2><ul><li><p>又拍云CDN：实名认证简单、加速效果明显、客服全人工</p></li><li><p>百度云加速：配置简单、快捷（单域名）、额度足、默认防护用起来很安心、对百度SEO有优化、超额回源</p></li><li><p>共同：支持https、CC/DDoS防御、速度满意</p></li></ul><h2 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h2><ul><li><p>又拍云CDN：配置麻烦（需要准备两个域名）、防护默认不开启、超额扣余额（额度太少）</p></li><li><p>百度云加速：实名认证麻烦、客服是机器人</p></li><li><p>共同：域名需要备案、账号需要实名认证</p></li></ul><hr/><p>不足之处，欢迎留言，会及时回复，及时更正！</p><p>创作不易，感谢支持！</p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
          <category> CDN </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 百度云加速 </tag>
            
            <tag> 又拍云 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WebSSH神器sshwifty的安装与使用</title>
      <link href="33075.html"/>
      <url>33075.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>本文章最初发表在<a href="https://plushine.cn">XJHui’s Blog</a>，未经允许，任何人禁止转载！</p><p>为使您获得最好的阅读体验，强烈建议您点击 <a href="https://plushine.cn/33075.html">这里</a> 前往 XJHui’s Blog 查看！</p><blockquote><p>因服务器临近到期，个人demo已停止访问</p></blockquote><h1 id="WebSSH工具"><a href="#WebSSH工具" class="headerlink" title="WebSSH工具"></a>WebSSH工具</h1><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/dceacf68d0e56d5f7cac6d4774ad50db.png" width=90% align="center"/><h2 id="初衷"><a href="#初衷" class="headerlink" title="初衷"></a>初衷</h2><ul><li>9.9买的一年服务器，不用实属可惜</li><li>由于是计算机专业实验课经常需要用到linux系统，苦于每次上实验都要被虚拟机各种问题困扰浪费时间</li><li>博客已经搭建好了，完全可以把弄好的WebSSH嵌进去（别想太复杂，其实就是给个入口）</li></ul><h2 id="SSH和WebSSH工具"><a href="#SSH和WebSSH工具" class="headerlink" title="SSH和WebSSH工具"></a>SSH和WebSSH工具</h2><p>因为在<code>搭建博客</code>的时候经常用到SSH，自己对它的理解就是它能实现“远程登陆”，刚看了百度其实这种想法不对。</p><p>SSH(Secure Shell是专为<code>远程登录会话</code>和<code>其他网络服务</code>提供安全性的<code>协议</code>。</p><p>我在用的SSH工具是<code>Xshell</code>（免费版本对我来说足以），通过<code>Xshell</code>输入<code>用户名</code>和<code>密码</code>就能远程登陆服务器。</p><p>通过上面的介绍，应该对<code>WebSSH</code>工具有了一点点的猜想。</p><p><code>WebSSH</code>工具说白了就是把<code>Xshell</code>放到网页上，用户不需要安装，有个<code>联网的浏览器</code>就能<code>控制服务器</code>。</p><h2 id="慎重考虑"><a href="#慎重考虑" class="headerlink" title="慎重考虑"></a>慎重考虑</h2><ol><li>本博客教程使用的<code>WebSSH工具</code>，虽是<code>GitHub</code>开源项目，但安全性较客户端（<code>Xshell</code>一类的）肯定是不够的，使用者请自行注意保护个人隐私安全。</li><li>搭建该<code>WebSSH工具</code>需要<code>云服务器</code>。</li><li>需要<code>linux命令</code>基础（会vim足够）。</li><li>文章随长但也是为了让<code>小白</code>也能掌握，有些不得不<code>啰嗦</code>几句。</li></ol><p>本博客的<code>任务清单</code>已在最后列出，清单未完成前会持续更新…</p><h1 id="WebSSH神器Sshwifty"><a href="#WebSSH神器Sshwifty" class="headerlink" title="WebSSH神器Sshwifty"></a>WebSSH神器Sshwifty</h1><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/8feb49b384ba15d135c6055a26485837.png" width=90% align="center"/><p>项目简介：Web SSH &amp; Telnet (WebSSH &amp; WebTelnet client)</p><p>作者DEMO：<a href="https://sshwifty.herokuapp.com/">https://sshwifty.herokuapp.com</a>（可以点进去<code>体验一下</code>，注意<code>保护个人隐私</code>）</p><p>个人Sshwifty：<a href="https://webssh.xingjiahui.top">https://webssh.xingjiahui.top</a> (安全起见<code>暂时不开放</code>)</p><p>点击访问<a href="https://github.com/niruix/sshwifty">项目地址</a>，感谢作者！</p><p>有能力可以直接去看<a href="https://github.com/niruix/sshwifty/blob/master/README.md">官方文档</a>（<code>小白</code>还是建议老老实实<code>看我教程</code>，能少走些<code>坑</code>）。</p><h1 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h1><ol><li><p>下载<code>sshwifty</code>  </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> wget https://github.com/niruix/sshwifty/releases/download/0.2.2-beta-release-prebuild/sshwifty_0.2.2-beta-release_linux_amd64.tar.gz </span></span><br></pre></td></tr></table></figure><p>注：如果下载<code>速度慢</code>，可以尝试<code>本地下载</code>后使用<code>Xftp</code>上传到服务器（速度飞快）</p><p>由于<code>服务器</code>都在国外（我其实也不清楚，速度慢就是在国外），所以这里提供两个不限速下载链接：</p><ul><li><a href="https://ww.lanzous.com/icf4w7a">sshwifty_0.2.2-beta-release_linux_amd64.tar.gz</a></li><li><a href="https://ww.lanzous.com/icf4wgj">Xftp</a></li></ul><p>感谢<a href="https://pc.woozooo.com/">蓝奏云</a>！</p><p><code>Xftp</code>使用方式很简单：先<code>登录服务器</code>，后<code>拖拽上传</code>（下图）：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/cc94193d329992fe4ad4ead07b8224f9.png" width="80%"/></li><li><p>解压<code>sshwifty</code>  </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> tar -xzvf sshwifty_0.2.2-beta-release_linux_amd64.tar.gz </span></span><br></pre></td></tr></table></figure></li><li><p>复制可执行文件到指定目录并赋予执行权限</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> cp sshwifty_linux_amd64 /usr/<span class="built_in">local</span>/bin/sshwifty </span></span><br><span class="line"><span class="meta">$</span><span class="bash"> chmod +x /usr/<span class="built_in">local</span>/bin/sshwifty </span></span><br></pre></td></tr></table></figure></li><li><p>生成默认配置文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> cp sshwifty.conf.example.json /etc/sshwifty.conf.json </span></span><br></pre></td></tr></table></figure><p>感谢：<a href="https://developer.51cto.com/art/201911/606376.htm">iMike</a></p></li></ol><h1 id="本地运行"><a href="#本地运行" class="headerlink" title="本地运行"></a>本地运行</h1><p>启动 <code>sshwifty</code>，命令行输入：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sshwifty </span></span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/48a27dc0e4b398c7859b76ea208f58aa.png" width="80%"/><p>从上图可以看出本地访问默认使用<code>127.0.0.1:8182</code>这个地址</p><h2 id="可视化系统"><a href="#可视化系统" class="headerlink" title="可视化系统"></a>可视化系统</h2><p>可视化系统可以<code>安装浏览器</code>，安装后可直接<code>输入上面的地址访问</code>。</p><h2 id="服务器端"><a href="#服务器端" class="headerlink" title="服务器端"></a>服务器端</h2><p>因为我用的<code>云服务器</code>，肯定不能像<code>可视化系统</code>那样直接访问，这里介绍如何使用ssh工具（<code>Xshell</code>为例）在自己电脑上远程访问服务器的本地地址（听起来有点绕，但的确是这么个意思）。</p><p>感谢<a href="https://blog.csdn.net/hhhbada/article/details/105099128">hhhbada</a>和<a href="https://www.bt.cn/bbs/thread-1186-1-1.html">宝塔</a>提供的方法。</p><h3 id="开放安全组"><a href="#开放安全组" class="headerlink" title="开放安全组"></a>开放安全组</h3><ul><li><p>腾讯云：<a href="https://www.bt.cn/bbs/thread-1229-1-1.html">https://www.bt.cn/bbs/thread-1229-1-1.html</a></p></li><li><p>阿里云：<a href="https://www.bt.cn/bbs/thread-2897-1-1.html">https://www.bt.cn/bbs/thread-2897-1-1.html</a> </p></li><li><p>华为云：<a href="https://www.bt.cn/bbs/thread-3923-1-1.html">https://www.bt.cn/bbs/thread-3923-1-1.html</a></p><p>根据自己服务器代理商选择对应链接进行操作，因为上面这些<code>开放安全组</code>的方法是我在安装<code>CuteOne</code>时遇到的，差异是最后开放端口时，我们要开放的端口号是8182，仅此一个（这里错了导致无法访问别找我…）。</p></li></ul><h3 id="Xshell建立隧道"><a href="#Xshell建立隧道" class="headerlink" title="Xshell建立隧道"></a>Xshell建立隧道</h3><p>​    版本：Xshell.exe: 6.0.0033（其余版本大同小异）</p><ol><li><p>连接服务器（很简单，自行百度）</p></li><li><p>依次点击：文件（左上角）-&gt;当前会话属性-&gt;连接-&gt;SSH-&gt;隧道，进入到下面的界面：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/3b14dcbd8c8e08bd88984ad82e74db0b.png" width=80% align="center"/></li><li><p>选择<code>添加</code></p><p>这里举例说明<code>添加隧道的规则</code>：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/1d30d3365b6bdd001096f259c0149616.png" width=80% align="center"/><p>​    如果按照上图填写，实现的是我们自己计算机的<code>localhost:8000</code>地址可以访问服务器的<code>localhost:8182</code>，举这个例子应该很清楚了。</p><p>​    为了方便后面的操作，我选择了下面的填写方法：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/3b4f0dad74d63f6f811d916d2d3c32c1.png" width="80%"/><p>​    点击确定（不要点<code>连接</code>）</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/83dc23a44d6bcead83565c51640bd8b7.png" width=80% align="center"/></li></ol><h3 id="本地启动"><a href="#本地启动" class="headerlink" title="本地启动"></a>本地启动</h3><p>输入命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sshwifty</span><br></pre></td></tr></table></figure><p>浏览器输入<code>localhost:8182</code>即可。</p><p>你可能会问前面不是说地址是<code>127.0.0.1</code>？为什么这里又要用localhost？这里说明一下你可以把<code>localhost</code>和<code>127.0.0.1</code>想成<code>同一个东西</code>。</p><p>刚启动如下图：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/617fc2e2e8797c106e5077ace254e54d.png" width="80%"/><p>稍等，即出现验证页面：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/39d2d40d4cceb2e143bdf06204bf2110.png" width=80% align="center"/><p>这样就成功的在本地启动服务器上的sshwifty啦…</p><h1 id="开始使用"><a href="#开始使用" class="headerlink" title="开始使用"></a>开始使用</h1><p>如上图，进入sshwifty后需要输入验证密码，初始验证密码是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">WEB_ACCESS_PASSWORD</span><br></pre></td></tr></table></figure><h2 id="修改验证密码"><a href="#修改验证密码" class="headerlink" title="修改验证密码"></a>修改验证密码</h2><p>正在运行中的<code>sshwifty</code>：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/5e65c36864d5e2cb038a007cfb5cc490.png" width="80%"/><p>停止运行（快捷键）：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Ctrl+C</span><br></pre></td></tr></table></figure><p>打开配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> vim /etc/sshwifty.conf.example.json</span></span><br></pre></td></tr></table></figure><p>找到SharedKey，编辑后面的内容即可修改验证密码：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/9e28e32762b22e175d3f421cc0cc011d.png" width="80%"/><h2 id="本地登陆SSH"><a href="#本地登陆SSH" class="headerlink" title="本地登陆SSH"></a>本地登陆SSH</h2><p>输入验证密码：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/1eadcff2fe216cc643c802b49f0448b4.png" width=80% align="center"/><p>进入主界面：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/fb181fca9b2af865d295cd6e9c568e6a.png" width=80% align="center"/><p>添加SSH：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/3759cf9f416b1e115c5432bfae0dcb03.png" width=80% align="center"/><p>输入服务器信息（注册服务器时填写的，登陆Xshell时也会用到）：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/19ca4c2830c82c83b106b590313c7dc8.png" width=80% align="center"/><p>​    注意：Host处的IP地址为<code>服务器公网IP</code>，如果<code>登陆失败</code>尝试把<code>:22</code>去掉</p><p>选择<code>Yes，I do</code>：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/07e168eed659c36ec598eb6aa72b223a.png" width=80% align="center"/><p>输入<code>服务器登陆密码</code>（不是前面的<code>验证密码</code>！！！）：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/f44b0ddcd1e158ebc2f583cc2734f192.png" width=80% align="center"/><p>进入终端界面：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/dceacf68d0e56d5f7cac6d4774ad50db.png" width=80% align="center"/><p>我心心念念的在线SSH终于看到了苗头（因为现在才只是实现了本地），哈哈！</p><h2 id="使用ip-端口号登陆"><a href="#使用ip-端口号登陆" class="headerlink" title="使用ip:端口号登陆"></a>使用ip:端口号登陆</h2><p>最终失败了，这里想看就看看，不想看直接到<a href="https://plushine.cn/33075.html#绑定域名访问">这里</a>。</p><p>由于根本找不到教程，我就大胆把<code>127.0.0.1</code>改成了我的ip地址：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/7b2ac0075545ee0785bf96852e887322.png" width="50%"/><p>却无法正常使用端口访问，向作者提了<a href="https://github.com/niruix/sshwifty/issues/21">issues#21</a></p><p>给出的方法是修改配置文件ip为：<code>0.0.0.0</code></p><ol><li><p>修改配置文件：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/6ae5b8027576ff93acb204447a64a43e.png" width="50%"/><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/e14190d8734202002a167f2536d46844.png" width="80%"/></li><li><p>地址栏输入<code>ip:8182</code>（ip为服务器公网ip），访问<code>sshwifty</code>：</p></li></ol><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/259a31cfc2e6eb1fa22ea702fe846f69.png" width="80%"/><p>​            输入密码，报错：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/7f167e35c09d8da7ae1e659c14197021.png" width="80%"/><p>​            README中作者给出了解释：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/5872ac45c28590a9e9b834784a9cc7eb.png" width="80%"/><p>​            看不懂？我给你翻译：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/0cffdb1ba2fed648e88ae1cb5d67fa20.png" width="80%"/><ol start="3"><li><p>服务器使用https连接</p><p>最简单的办法莫过于给<code>ip地址</code>申请一个<code>ssl证书</code>，然后在<code>配置文件</code>中添加上。</p><p>于时我去找哪里可以<code>免费</code>为<code>ip</code>颁发<code>SSL证书</code>，于时就看到了：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/b217286e8593e614c35581245ee5e338.png" width="80%"/><p>​        所以，我放弃了，使用<code>ip:端口</code>以失败告终！</p></li><li><p>收获</p><p>虽然失败了，但还是有收获的。</p><p>先看我配置：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/6246d225aa2731518220d98b977108e6.png" width="60%"/><p>稍微懂一定<code>SSL</code>的应该能看出来这是个证书，但与我ip不匹配，我知道肯定会提示不安全，但可以https访问，前面遇到的问题不是<code>非https不能进去？</code>我换成<code>https</code>试试能不能进去，能进去我就继续尝试<code>绑定域名访问</code>，否则<code>就此放弃</code>。</p><p>不出我所料，成功了（能登陆进去）：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/067bead77d4b4e17c1343ec60e2e223c.png" width="80%"/><p>也给了我信心！</p></li></ol><h2 id="绑定域名访问"><a href="#绑定域名访问" class="headerlink" title="绑定域名访问"></a>绑定域名访问</h2><p>下面就是要教你怎么<code>绑定域名</code>啦，看最下面的<code>更新日期</code>能看出来我中间搁了几天，原因是中途遇到的<code>坑</code>太多，中途放弃了，但昨天下午（05.12）突然想到用<code>宝塔面板</code>反代可能会简单些，回到家就先安排上了<code>宝塔面板</code>，开始尝试，进展很顺利，最后也是实现了<code>绑定域名访问</code>。</p><h3 id="安装宝塔面板"><a href="#安装宝塔面板" class="headerlink" title="安装宝塔面板"></a>安装宝塔面板</h3><p>以<code>v5.9</code>为例，参考了<a href="https://www.bt.cn/bbs/thread-1186-1-1.html">官方教程</a>。</p><ol><li><p>开放安全组</p><p>前面已经介绍了，点击<a href="[https://plushine.cn/33075.html#%E5%BC%80%E6%94%BE%E5%AE%89%E5%85%A8%E7%BB%84](https://plushine.cn/33075.html#开放安全组)">这里</a>查看，需要注意的是我们这次要开放的端口是<code>8888</code>，仅此一个。</p><p>贴上我的服务器安全组配置：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/c13b86b19914cd71327cfb655df99b17.png" width="60%"/></li><li><p>安装宝塔面板：</p><p>Centos安装命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install.sh &amp;&amp; sh install.sh</span><br></pre></td></tr></table></figure><p>Ubuntu/Deepin安装命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O install.sh http://download.bt.cn/install/install-ubuntu.sh &amp;&amp; sudo bash install.sh</span><br></pre></td></tr></table></figure><p>Debian安装命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O install.sh http://download.bt.cn/install/install-ubuntu.sh &amp;&amp; bash install.sh</span><br></pre></td></tr></table></figure><p>Fedora安装命令:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O install.sh http://download.bt.cn/install/install.sh &amp;&amp; bash install.sh</span><br></pre></td></tr></table></figure><p>注：</p><ol><li><p>确认是否要安装宝塔，输入y 回车等待安装完即可：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/9532930541592d8344531fe7050195ee.png" width="80%"/></li><li><p>如果安装过程中出现<code>大量黄色字体</code>，说明出现错误（可能是下载错误），尝试重复执行安装命令解决。</p></li><li><p>等待一段时间，如果提示<code>pip install --upgrade pip</code>：</p><p>命令行输入：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install --upgrade pip</span><br></pre></td></tr></table></figure><p>还需要再次输入安装命令（安装命令可重复执行，不用太在意）。</p></li><li><p>出现下图文字表示安装完成：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/603efbc0d17c653cdaadfa380d3cd2e4.png" width="60%"/><p>分别代表登陆链接、账号、密码，注意报错。</p></li></ol></li><li><p>进入宝塔面板：</p><p>打开浏览器，访问给出的登陆链接，输入账号和密码：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/60b1a489c5c4475cc14670344d03ea01.png" width="80%"/><p>就可以进入宝塔面板啦：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/926b78f361e14c0d4f246782dc90ae68.png" width="80%"/></li><li><p>安装反代插件：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/ced89c4a6782fe9d2a18333f26ca6eef.png" width="80%"/><p>注：需要等待一段时间，大约几分钟。</p></li><li><p>开放8182端口：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/8c38a223213c879e680b8360f21ad5f8.png" width="80%"/><p>​    注：如果不放行肯定<code>无法访问</code>，谁给<code>宝塔</code>的权利能比<code>安全组</code>权力还大…</p></li></ol><h3 id="站点配置"><a href="#站点配置" class="headerlink" title="站点配置"></a>站点配置</h3><p>本篇教程使用<code>webssh.xingjiahui.top</code>作为域名访问<code>Sshwifty</code>。</p><ol><li><p>添加站点：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/de558a407cb6601e57b7ea723c0d4c94.png" width="90%"/><p>添加后：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/307f387fd44f6d916681bc4369c89dde.png" width="90%"/></li><li><p>设置SSL证书：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/0aea4c4b63f0e0baa15a07738c9c65f7.png" width="90%"/><p>注：如果你已有证书，先下载下来，选择上图中的<code>其他证书</code>输入证书的<code>pem</code>和<code>key</code>，记得要在<code>证书夹</code>中部署。</p></li><li><p>解析域名：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/18278a6796a9a3d3c6656d8a5004fac9.png" width="90%"/><p>注：主机记录如果不会填写，看这里：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/500b094016ebd4ea19a78049d5a20863.png" width="50%"/></li></ol><h3 id="Nginx反代配置"><a href="#Nginx反代配置" class="headerlink" title="Nginx反代配置"></a>Nginx反代配置</h3><p>反代是什么？举个例子，你有个域名<code>baidu.com</code>，你想实现浏览器输入<code>baidu.com</code>进去的是<code>hao123.com</code>，反代的作用就是帮你实现这个（个人理解）。</p><p>再想想反代的条件：</p><ul><li>自己得有个域名。</li><li>反代的域名能够直接访问。</li></ul><p>把上面的条件拿到我们的Sshwifty这里来：</p><ul><li>自己的域名：<code>webssh.xingjiahui.top</code>    </li><li>反代的域名：<code>ip:端口号</code></li></ul><p>按照下图操作：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/e0a8405bd46b2531fd1aca235b4fb607.png" width="70%"/><p>此时直接在浏览器输入上面的地址是没有效果的，因为Sshwifty没有启动。</p><h3 id="Sshwifty配置"><a href="#Sshwifty配置" class="headerlink" title="Sshwifty配置"></a>Sshwifty配置</h3><p>进入配置文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> vim /etc/sshwifty.conf.json</span></span><br></pre></td></tr></table></figure><p>按照下图修改（蓝框中信息一定要与我的一致）：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/54d2d129770f467cb27c359289e9ce22.png" width="50%"/><h3 id="启动Sshwifty"><a href="#启动Sshwifty" class="headerlink" title="启动Sshwifty"></a>启动Sshwifty</h3><p>输入命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sshwifty</span><br></pre></td></tr></table></figure><p>运行结果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/43556b937aa7709f996b7e46e493741c.png" width="80%"/><p>使用前面的域名访问：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/12b8d16b335dbc448a5fbd7baaf27709.png" width="80%"/><p>还有一个问题，如果此时在命令行按下<code>CTRL+C</code>，<code>Sshwifty服务</code>就会停止，应该怎么避免这样？</p><p>我首先想到的就是<code>后台运行</code>，之前接触过<code>nohup</code>：</p><p>怎么判断是否安装？</p><p>输入which nohub，如果出现/usr/bin/nohup 说明已经安装了，执行以下命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup sshwifty &amp;</span><br></pre></td></tr></table></figure><p>如果<code>没有安装</code>，可以根据<a href="https://blog.csdn.net/weixin_43926604/article/details/96001694">这篇文章</a>进行操作。</p><p>没错，到这里就实现了<code>使用域名访问你的Sshwifty</code>。</p><p>记得要看看下面的问题，你很有可能会遇到。</p><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><h3 id="Error-1006"><a href="#Error-1006" class="headerlink" title="Error (1006)"></a>Error (1006)</h3><p>问题重现：创建SSH时，浏览器弹窗：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/593a83b57f39eb65ab6911711728120c.png" width="50%"/><p>在GitHub项目地址的<a href="https://github.com/niruix/sshwifty/issues/9">issues9</a>中给出了解决方法：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">map $http_upgrade $connection_upgrade &#123; default upgrade; &#x27;&#x27; close; &#125;</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">proxy_set_header Upgrade $http_upgrade; </span><br><span class="line">proxy_set_header Connection $connection_upgrade;</span><br></pre></td></tr></table></figure><p>第一步：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/bf5f7fed7e0438b3bf0ae7a27f42ac15.png" width="80%"/><p>第二步：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/adab68156ab635c5a4f4ae5981be034f.png" width="80%"/><p>​    注：如果实在不知道加在哪里，可以<code>先根据行号</code>找到<code>大概位置</code>然后<code>根据前后代码</code>找到<code>具体位置</code>粘进去。</p><h3 id="Time-difference"><a href="#Time-difference" class="headerlink" title="Time difference"></a>Time difference</h3><p>问题重现：浏览器访问<code>Sshwifty</code>并<code>创建ssh</code>后，关闭浏览器重新访问，报错：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/5c372ca57a62977bd38617ad234183c2.png" width="80%"/><p>但<code>每次</code>退出后<code>重新访问</code>都会出现这个问题，解决方法：</p><p>删除配置文件中：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">        proxy_pass http://121.36.2.183:8182;</span><br><span class="line">        proxy_set_header Host 121.36.2.183:8182;</span><br><span class="line">        proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">        proxy_set_header REMOTE-HOST $remote_addr;</span><br><span class="line">                </span><br><span class="line">        #持久化连接相关配置</span><br><span class="line">        #proxy_connect_timeout 30s;</span><br><span class="line">        #proxy_read_timeout 86400s;</span><br><span class="line">        #proxy_send_timeout 30s;</span><br><span class="line">        #proxy_http_version 1.1;</span><br><span class="line">        #proxy_set_header Upgrade $http_upgrade;</span><br><span class="line">        #proxy_set_header Connection &quot;upgrade&quot;;</span><br><span class="line">        </span><br><span class="line">        add_header X-Cache $upstream_cache_status;</span><br><span class="line">        </span><br><span class="line">        expires 12h;</span><br><span class="line">        proxy_set_header Upgrade $http_upgrade; </span><br><span class="line">        proxy_set_header Connection $connection_upgrade;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在原位置添加（记得先修改下面的<code>你的ip:端口号</code>）：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">     proxy_pass http://你的ip:端口号;</span><br><span class="line">     proxy_set_header Host $host;</span><br><span class="line">     proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">     proxy_set_header X-Forwarded-Proto https;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">location /sshwifty/socket &#123;</span><br><span class="line">     proxy_pass http://你的ip:端口号;</span><br><span class="line">     proxy_http_version 1.1;</span><br><span class="line">     proxy_set_header Host $host;</span><br><span class="line">     proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">     proxy_set_header X-Forwarded-Proto https;</span><br><span class="line">     proxy_set_header Upgrade $http_upgrade;</span><br><span class="line">     proxy_set_header Connection $connection_upgrade;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="更新完毕"><a href="#更新完毕" class="headerlink" title="更新完毕"></a>更新完毕</h1><ol><li>本地实现SSH（已完成，2020.05.06）</li><li><code>ip:端口号</code>实现登陆（失败，2020.05.09）</li><li>绑定域名（已完成，2020.05.13）</li><li>*魔改ui（放弃）</li></ol><p>注：标星表示随时可能会放弃</p><hr><p>不足之处，欢迎留言，评论会及时回复，错误会及时更正！</p><p>创作不易，感谢支持！</p><p>最后的最后，欢迎访问我的个人博客<a href="https://plushine.cn">XJHui’s Blog</a>。</p>]]></content>
      
      
      <categories>
          
          <category> 使用教程 </category>
          
          <category> WebSSH </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WebSSH </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何删除突然多出来的CD驱动器</title>
      <link href="34608.html"/>
      <url>34608.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><div class="note warning flat"><p>本教程仅适用于安装UltraISO后出现的“CD驱动器”</p></div><p>“CD驱动器”长的就是下面这个样子</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/6cc1eca1a630d003f8c61c587481d796.png" width=80% align="center"/><p>说实话看它不顺眼很长时间了，要么没时间弄要么想不起来，刚才<code>终于终于</code>把他删掉了。</p><h1 id="问题背景"><a href="#问题背景" class="headerlink" title="问题背景"></a>问题背景</h1><p>系统：<code>win10</code></p><p>应用版本：<code>UltraISO 9.7.2.3561</code></p><p>复现：每次打开<code>此电脑</code>都能看到它的身影，可我强迫症并不那么想看到它自己在哪单独一行。</p><p>解决后效果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/c1525e61b9df418d61fd88256ca68cee.png" width=80% align="center"/><h1 id="尝试解决"><a href="#尝试解决" class="headerlink" title="尝试解决"></a>尝试解决</h1><h2 id="右键弹出"><a href="#右键弹出" class="headerlink" title="右键弹出"></a>右键弹出</h2><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/233faaf103bc82d1df0fd8aee2817195.png" width=80% align="center"/><p>呸，呵呵。</p><h2 id="软件内关闭"><a href="#软件内关闭" class="headerlink" title="软件内关闭"></a>软件内关闭</h2><blockquote><p>还是不百度，我知道肯定能去掉，既然弹不出来那我就去软件里面把你关闭</p></blockquote><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/d093426979a859dafe6fff60cbee5780.png" width=80% align="center"/><p>开心呀，迅速打开<code>此电脑</code>，然后…</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/6cc830ed06d78352db135d31835b7015.png" width=80% align="center"/><p>呸，呵呵。</p><h1 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h1><blockquote><p>没错我<code>百度</code>了</p></blockquote><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/05/25/1854a1252e4df39cf74094543f9f2552.png" width=80% align="center"/><p>必须要选择<code>管理员身份</code>运行，不知道为什么？</p><p><code>创建</code>的时候也不需要<code>管理员身份</code>呀，有知道的小伙伴可以在下面<code>留言</code>。</p><h1 id="感谢"><a href="#感谢" class="headerlink" title="感谢"></a>感谢</h1><p><a href="https://jingyan.baidu.com/article/ff42efa91ba2b6c19e220298.html">百度经验</a></p>]]></content>
      
      
      <categories>
          
          <category> 电脑问题 </category>
          
          <category> CD驱动器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CD驱动器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决Chrome播放视频闪黑屏</title>
      <link href="36523.html"/>
      <url>36523.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="问题背景"><a href="#问题背景" class="headerlink" title="问题背景"></a>问题背景</h1><p>系统：<code>Win10</code></p><p>应用版本：<code>81.0.4044.113（正式版本） （64 位）</code></p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/image/img1/20200417121445.png" width=80%/><p>复现：观看<code>b站视频</code>时，闪黑屏概率特别大（有声音）。</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/image/img1/20200417121627.gif" width=80%/><p>解决后效果：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/image/img1/20200417121634.gif" width=80%/><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>进入Chrome设置，搜索<code>硬件加速模式</code>，按照下图<code>关闭按钮</code>后<code>重启Chrome</code>，即可<code>解决问题</code>。</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/image/img1/20200417122346.png" width=100%/><h1 id="感谢"><a href="#感谢" class="headerlink" title="感谢"></a>感谢</h1><p><a href="https://tieba.baidu.com/p/5581756462">digkeeper</a>(百度贴吧)</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/image/img1/20200417131337.png" width=100%/>]]></content>
      
      
      <categories>
          
          <category> 电脑问题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Chrome闪黑屏 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo常用插件</title>
      <link href="54808.html"/>
      <url>54808.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="博客备份"><a href="#博客备份" class="headerlink" title="博客备份"></a>博客备份</h1><p><code>备份</code> 真的很重要，希望刚建好博客就安排上！</p><h2 id="hexo-git-backup"><a href="#hexo-git-backup" class="headerlink" title="hexo-git-backup"></a>hexo-git-backup</h2><p>GitHub项目地址在 <a href="https://github.com/coneycode/hexo-git-backup">这里</a>，感谢作者</p><p>官方文档]在 <a href="https://github.com/coneycode/hexo-git-backup/blob/master/README.md">这里</a>。</p><p>安装过程也没什么坑，主要就是想介绍一种博客备份的方法。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>hexo 版本为 2.x.x 执行以下命令:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-git-backup@0.0.91 --save</span><br></pre></td></tr></table></figure><p>版本为 3.x.x/ 4.0.0+ , 执行下面的命令:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-git-backup --save</span><br></pre></td></tr></table></figure><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><blockquote><p>强烈推荐使用 <code>方法二</code> </p></blockquote><h3 id="不安全法"><a href="#不安全法" class="headerlink" title="不安全法"></a>不安全法</h3><ol><li><p>在GitHub中新建项目分支</p> <img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/image/img2/20200412222555.png" width=80%/></li><li><p>在Hexo的配置文件<code>_config.yml</code>（非主题配置文件）下添加如下字段.</p> <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">backup:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">    <span class="attr">repository:</span></span><br><span class="line">       <span class="attr">github:</span> <span class="string">git@github.com:xxx/xxx.github.io.git,branchName(分支名)</span></span><br></pre></td></tr></table></figure><p> 配置文件截图：</p> <img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/image/img2/20200412222719.png" width=80%/></li></ol><h3 id="安全方法"><a href="#安全方法" class="headerlink" title="安全方法"></a>安全方法</h3><blockquote><p>新建仓库，例如 <code>Hexo_backup</code> ，权限设为 <code>private</code> ，分支使用 <code>master</code>  。</p></blockquote><ol><li><p>先获取项目<code>ssh</code>链接：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/10/9ef463f5fbdd09fd7b36847bcbc2d58e.png" width="50%"/></li><li><p>命令行输入：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add backup 你获取的ssh链接</span><br></pre></td></tr></table></figure><p>例如：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/10/c089af29c882b96178f640316230c5aa.png" width="70%"/></li><li><p>修改 <code>配置文件</code> 中的链接地址：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/06/10/f23b5d8f8a13f5a91e53b0633b8752a1.png" width="70%"/></li></ol><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo backup </span><br></pre></td></tr></table></figure><p>简写为</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo b</span><br></pre></td></tr></table></figure><p>至此博客备份就实现啦！</p><h1 id="音乐播放器"><a href="#音乐播放器" class="headerlink" title="音乐播放器"></a>音乐播放器</h1><blockquote><p>在自己的博客中添加音乐播放器</p></blockquote>    <div id="aplayer-orZWUoIZ" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="4966259071" data-server="netease" data-type="playlist" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#49A6F9" data-volume="0.5"    ></div><h2 id="hexo-tag-aplayer"><a href="#hexo-tag-aplayer" class="headerlink" title="hexo-tag-aplayer"></a>hexo-tag-aplayer</h2><blockquote><p>Embed aplayer in Hexo posts/pages. <a href="https://github.com/MoePlayer/hexo-tag-aplayer">GitHub项目地址</a>，感谢作者。</p></blockquote><p>插件功能很强大，这里主要介绍如何使用其中一个功能<code>MeingJS</code>，想了解更多功能可以去看<a href="https://github.com/MoePlayer/hexo-tag-aplayer/blob/master/docs/README-zh_cn.md">官方文档</a>。</p><p><code>MeingJS</code>支持从网易云音乐等平台获取id（歌曲 id / 播放列表 id / 相册 id / 搜索关键字）后配合代码模板，即可在页面显示。显示效果如下图：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/image/img2/20200413104958.png" width=75%/><p>播放器支持的功能：</p><ol><li>歌曲列表、歌词显示、音量调节、进度可</li><li>平台支持：网易云音乐、QQ音乐、虾米、酷狗、百度</li><li>播放器风格色彩设置、自动播放…</li></ol><h2 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-tag-aplayer</span><br></pre></td></tr></table></figure><h2 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h2><blockquote><p>若无法正常显示播放器，则可能是下列js版本过低</p></blockquote><ul><li>APlayer.js &gt; 1.8.0</li><li>Meting.js &gt; 1.1.1</li></ul><h2 id="使用-1"><a href="#使用-1" class="headerlink" title="使用"></a>使用</h2><ol><li><p>配置Hexo的配置文件<code>_config.yml</code>（非主题配置文件）添加如下字段：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">aplayer:</span></span><br><span class="line">  <span class="attr">meting:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>如下图：</p><p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/image/img1/20200413122059.png" alt="image-20200413111737990"></p></li><li><p>获取歌词、歌单id（网易云为例）：</p><ul><li><p>进入网易云音乐，打开想添加的<code>歌单</code>，点击分享后复制链接：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/image/img1/20200413110506.png" width=80%/><p>若想要添加<code>单个歌曲</code>：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/image/img1/20200413111250.png" width=80%/></li><li><p>将链接粘贴到浏览器，找到下图位置的字符串，即为<code>歌曲、歌单id</code>：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/image/img1/20200413111007.png" width=80%/></li></ul></li><li><p>在markdown文件中如如下面的<code>代码模板</code>即可：</p> <figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% meting &quot;获取的id&quot; &quot;netease&quot; &quot;playlist&quot; &quot;volume:0.5&quot; &quot;theme:#49A6F9&quot; %&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>hexo clean &amp; hexo g &amp; hexo depl</code> 后就能在页面中显示啦：</p></li></ol><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/image/img2/20200413104958.png" width=75%/><h2 id="标签参数"><a href="#标签参数" class="headerlink" title="标签参数"></a>标签参数</h2><blockquote><p>下表中的<code>音乐平台</code>分别代表：<code>网易云</code>、<code>QQ音乐</code>、<code>酷狗</code>、<code>虾米</code>、<code>百度</code></p></blockquote><table><thead><tr><th>选项</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>id</td><td>必须值</td><td>歌曲 id / 播放列表 id / 相册 id / 搜索关键字</td></tr><tr><td>server</td><td>必须值</td><td>音乐平台: <code>netease</code>, <code>tencent,</code>kugou<code>,</code>xiami<code>,</code>baidu`</td></tr><tr><td>type</td><td>必须值</td><td><code>song</code>, <code>playlist</code>, <code>album</code>, <code>search</code>, <code>artist</code></td></tr><tr><td>fixed</td><td><code>false</code></td><td>开启固定模式</td></tr><tr><td>mini</td><td><code>false</code></td><td>开启迷你模式</td></tr><tr><td>loop</td><td><code>all</code></td><td>列表循环模式：<code>all</code>, <code>one</code>,<code>none</code></td></tr><tr><td>order</td><td><code>list</code></td><td>列表播放模式： <code>list</code>, <code>random</code></td></tr><tr><td>volume</td><td>0.7</td><td>播放器音量</td></tr><tr><td>lrctype</td><td>0</td><td>歌词格式类型</td></tr><tr><td>listfolded</td><td><code>false</code></td><td>指定音乐播放列表是否折叠</td></tr><tr><td>storagename</td><td><code>metingjs</code></td><td>LocalStorage 中存储播放器设定的键名</td></tr><tr><td>autoplay</td><td><code>true</code></td><td>自动播放，移动端浏览器暂时不支持此功能</td></tr><tr><td>mutex</td><td><code>true</code></td><td>该选项开启时，如果同页面有其他 aplayer 播放，该播放器会暂停</td></tr><tr><td>listmaxheight</td><td><code>340px</code></td><td>播放列表的最大长度</td></tr><tr><td>preload</td><td><code>auto</code></td><td>音乐文件预载入模式，可选项： <code>none</code>, <code>metadata</code>, <code>auto</code></td></tr><tr><td>theme</td><td><code>#ad7a86</code></td><td>播放器风格色彩设置</td></tr></tbody></table><blockquote><p>可按照上表在<code>代码模板</code>中修改</p></blockquote><h1 id="文章永久链接"><a href="#文章永久链接" class="headerlink" title="文章永久链接"></a>文章永久链接</h1><blockquote><p>今天看自己博客的时候突然发现个很严重的问题，为什么每篇博客的阅读量、评论量都变为0了？仔细想想刚才干嘛了？哦，<code>hexo clean&amp;hexo g&amp;hexo depl</code> 和这个有关系？再次运行，果不其然！生气！</p></blockquote><p>于是去valine群里面问了这个问题：</p><p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/image/img1/20200415122410.png" alt="image-20200415122359183"></p><p>同时也在想，我对文章做了什么修改？我把文章链接的依据修改成了id，<code>据说每次id都不同</code>，导致valine识别成了新文章，阅读量什么的肯定0。</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/image/img1/20200415122751.png" width=70%/><p>因为开始的链接太长（类似下图），所以我才修改的。</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/image/img1/20200415123246.png" width=80%/><p>把这个链接太长的问题反馈给了butterfly群友，大佬们就告诉我了这个永久链接的插件。</p><p>效果见下图：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/image/img1/20200415123449.png" width=80%/><p>哇，好清爽。</p><h2 id="hexo-abbrlink"><a href="#hexo-abbrlink" class="headerlink" title="hexo-abbrlink"></a>hexo-abbrlink</h2><blockquote><p>create one and only link for every post for hexo.  <a href="https://github.com/rozbo/hexo-abbrlink">github项目地址</a>，感谢作者。</p></blockquote><p>文档可以<a href="https://github.com/rozbo/hexo-abbrlink/blob/master/README.md">点击</a>查看。</p><p>安装没什么坑，目的依然是<code>提醒</code>有这么一种插件解决遇到的问题。</p><h2 id="安装-2"><a href="#安装-2" class="headerlink" title="安装"></a>安装</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-abbrlink --save</span><br></pre></td></tr></table></figure><p>注，如果安装失败，可以尝试cnpm安装：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org #安装淘宝源</span><br><span class="line">cnpm install hexo-abbrlink --save #使用cnpm安装hexo-abbrlink</span><br></pre></td></tr></table></figure><h2 id="配置-1"><a href="#配置-1" class="headerlink" title="配置"></a>配置</h2><p>进入Hexo配置文件（非主题配置文件），找到<code>permalink</code>，按下图修改：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/image/img1/20200415124827.png" width=40% height=100px /><p>代码如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">permalink:</span> <span class="string">posts/:abbrlink/</span></span><br></pre></td></tr></table></figure><p>为了方便爬虫爬取，也可以将代码修改为：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">permalink:</span> <span class="string">:abbrlink.html</span></span><br></pre></td></tr></table></figure><h2 id="使用-2"><a href="#使用-2" class="headerlink" title="使用"></a>使用</h2><p>命令行输入：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp; hexo g &amp; hexo depl</span><br></pre></td></tr></table></figure><p>文章链接就发生改变了：</p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/image/img1/20200415125245.png" width=80%/><p>开心，再也不嫌文章链接长了！</p><h1 id="持续更新中…"><a href="#持续更新中…" class="headerlink" title="持续更新中…"></a>持续更新中…</h1><p>如果文章对您有帮助，欢迎评论处<code>好评</code>，哈哈。</p><p>最近一次更新时间：<strong>04/15/2020 12:56:56</strong></p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
          <category> 插件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客备份 </tag>
            
            <tag> 音乐播放器 </tag>
            
            <tag> 永久链接 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>图床搭建以及图床工具的使用</title>
      <link href="3726.html"/>
      <url>3726.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="最新版本教程，前往这里查看"><a href="#最新版本教程，前往这里查看" class="headerlink" title="最新版本教程，前往这里查看"></a>最新版本教程，前往<a href="https://xingjiahui.top/38834.html">这里</a>查看</h1><div class="note info flat"><p>为什么要用图床和图床工具？</p></div><p><strong>比较下面三种md中的图片url地址（均免费），你会使用哪一种？</strong></p><p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN/about/20200408205405.png" alt=""></p><ul><li>选1？由于是本地路径，文档分享后给其他人打开后很可能显示图片加载失败。</li><li>选2？虽然分享后可以显示图片，但能保证加载速度？</li><li>选3？我肯定选这种，即兼容2的浏览器访问，又能保证访问速度。</li></ul><p>这样就可以回答上面的问题了！保证浏览器访问要用<code>图床</code>，保证加载速度要用<code>图床工具</code>，又<code>不花钱</code>想想就开心。</p><p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN/about/20200408210941.png" alt=""></p><blockquote><p>除此之外本篇博客还会讲解新版本Typora与PicGo搭配使用时可能出现的问题及解决方法。</p></blockquote><h2 id="GitHub图床搭建与使用"><a href="#GitHub图床搭建与使用" class="headerlink" title="GitHub图床搭建与使用"></a>GitHub图床搭建与使用</h2><h3 id="搭建图床"><a href="#搭建图床" class="headerlink" title="搭建图床"></a>搭建图床</h3><p>说的那么高深其实就是在GitHub中新建一个仓库，然后将图片存放在新建的仓库中。</p><p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN/about/20200408220140.png" alt=""></p><p>回到主页就能看到新建的仓库了</p><p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/CDN/about/20200408215022.png" alt=""></p><h3 id="在markdown中使用图床"><a href="#在markdown中使用图床" class="headerlink" title="在markdown中使用图床"></a>在markdown中使用图床</h3><blockquote><p>不管你是<code>git</code>或<code>拖拽</code>只要把图片导入到仓库就可以使用图床中的图片了（我不会git只能性感拖拽了…）</p></blockquote><h4 id="拖拽图片到仓库"><a href="#拖拽图片到仓库" class="headerlink" title="拖拽图片到仓库"></a>拖拽图片到仓库</h4><p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/image/img/20200409101659.png" alt=""></p><p>如果上传出现问题，请仔细阅读下图。</p><p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/image/img1/20200409210558.png" alt=""></p><h4 id="查看图片链接"><a href="#查看图片链接" class="headerlink" title="查看图片链接"></a>查看图片链接</h4><p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/image/img/20200409110153.png" alt=""></p><h4 id="md中引用图片"><a href="#md中引用图片" class="headerlink" title="md中引用图片"></a>md中引用图片</h4><p>新建markdown文件，输入下面的信息：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![](https://cdn.jsdelivr.net/gh/xingjiahui/image/img/20200409111309.png)</span><br></pre></td></tr></table></figure><p>就能显示图片啦！</p><p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/image/img/20200409111309.png" alt=""></p><div class="note success flat"><p>至此，图床就搭建完成了。（好像很容易…）</p></div><h3 id="使用jsDelivr加速"><a href="#使用jsDelivr加速" class="headerlink" title="使用jsDelivr加速"></a>使用jsDelivr加速</h3><p>​        建好了图床可以在浏览器中访问了，这样就够了吗？想想你平时访问GitHub的速度，还可能把特别大的图片放在仓库中，加载速度属实急人啊！没事，<a href="https://www.jsdelivr.com/">jsDelivr</a>帮你解决了这个问题。</p><h4 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h4><p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/image/img/20200409112703.png" alt=""></p><p>看不懂？没事，会套模板就行。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![](https://cdn.jsdelivr.net/gh/xingjiahui/image/img/20200409112703.png)</span><br></pre></td></tr></table></figure><p>能看出来什么规律？</p><p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/image/img/20200409113545.png" alt=""></p><blockquote><p>仓库中的文件无论什么格式都可以这样加速（上面是我常用的一种方法，想具体了解可以看官方文档）</p></blockquote><h2 id="Typora搭配PicGo使用"><a href="#Typora搭配PicGo使用" class="headerlink" title="Typora搭配PicGo使用"></a>Typora搭配PicGo使用</h2><p><a href="https://www.typora.io/">Typora</a>是一款markdown编辑器，独特之处见下面gif（我是爱不释手）。</p><p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/image/img/20200409120939.gif" alt=""></p><p><a href="https://github.com/Molunerfinn/PicGo/releases">PicGo</a>可以使用除<code>git</code>和<code>拖拽</code>以外的第三种方法向图床传送文件，支持上传多种图床（微博图床、七牛图床…），还支持自动复制链接等功能。</p><p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/image/img1/20200409121806.png" alt=""></p><blockquote><p>最新版本Typora和PicGo牵手成功，解决了在typora中不能直接将本地图片上传到图床的问题，无奈的是bug巨多（又不是不能用…），静等修复。</p></blockquote><h3 id="工具下载"><a href="#工具下载" class="headerlink" title="工具下载"></a>工具下载</h3><p>点击<a href="https://www.lanzous.com/b00zdvy5e">下载</a>，密码：<code>6kjr</code>，感谢 <a href="https://blog.csdn.net/disILLL">LeonG777</a>。</p><div class="note warning flat"><p>建议安装路径中不要出现中文或空格</p></div><p>怎么写markdown就不多介绍了，一搜一大堆…</p><h3 id="配置Typora"><a href="#配置Typora" class="headerlink" title="配置Typora"></a>配置Typora</h3><p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/image/img1/20200409134616.png" alt=""></p><h3 id="配置PicGo"><a href="#配置PicGo" class="headerlink" title="配置PicGo"></a>配置PicGo</h3><h4 id="生成token"><a href="#生成token" class="headerlink" title="生成token"></a>生成token</h4><p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/image/img1/20200409192555.png" alt=""></p><h4 id="设置PicGo"><a href="#设置PicGo" class="headerlink" title="设置PicGo"></a>设置PicGo</h4><p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/image/img1/20200409193559.png" alt=""></p><p>图中模板（视情况自行更改）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://cdn.jsdelivr.net/gh/GitHub用户名/图床仓库名</span><br></pre></td></tr></table></figure><h3 id="使用Typora上传图片"><a href="#使用Typora上传图片" class="headerlink" title="使用Typora上传图片"></a>使用Typora上传图片</h3><h4 id="拖拽上传"><a href="#拖拽上传" class="headerlink" title="拖拽上传"></a>拖拽上传</h4><p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/image/img1/20200409194551.gif" alt=""></p><h4 id="粘贴上传"><a href="#粘贴上传" class="headerlink" title="粘贴上传"></a>粘贴上传</h4><p>应该很好理解，截完屏直接粘贴就好了。</p><p>如果出现<code>错误</code>，继续往下看。</p><h2 id="Typora常见错误"><a href="#Typora常见错误" class="headerlink" title="Typora常见错误"></a>Typora常见错误</h2><h3 id="无法创建upload"><a href="#无法创建upload" class="headerlink" title="无法创建upload"></a>无法创建upload</h3><p><a href="https://github.com/typora/typora-issues/issues/3331">#3331</a>已知bug关闭即可，等待修复吧（图源issues）。</p><p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://user-images.githubusercontent.com/8568937/76057521-c01b7b80-5fb4-11ea-8835-8191ff969adf.png" alt="img"></p><h3 id="“success”-false"><a href="#“success”-false" class="headerlink" title="{“success”,false}"></a>{“success”,false}</h3><h4 id="原因1-仓库中文件名重复"><a href="#原因1-仓库中文件名重复" class="headerlink" title="原因1 仓库中文件名重复"></a>原因1 仓库中文件名重复</h4><p>上传的文件与仓库中的文件名称重复，打开时间戳重命名即可解决。</p><p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL3hpbmdqaWFodWkvaW1hZ2UvaW1nMS8yMDIwMDQwOTIwMDUzMC5wbmc?x-oss-process=image/format,png" alt=""></p><h4 id="原因2-上传GitHub失败导致"><a href="#原因2-上传GitHub失败导致" class="headerlink" title="原因2 上传GitHub失败导致"></a>原因2 上传GitHub失败导致</h4><p>若已经在PicGo中启用<code>时间戳重命名</code>则很可能是由于<code>上传GitHub失败</code>导致的错误。<br>按照下图退出后重复尝试（多试几次）。<br><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL3hpbmdqaWFodWkvaW1hZ2UvaW1nMS8yMDIwMDQwOTIwMjQ1MC5wbmc?x-oss-process=image/format,png" alt=""></p><blockquote><p>我试过用Typora上传失败的图片，不做任何修改在PicGo能上传成功（可能是该版本Typora的问题）。</p></blockquote><h3 id="Failed-to-fetch"><a href="#Failed-to-fetch" class="headerlink" title="Failed to fetch"></a>Failed to fetch</h3><p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/image/img1/20200409213518.png" alt=""></p><p>修改后，记得先退出PicGo，再进入Typora上传图片。</p><p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/image/img1/20200409202450.png" alt=""></p><h3 id="粘贴截图不显示"><a href="#粘贴截图不显示" class="headerlink" title="粘贴截图不显示"></a>粘贴截图不显示</h3><p>类似下面这种：<img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/image/img1/20200409202816.png" alt="image-20200409202814020"></p><p>解决方法：<br><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://img-blog.csdnimg.cn/20200412150709236.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzM1MDA1MQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="感谢"><a href="#感谢" class="headerlink" title="感谢"></a>感谢</h2><p><a href="https://blog.csdn.net/disILLL/article/details/104944710">LeonG777</a>这篇文章提到通过查看PicGo的日志文件来判断无法上传图片的原因，但我经常再日志文件中看到下面这种，暂时无解，如果您知道原因或发现文章不足之处，欢迎评论、留言告知。</p><p><img src= "https://cdn.jsdelivr.net/gh/xingjiahui/CDN@latest/2020/07/17/09d3e39264b9174dbc352c1a83898459.png" data-lazy-src="https://cdn.jsdelivr.net/gh/xingjiahui/image/img1/20200409205059.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
          <category> 图床 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图床搭建 </tag>
            
            <tag> PicGo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
